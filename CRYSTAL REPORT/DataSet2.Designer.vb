'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.18063
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("DataSet2"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class DataSet2
    Inherits Global.System.Data.DataSet
    
    Private tablemembermaster As membermasterDataTable
    
    Private tableView_DRCR_SUM As View_DRCR_SUMDataTable
    
    Private tableMEM_POS_DET As MEM_POS_DETDataTable
    
    Private tableVIEW_WBST As VIEW_WBSTDataTable
    
    Private tableView_Recipt_DetCCL As View_Recipt_DetCCLDataTable
    
    Private tableMEMBER_CONSUMPTION_OUTLET As MEMBER_CONSUMPTION_OUTLETDataTable
    
    Private tableVW_CommitteeTransaction As VW_CommitteeTransactionDataTable
    
    Private tableaccountsglaccountmaster As accountsglaccountmasterDataTable
    
    Private tableGSTSUBSBILLDETAILS As GSTSUBSBILLDETAILSDataTable
    
    Private tableclubmaster As clubmasterDataTable
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("membermaster")) Is Nothing) Then
                MyBase.Tables.Add(New membermasterDataTable(ds.Tables("membermaster")))
            End If
            If (Not (ds.Tables("View_DRCR_SUM")) Is Nothing) Then
                MyBase.Tables.Add(New View_DRCR_SUMDataTable(ds.Tables("View_DRCR_SUM")))
            End If
            If (Not (ds.Tables("MEM_POS_DET")) Is Nothing) Then
                MyBase.Tables.Add(New MEM_POS_DETDataTable(ds.Tables("MEM_POS_DET")))
            End If
            If (Not (ds.Tables("VIEW_WBST")) Is Nothing) Then
                MyBase.Tables.Add(New VIEW_WBSTDataTable(ds.Tables("VIEW_WBST")))
            End If
            If (Not (ds.Tables("View_Recipt_DetCCL")) Is Nothing) Then
                MyBase.Tables.Add(New View_Recipt_DetCCLDataTable(ds.Tables("View_Recipt_DetCCL")))
            End If
            If (Not (ds.Tables("MEMBER_CONSUMPTION_OUTLET")) Is Nothing) Then
                MyBase.Tables.Add(New MEMBER_CONSUMPTION_OUTLETDataTable(ds.Tables("MEMBER_CONSUMPTION_OUTLET")))
            End If
            If (Not (ds.Tables("VW_CommitteeTransaction")) Is Nothing) Then
                MyBase.Tables.Add(New VW_CommitteeTransactionDataTable(ds.Tables("VW_CommitteeTransaction")))
            End If
            If (Not (ds.Tables("accountsglaccountmaster")) Is Nothing) Then
                MyBase.Tables.Add(New accountsglaccountmasterDataTable(ds.Tables("accountsglaccountmaster")))
            End If
            If (Not (ds.Tables("GSTSUBSBILLDETAILS")) Is Nothing) Then
                MyBase.Tables.Add(New GSTSUBSBILLDETAILSDataTable(ds.Tables("GSTSUBSBILLDETAILS")))
            End If
            If (Not (ds.Tables("clubmaster")) Is Nothing) Then
                MyBase.Tables.Add(New clubmasterDataTable(ds.Tables("clubmaster")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property membermaster() As membermasterDataTable
        Get
            Return Me.tablemembermaster
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property View_DRCR_SUM() As View_DRCR_SUMDataTable
        Get
            Return Me.tableView_DRCR_SUM
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property MEM_POS_DET() As MEM_POS_DETDataTable
        Get
            Return Me.tableMEM_POS_DET
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property VIEW_WBST() As VIEW_WBSTDataTable
        Get
            Return Me.tableVIEW_WBST
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property View_Recipt_DetCCL() As View_Recipt_DetCCLDataTable
        Get
            Return Me.tableView_Recipt_DetCCL
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property MEMBER_CONSUMPTION_OUTLET() As MEMBER_CONSUMPTION_OUTLETDataTable
        Get
            Return Me.tableMEMBER_CONSUMPTION_OUTLET
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property VW_CommitteeTransaction() As VW_CommitteeTransactionDataTable
        Get
            Return Me.tableVW_CommitteeTransaction
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property accountsglaccountmaster() As accountsglaccountmasterDataTable
        Get
            Return Me.tableaccountsglaccountmaster
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property GSTSUBSBILLDETAILS() As GSTSUBSBILLDETAILSDataTable
        Get
            Return Me.tableGSTSUBSBILLDETAILS
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property clubmaster() As clubmasterDataTable
        Get
            Return Me.tableclubmaster
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As DataSet2 = CType(MyBase.Clone,DataSet2)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXml(reader)
            If (Not (ds.Tables("membermaster")) Is Nothing) Then
                MyBase.Tables.Add(New membermasterDataTable(ds.Tables("membermaster")))
            End If
            If (Not (ds.Tables("View_DRCR_SUM")) Is Nothing) Then
                MyBase.Tables.Add(New View_DRCR_SUMDataTable(ds.Tables("View_DRCR_SUM")))
            End If
            If (Not (ds.Tables("MEM_POS_DET")) Is Nothing) Then
                MyBase.Tables.Add(New MEM_POS_DETDataTable(ds.Tables("MEM_POS_DET")))
            End If
            If (Not (ds.Tables("VIEW_WBST")) Is Nothing) Then
                MyBase.Tables.Add(New VIEW_WBSTDataTable(ds.Tables("VIEW_WBST")))
            End If
            If (Not (ds.Tables("View_Recipt_DetCCL")) Is Nothing) Then
                MyBase.Tables.Add(New View_Recipt_DetCCLDataTable(ds.Tables("View_Recipt_DetCCL")))
            End If
            If (Not (ds.Tables("MEMBER_CONSUMPTION_OUTLET")) Is Nothing) Then
                MyBase.Tables.Add(New MEMBER_CONSUMPTION_OUTLETDataTable(ds.Tables("MEMBER_CONSUMPTION_OUTLET")))
            End If
            If (Not (ds.Tables("VW_CommitteeTransaction")) Is Nothing) Then
                MyBase.Tables.Add(New VW_CommitteeTransactionDataTable(ds.Tables("VW_CommitteeTransaction")))
            End If
            If (Not (ds.Tables("accountsglaccountmaster")) Is Nothing) Then
                MyBase.Tables.Add(New accountsglaccountmasterDataTable(ds.Tables("accountsglaccountmaster")))
            End If
            If (Not (ds.Tables("GSTSUBSBILLDETAILS")) Is Nothing) Then
                MyBase.Tables.Add(New GSTSUBSBILLDETAILSDataTable(ds.Tables("GSTSUBSBILLDETAILS")))
            End If
            If (Not (ds.Tables("clubmaster")) Is Nothing) Then
                MyBase.Tables.Add(New clubmasterDataTable(ds.Tables("clubmaster")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tablemembermaster = CType(MyBase.Tables("membermaster"),membermasterDataTable)
        If (initTable = true) Then
            If (Not (Me.tablemembermaster) Is Nothing) Then
                Me.tablemembermaster.InitVars
            End If
        End If
        Me.tableView_DRCR_SUM = CType(MyBase.Tables("View_DRCR_SUM"),View_DRCR_SUMDataTable)
        If (initTable = true) Then
            If (Not (Me.tableView_DRCR_SUM) Is Nothing) Then
                Me.tableView_DRCR_SUM.InitVars
            End If
        End If
        Me.tableMEM_POS_DET = CType(MyBase.Tables("MEM_POS_DET"),MEM_POS_DETDataTable)
        If (initTable = true) Then
            If (Not (Me.tableMEM_POS_DET) Is Nothing) Then
                Me.tableMEM_POS_DET.InitVars
            End If
        End If
        Me.tableVIEW_WBST = CType(MyBase.Tables("VIEW_WBST"),VIEW_WBSTDataTable)
        If (initTable = true) Then
            If (Not (Me.tableVIEW_WBST) Is Nothing) Then
                Me.tableVIEW_WBST.InitVars
            End If
        End If
        Me.tableView_Recipt_DetCCL = CType(MyBase.Tables("View_Recipt_DetCCL"),View_Recipt_DetCCLDataTable)
        If (initTable = true) Then
            If (Not (Me.tableView_Recipt_DetCCL) Is Nothing) Then
                Me.tableView_Recipt_DetCCL.InitVars
            End If
        End If
        Me.tableMEMBER_CONSUMPTION_OUTLET = CType(MyBase.Tables("MEMBER_CONSUMPTION_OUTLET"),MEMBER_CONSUMPTION_OUTLETDataTable)
        If (initTable = true) Then
            If (Not (Me.tableMEMBER_CONSUMPTION_OUTLET) Is Nothing) Then
                Me.tableMEMBER_CONSUMPTION_OUTLET.InitVars
            End If
        End If
        Me.tableVW_CommitteeTransaction = CType(MyBase.Tables("VW_CommitteeTransaction"),VW_CommitteeTransactionDataTable)
        If (initTable = true) Then
            If (Not (Me.tableVW_CommitteeTransaction) Is Nothing) Then
                Me.tableVW_CommitteeTransaction.InitVars
            End If
        End If
        Me.tableaccountsglaccountmaster = CType(MyBase.Tables("accountsglaccountmaster"),accountsglaccountmasterDataTable)
        If (initTable = true) Then
            If (Not (Me.tableaccountsglaccountmaster) Is Nothing) Then
                Me.tableaccountsglaccountmaster.InitVars
            End If
        End If
        Me.tableGSTSUBSBILLDETAILS = CType(MyBase.Tables("GSTSUBSBILLDETAILS"),GSTSUBSBILLDETAILSDataTable)
        If (initTable = true) Then
            If (Not (Me.tableGSTSUBSBILLDETAILS) Is Nothing) Then
                Me.tableGSTSUBSBILLDETAILS.InitVars
            End If
        End If
        Me.tableclubmaster = CType(MyBase.Tables("clubmaster"),clubmasterDataTable)
        If (initTable = true) Then
            If (Not (Me.tableclubmaster) Is Nothing) Then
                Me.tableclubmaster.InitVars
            End If
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Sub InitClass()
        Me.DataSetName = "DataSet2"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/DataSet2.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tablemembermaster = New membermasterDataTable()
        MyBase.Tables.Add(Me.tablemembermaster)
        Me.tableView_DRCR_SUM = New View_DRCR_SUMDataTable()
        MyBase.Tables.Add(Me.tableView_DRCR_SUM)
        Me.tableMEM_POS_DET = New MEM_POS_DETDataTable()
        MyBase.Tables.Add(Me.tableMEM_POS_DET)
        Me.tableVIEW_WBST = New VIEW_WBSTDataTable()
        MyBase.Tables.Add(Me.tableVIEW_WBST)
        Me.tableView_Recipt_DetCCL = New View_Recipt_DetCCLDataTable()
        MyBase.Tables.Add(Me.tableView_Recipt_DetCCL)
        Me.tableMEMBER_CONSUMPTION_OUTLET = New MEMBER_CONSUMPTION_OUTLETDataTable()
        MyBase.Tables.Add(Me.tableMEMBER_CONSUMPTION_OUTLET)
        Me.tableVW_CommitteeTransaction = New VW_CommitteeTransactionDataTable()
        MyBase.Tables.Add(Me.tableVW_CommitteeTransaction)
        Me.tableaccountsglaccountmaster = New accountsglaccountmasterDataTable()
        MyBase.Tables.Add(Me.tableaccountsglaccountmaster)
        Me.tableGSTSUBSBILLDETAILS = New GSTSUBSBILLDETAILSDataTable()
        MyBase.Tables.Add(Me.tableGSTSUBSBILLDETAILS)
        Me.tableclubmaster = New clubmasterDataTable()
        MyBase.Tables.Add(Me.tableclubmaster)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializemembermaster() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeView_DRCR_SUM() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeMEM_POS_DET() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeVIEW_WBST() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeView_Recipt_DetCCL() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeMEMBER_CONSUMPTION_OUTLET() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeVW_CommitteeTransaction() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeaccountsglaccountmaster() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeGSTSUBSBILLDETAILS() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeclubmaster() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As DataSet2 = New DataSet2()
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub membermasterRowChangeEventHandler(ByVal sender As Object, ByVal e As membermasterRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub View_DRCR_SUMRowChangeEventHandler(ByVal sender As Object, ByVal e As View_DRCR_SUMRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub MEM_POS_DETRowChangeEventHandler(ByVal sender As Object, ByVal e As MEM_POS_DETRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub VIEW_WBSTRowChangeEventHandler(ByVal sender As Object, ByVal e As VIEW_WBSTRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub View_Recipt_DetCCLRowChangeEventHandler(ByVal sender As Object, ByVal e As View_Recipt_DetCCLRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub MEMBER_CONSUMPTION_OUTLETRowChangeEventHandler(ByVal sender As Object, ByVal e As MEMBER_CONSUMPTION_OUTLETRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub VW_CommitteeTransactionRowChangeEventHandler(ByVal sender As Object, ByVal e As VW_CommitteeTransactionRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub accountsglaccountmasterRowChangeEventHandler(ByVal sender As Object, ByVal e As accountsglaccountmasterRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub GSTSUBSBILLDETAILSRowChangeEventHandler(ByVal sender As Object, ByVal e As GSTSUBSBILLDETAILSRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub clubmasterRowChangeEventHandler(ByVal sender As Object, ByVal e As clubmasterRowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class membermasterDataTable
        Inherits Global.System.Data.TypedTableBase(Of membermasterRow)
        
        Private columnSequenceNo As Global.System.Data.DataColumn
        
        Private columnTAG As Global.System.Data.DataColumn
        
        Private columnMEMBERTYPECODE As Global.System.Data.DataColumn
        
        Private columnCOMPANY As Global.System.Data.DataColumn
        
        Private columnSUBCD As Global.System.Data.DataColumn
        
        Private columnMCODE As Global.System.Data.DataColumn
        
        Private columnMNAME As Global.System.Data.DataColumn
        
        Private columnMID As Global.System.Data.DataColumn
        
        Private columnDOB As Global.System.Data.DataColumn
        
        Private columnDOJ As Global.System.Data.DataColumn
        
        Private columnSEX As Global.System.Data.DataColumn
        
        Private columnMARITALSTATUS As Global.System.Data.DataColumn
        
        Private columnSPOUSE As Global.System.Data.DataColumn
        
        Private columnBG As Global.System.Data.DataColumn
        
        Private columnOCCUPATION As Global.System.Data.DataColumn
        
        Private columnBANKER As Global.System.Data.DataColumn
        
        Private columnBANKACNO As Global.System.Data.DataColumn
        
        Private columnHOBBIES As Global.System.Data.DataColumn
        
        Private columnOTHERINFO As Global.System.Data.DataColumn
        
        Private columnRESIDENT As Global.System.Data.DataColumn
        
        Private columnEQUALIFICATION As Global.System.Data.DataColumn
        
        Private columnPQUALIFICATION As Global.System.Data.DataColumn
        
        Private columnPROPOSER As Global.System.Data.DataColumn
        
        Private columnPROPOSERNAME As Global.System.Data.DataColumn
        
        Private columnSECONDER As Global.System.Data.DataColumn
        
        Private columnSECONDERNAME As Global.System.Data.DataColumn
        
        Private columnPAcopyst As Global.System.Data.DataColumn
        
        Private columnPADD1 As Global.System.Data.DataColumn
        
        Private columnPADD2 As Global.System.Data.DataColumn
        
        Private columnPADD3 As Global.System.Data.DataColumn
        
        Private columnPCITY As Global.System.Data.DataColumn
        
        Private columnPSTATE As Global.System.Data.DataColumn
        
        Private columnPCOUNTRY As Global.System.Data.DataColumn
        
        Private columnPPIN As Global.System.Data.DataColumn
        
        Private columnPPHONE1 As Global.System.Data.DataColumn
        
        Private columnPPHONE2 As Global.System.Data.DataColumn
        
        Private columnPCELL As Global.System.Data.DataColumn
        
        Private columnPEMAIL As Global.System.Data.DataColumn
        
        Private columnRAcopyst As Global.System.Data.DataColumn
        
        Private columnCADD1 As Global.System.Data.DataColumn
        
        Private columnCADD2 As Global.System.Data.DataColumn
        
        Private columnCADD3 As Global.System.Data.DataColumn
        
        Private columnCCITY As Global.System.Data.DataColumn
        
        Private columnCSTATE As Global.System.Data.DataColumn
        
        Private columnCCOUNTRY As Global.System.Data.DataColumn
        
        Private columnCPIN As Global.System.Data.DataColumn
        
        Private columnCPHONE1 As Global.System.Data.DataColumn
        
        Private columnCPHONE2 As Global.System.Data.DataColumn
        
        Private columnCCELL As Global.System.Data.DataColumn
        
        Private columnCEMAIL As Global.System.Data.DataColumn
        
        Private columnCONTADD1 As Global.System.Data.DataColumn
        
        Private columnCONTADD2 As Global.System.Data.DataColumn
        
        Private columnCONTADD3 As Global.System.Data.DataColumn
        
        Private columnCONTCITY As Global.System.Data.DataColumn
        
        Private columnCONTSTATE As Global.System.Data.DataColumn
        
        Private columnCONTCOUNTRY As Global.System.Data.DataColumn
        
        Private columnCONTPIN As Global.System.Data.DataColumn
        
        Private columnCONTPHONE1 As Global.System.Data.DataColumn
        
        Private columnCONTPHONE2 As Global.System.Data.DataColumn
        
        Private columnCONTCELL As Global.System.Data.DataColumn
        
        Private columnCONTEMAIL As Global.System.Data.DataColumn
        
        Private columnEMPTYPE As Global.System.Data.DataColumn
        
        Private columnBUSINESSNAME As Global.System.Data.DataColumn
        
        Private columnBAcopyst As Global.System.Data.DataColumn
        
        Private columnOADD1 As Global.System.Data.DataColumn
        
        Private columnOADD2 As Global.System.Data.DataColumn
        
        Private columnOADD3 As Global.System.Data.DataColumn
        
        Private columnOCITY As Global.System.Data.DataColumn
        
        Private columnOSTATE As Global.System.Data.DataColumn
        
        Private columnOCOUNTRY As Global.System.Data.DataColumn
        
        Private columnOPIN As Global.System.Data.DataColumn
        
        Private columnOPHONE1 As Global.System.Data.DataColumn
        
        Private columnOPHONE2 As Global.System.Data.DataColumn
        
        Private columnDOEPROFESSION As Global.System.Data.DataColumn
        
        Private columnBUSINESSNATURE As Global.System.Data.DataColumn
        
        Private columnPOSITIONHELD As Global.System.Data.DataColumn
        
        Private columnSERVICENAME As Global.System.Data.DataColumn
        
        Private columnSERVICEYEAR As Global.System.Data.DataColumn
        
        Private columnPANO As Global.System.Data.DataColumn
        
        Private columnBBANKER As Global.System.Data.DataColumn
        
        Private columnCCNO As Global.System.Data.DataColumn
        
        Private columnANNUALINCOME As Global.System.Data.DataColumn
        
        Private columnUPDUSERID As Global.System.Data.DataColumn
        
        Private columnUPDDATETIME As Global.System.Data.DataColumn
        
        Private columnTERMINATION As Global.System.Data.DataColumn
        
        Private columnTRN_CON_DATE As Global.System.Data.DataColumn
        
        Private columnCON_MCODE As Global.System.Data.DataColumn
        
        Private columnPFAX As Global.System.Data.DataColumn
        
        Private columnCFAX As Global.System.Data.DataColumn
        
        Private columnCONTFAX As Global.System.Data.DataColumn
        
        Private columnREASON As Global.System.Data.DataColumn
        
        Private columnPHOTO As Global.System.Data.DataColumn
        
        Private columnCREDITLIMIT As Global.System.Data.DataColumn
        
        Private columnLIMITAMOUNT As Global.System.Data.DataColumn
        
        Private columnWEBSITE As Global.System.Data.DataColumn
        
        Private columnImagefile As Global.System.Data.DataColumn
        
        Private columnsizefield As Global.System.Data.DataColumn
        
        Private columnVdate As Global.System.Data.DataColumn
        
        Private columnVyear As Global.System.Data.DataColumn
        
        Private columnValiddate As Global.System.Data.DataColumn
        
        Private columnTempTermination As Global.System.Data.DataColumn
        
        Private columnTempTermDate As Global.System.Data.DataColumn
        
        Private columnTempTermReason As Global.System.Data.DataColumn
        
        Private columnMemberid As Global.System.Data.DataColumn
        
        Private columnEndingDate As Global.System.Data.DataColumn
        
        Private columnTotalYears As Global.System.Data.DataColumn
        
        Private columnCardNo As Global.System.Data.DataColumn
        
        Private columnCardExpDate As Global.System.Data.DataColumn
        
        Private columnValidity As Global.System.Data.DataColumn
        
        Private columnPeriod As Global.System.Data.DataColumn
        
        Private columnCreditcardno As Global.System.Data.DataColumn
        
        Private columnCreditExpDt As Global.System.Data.DataColumn
        
        Private columnType As Global.System.Data.DataColumn
        
        Private columnSTATUSDATEFROM As Global.System.Data.DataColumn
        
        Private columnSTATUSDATETO As Global.System.Data.DataColumn
        
        Private columnCurentStatus As Global.System.Data.DataColumn
        
        Private columnFirstName As Global.System.Data.DataColumn
        
        Private columnMiddleName As Global.System.Data.DataColumn
        
        Private columnSurname As Global.System.Data.DataColumn
        
        Private columnAlias As Global.System.Data.DataColumn
        
        Private columnPrefix As Global.System.Data.DataColumn
        
        Private columnBillType As Global.System.Data.DataColumn
        
        Private columnNationality As Global.System.Data.DataColumn
        
        Private columnNationalityAtbirth As Global.System.Data.DataColumn
        
        Private columnBillbasis As Global.System.Data.DataColumn
        
        Private columnBillHead As Global.System.Data.DataColumn
        
        Private columnGDRLocker As Global.System.Data.DataColumn
        
        Private columnLDRLocker As Global.System.Data.DataColumn
        
        Private columnMembershipTo As Global.System.Data.DataColumn
        
        Private columnsalut As Global.System.Data.DataColumn
        
        Private columnEntranceFee As Global.System.Data.DataColumn
        
        Private columnDevelopmentFee As Global.System.Data.DataColumn
        
        Private columnCriditNumber As Global.System.Data.DataColumn
        
        Private columnSecurityDeposit As Global.System.Data.DataColumn
        
        Private columnPlaceOfBirth As Global.System.Data.DataColumn
        
        Private columnCountryOfBirth As Global.System.Data.DataColumn
        
        Private columnLastArrivalInCal As Global.System.Data.DataColumn
        
        Private columnPeriodOfStay_year As Global.System.Data.DataColumn
        
        Private columnPeriodOfStay_Month As Global.System.Data.DataColumn
        
        Private columnPreviouslyProposed As Global.System.Data.DataColumn
        
        Private columnNoOfTimesProposed As Global.System.Data.DataColumn
        
        Private columnDateOfProposal As Global.System.Data.DataColumn
        
        Private columnResultOfProposal As Global.System.Data.DataColumn
        
        Private columnElected As Global.System.Data.DataColumn
        
        Private columnFatherName As Global.System.Data.DataColumn
        
        Private columnDOBfather As Global.System.Data.DataColumn
        
        Private columnWifeDOB As Global.System.Data.DataColumn
        
        Private columnMaidenNameWife As Global.System.Data.DataColumn
        
        Private columnNationalityWife As Global.System.Data.DataColumn
        
        Private columnWifesFatherName As Global.System.Data.DataColumn
        
        Private columnWifeFatherDOB As Global.System.Data.DataColumn
        
        Private columnApplNo As Global.System.Data.DataColumn
        
        Private columnApplDate As Global.System.Data.DataColumn
        
        Private columnCorporatest As Global.System.Data.DataColumn
        
        Private columnCorporateCode As Global.System.Data.DataColumn
        
        Private columnCompName As Global.System.Data.DataColumn
        
        Private columnDesignation As Global.System.Data.DataColumn
        
        Private columnProfessionInfo As Global.System.Data.DataColumn
        
        Private columnBuisnessInfo As Global.System.Data.DataColumn
        
        Private columnProducts As Global.System.Data.DataColumn
        
        Private columnAgentsDealers As Global.System.Data.DataColumn
        
        Private columnESTDdate As Global.System.Data.DataColumn
        
        Private columnNoOfEmp As Global.System.Data.DataColumn
        
        Private columnTurnover As Global.System.Data.DataColumn
        
        Private columnClient As Global.System.Data.DataColumn
        
        Private columnAppliedBut As Global.System.Data.DataColumn
        
        Private columnPositionInChamber As Global.System.Data.DataColumn
        
        Private columnQulificationstatus As Global.System.Data.DataColumn
        
        Private columnQualification1 As Global.System.Data.DataColumn
        
        Private columnDetails1 As Global.System.Data.DataColumn
        
        Private columnYearOfPassing1 As Global.System.Data.DataColumn
        
        Private columnInstitute1 As Global.System.Data.DataColumn
        
        Private columnDivision1 As Global.System.Data.DataColumn
        
        Private columnQualification2 As Global.System.Data.DataColumn
        
        Private columnDetails2 As Global.System.Data.DataColumn
        
        Private columnYearOfPassing2 As Global.System.Data.DataColumn
        
        Private columnInstitute2 As Global.System.Data.DataColumn
        
        Private columnDivision2 As Global.System.Data.DataColumn
        
        Private columnQualification3 As Global.System.Data.DataColumn
        
        Private columnDetails3 As Global.System.Data.DataColumn
        
        Private columnYearOfPassing3 As Global.System.Data.DataColumn
        
        Private columnInstitute3 As Global.System.Data.DataColumn
        
        Private columnDivision3 As Global.System.Data.DataColumn
        
        Private columnsportstatus As Global.System.Data.DataColumn
        
        Private columnGameType1 As Global.System.Data.DataColumn
        
        Private columnNameOfGame1 As Global.System.Data.DataColumn
        
        Private columnDescription1 As Global.System.Data.DataColumn
        
        Private columnGameType2 As Global.System.Data.DataColumn
        
        Private columnNameofGame2 As Global.System.Data.DataColumn
        
        Private columnDescription2 As Global.System.Data.DataColumn
        
        Private columnGameType3 As Global.System.Data.DataColumn
        
        Private columnNameOfGame3 As Global.System.Data.DataColumn
        
        Private columnDescription3 As Global.System.Data.DataColumn
        
        Private columnChildstatus As Global.System.Data.DataColumn
        
        Private columnChildName1 As Global.System.Data.DataColumn
        
        Private columnChildDob1 As Global.System.Data.DataColumn
        
        Private columnChildSex1 As Global.System.Data.DataColumn
        
        Private columnChildExpairy1 As Global.System.Data.DataColumn
        
        Private columnChildName2 As Global.System.Data.DataColumn
        
        Private columnChildDob2 As Global.System.Data.DataColumn
        
        Private columnChildSex2 As Global.System.Data.DataColumn
        
        Private columnChildExpairy2 As Global.System.Data.DataColumn
        
        Private columnChildName3 As Global.System.Data.DataColumn
        
        Private columnChildDob3 As Global.System.Data.DataColumn
        
        Private columnChildSex3 As Global.System.Data.DataColumn
        
        Private columnchildExpairy3 As Global.System.Data.DataColumn
        
        Private columnClubstatus As Global.System.Data.DataColumn
        
        Private columnOtherClubName1 As Global.System.Data.DataColumn
        
        Private columnOCAddress1 As Global.System.Data.DataColumn
        
        Private columnOCStatus1 As Global.System.Data.DataColumn
        
        Private columnOtherClubName2 As Global.System.Data.DataColumn
        
        Private columnOCAddress2 As Global.System.Data.DataColumn
        
        Private columnOCStatus2 As Global.System.Data.DataColumn
        
        Private columnOtherClubname3 As Global.System.Data.DataColumn
        
        Private columnOCAddress3 As Global.System.Data.DataColumn
        
        Private columnOCStataus As Global.System.Data.DataColumn
        
        Private columnadduser As Global.System.Data.DataColumn
        
        Private columnadddate As Global.System.Data.DataColumn
        
        Private columnfreeze As Global.System.Data.DataColumn
        
        Private columnRelativestatus As Global.System.Data.DataColumn
        
        Private columnRelativeName1 As Global.System.Data.DataColumn
        
        Private columnRelation1 As Global.System.Data.DataColumn
        
        Private columndateofbirth1 As Global.System.Data.DataColumn
        
        Private columnRelativeage1 As Global.System.Data.DataColumn
        
        Private columnRelativeSex1 As Global.System.Data.DataColumn
        
        Private columnRelativeaddress1 As Global.System.Data.DataColumn
        
        Private columnRelativeName2 As Global.System.Data.DataColumn
        
        Private columnRelation2 As Global.System.Data.DataColumn
        
        Private columndateofbirth2 As Global.System.Data.DataColumn
        
        Private columnRelativeage2 As Global.System.Data.DataColumn
        
        Private columnRelativeSex2 As Global.System.Data.DataColumn
        
        Private columnRelativeaddress2 As Global.System.Data.DataColumn
        
        Private columnRelativeName3 As Global.System.Data.DataColumn
        
        Private columnRelation3 As Global.System.Data.DataColumn
        
        Private columndateofbirth3 As Global.System.Data.DataColumn
        
        Private columnRelativeage3 As Global.System.Data.DataColumn
        
        Private columnRelativeSex3 As Global.System.Data.DataColumn
        
        Private columnRelativeaddress3 As Global.System.Data.DataColumn
        
        Private columnreferentialst As Global.System.Data.DataColumn
        
        Private columnmem_code1 As Global.System.Data.DataColumn
        
        Private columnmem_name1 As Global.System.Data.DataColumn
        
        Private columnrefmem_date1 As Global.System.Data.DataColumn
        
        Private columndeleted1 As Global.System.Data.DataColumn
        
        Private columnmem_code2 As Global.System.Data.DataColumn
        
        Private columnmem_name2 As Global.System.Data.DataColumn
        
        Private columnrefmem_date2 As Global.System.Data.DataColumn
        
        Private columndeleted2 As Global.System.Data.DataColumn
        
        Private columnmem_code3 As Global.System.Data.DataColumn
        
        Private columnmem_name3 As Global.System.Data.DataColumn
        
        Private columnrefmem_date3 As Global.System.Data.DataColumn
        
        Private columndeleted3 As Global.System.Data.DataColumn
        
        Private columnentrancefeest As Global.System.Data.DataColumn
        
        Private columnreceiptno1 As Global.System.Data.DataColumn
        
        Private columnstartdate1 As Global.System.Data.DataColumn
        
        Private columnamount1 As Global.System.Data.DataColumn
        
        Private columnreceiptno2 As Global.System.Data.DataColumn
        
        Private columnstartdate2 As Global.System.Data.DataColumn
        
        Private columnamount2 As Global.System.Data.DataColumn
        
        Private columnreceiptno3 As Global.System.Data.DataColumn
        
        Private columnstartdate3 As Global.System.Data.DataColumn
        
        Private columnamount3 As Global.System.Data.DataColumn
        
        Private columnOLD As Global.System.Data.DataColumn
        
        Private columnCardAmt As Global.System.Data.DataColumn
        
        Private columnMINIMUMUSAGE As Global.System.Data.DataColumn
        
        Private columnCREDITNO As Global.System.Data.DataColumn
        
        Private columnSPOUSEMOBILE As Global.System.Data.DataColumn
        
        Private columnP_NO As Global.System.Data.DataColumn
        
        Private columnMEM_CODE As Global.System.Data.DataColumn
        
        Private columndepnos As Global.System.Data.DataColumn
        
        Private columnmb_oprsop As Global.System.Data.DataColumn
        
        Private columnm_payroll As Global.System.Data.DataColumn
        
        Private columnlib_mem As Global.System.Data.DataColumn
        
        Private columnlibbillingbasis As Global.System.Data.DataColumn
        
        Private columnmcodec As Global.System.Data.DataColumn
        
        Private columnmcoden As Global.System.Data.DataColumn
        
        Private columnmcode1 As Global.System.Data.DataColumn
        
        Private columndow As Global.System.Data.DataColumn
        
        Private columnhplocker As Global.System.Data.DataColumn
        
        Private columnGLCODE As Global.System.Data.DataColumn
        
        Private columntermletter As Global.System.Data.DataColumn
        
        Private columnMEMBERTYPE As Global.System.Data.DataColumn
        
        Private columnMEMIMAGE As Global.System.Data.DataColumn
        
        Private columnMEMIMAGESIGN As Global.System.Data.DataColumn
        
        Private columnSDOB As Global.System.Data.DataColumn
        
        Private columnCHILDFDOB1 As Global.System.Data.DataColumn
        
        Private columnPADD4 As Global.System.Data.DataColumn
        
        Private columnCADD4 As Global.System.Data.DataColumn
        
        Private columnEMAIL_FLAG As Global.System.Data.DataColumn
        
        Private columnEBILL As Global.System.Data.DataColumn
        
        Private columnWEDDING_DATE As Global.System.Data.DataColumn
        
        Private columnTAXFLAG As Global.System.Data.DataColumn
        
        Private columnMLEDGERNAME As Global.System.Data.DataColumn
        
        Private columnBACOPYST1 As Global.System.Data.DataColumn
        
        Private columnRACOPYST1 As Global.System.Data.DataColumn
        
        Private columnMSORDERNO As Global.System.Data.DataColumn
        
        Private columnPREFIXMCODE As Global.System.Data.DataColumn
        
        Private columnPACOPYST1 As Global.System.Data.DataColumn
        
        Private columnOCELL As Global.System.Data.DataColumn
        
        Private columnOEMAIL As Global.System.Data.DataColumn
        
        Private columnICNO As Global.System.Data.DataColumn
        
        Private columnUNITNO As Global.System.Data.DataColumn
        
        Private columnDATEOFRELEASE As Global.System.Data.DataColumn
        
        Private columnDATEOFCREATION As Global.System.Data.DataColumn
        
        Private columnMDESCRIPTION As Global.System.Data.DataColumn
        
        Private columnRIDCARDNO As Global.System.Data.DataColumn
        
        Private columnARMSERVICE As Global.System.Data.DataColumn
        
        Private columnWO As Global.System.Data.DataColumn
        
        Private columnNOOFDEPENDENCIES As Global.System.Data.DataColumn
        
        Private columnRBYMEMBERNO As Global.System.Data.DataColumn
        
        Private columnRBYMEMBERNO2 As Global.System.Data.DataColumn
        
        Private columnRBYNAME As Global.System.Data.DataColumn
        
        Private columnRBYMEMBERNAME2 As Global.System.Data.DataColumn
        
        Private columnRANKNO As Global.System.Data.DataColumn
        
        Private columnDATEOFCOMMISSION As Global.System.Data.DataColumn
        
        Private columnNOOFTIMESSECONDED As Global.System.Data.DataColumn
        
        Private columnDATEOFSECONDED As Global.System.Data.DataColumn
        
        Private columnPLOTNO As Global.System.Data.DataColumn
        
        Private columnSOCIETYNO As Global.System.Data.DataColumn
        
        Private columnCREDITSTOPFLAG As Global.System.Data.DataColumn
        
        Private columnCREDITSTOPDATE As Global.System.Data.DataColumn
        
        Private columnBTGROUP As Global.System.Data.DataColumn
        
        Private columnANNIVERSARYDATE As Global.System.Data.DataColumn
        
        Private columnARMYNO As Global.System.Data.DataColumn
        
        Private columnRANKNAME As Global.System.Data.DataColumn
        
        Private columnBARCODENO As Global.System.Data.DataColumn
        
        Private columnDEPENDENTID As Global.System.Data.DataColumn
        
        Private columnSPOUSEIMAGE As Global.System.Data.DataColumn
        
        Private columnF_MCODE As Global.System.Data.DataColumn
        
        Private columnNOMINEE As Global.System.Data.DataColumn
        
        Private columnENC_SMARTCARDNO As Global.System.Data.DataColumn
        
        Private columnMTORDERNO As Global.System.Data.DataColumn
        
        Private columnMARITAL_STATUS As Global.System.Data.DataColumn
        
        Private columnoldmcode As Global.System.Data.DataColumn
        
        Private columnnewmcode As Global.System.Data.DataColumn
        
        Private columnMemberdesigncode As Global.System.Data.DataColumn
        
        Private columnCitycode As Global.System.Data.DataColumn
        
        Private columnStatecode As Global.System.Data.DataColumn
        
        Private columnSaluatationCode As Global.System.Data.DataColumn
        
        Private columnReligionCode As Global.System.Data.DataColumn
        
        Private columnCountrycode As Global.System.Data.DataColumn
        
        Private columnMemberMaritialcode As Global.System.Data.DataColumn
        
        Private columnspouseprefix As Global.System.Data.DataColumn
        
        Private columnSpouseFreeze As Global.System.Data.DataColumn
        
        Private columnMEMLIMIT As Global.System.Data.DataColumn
        
        Private columnCATLIMIT As Global.System.Data.DataColumn
        
        Private columnREPLACEMENT As Global.System.Data.DataColumn
        
        Private columnRNO As Global.System.Data.DataColumn
        
        Private columnspouseimagesign As Global.System.Data.DataColumn
        
        Private columnreligion As Global.System.Data.DataColumn
        
        Private columnADD_DATE As Global.System.Data.DataColumn
        
        Private columnADD_USER As Global.System.Data.DataColumn
        
        Private columnUPD_USER As Global.System.Data.DataColumn
        
        Private columnUPD_DATE As Global.System.Data.DataColumn
        
        Private columnVOID As Global.System.Data.DataColumn
        
        Private columnVOIDUSER As Global.System.Data.DataColumn
        
        Private columnVOIDDATE As Global.System.Data.DataColumn
        
        Private columnAUTHORISED As Global.System.Data.DataColumn
        
        Private columnAUTHORISE_LEVEL1 As Global.System.Data.DataColumn
        
        Private columnAUTHORISE_USER1 As Global.System.Data.DataColumn
        
        Private columnAUTHORISE_DATE1 As Global.System.Data.DataColumn
        
        Private columnAUTHORISE_LEVEL2 As Global.System.Data.DataColumn
        
        Private columnAUTHORISE_USER2 As Global.System.Data.DataColumn
        
        Private columnAUTHORISE_DATE2 As Global.System.Data.DataColumn
        
        Private columnAUTHORISE_LEVEL3 As Global.System.Data.DataColumn
        
        Private columnAUTHORISE_USER3 As Global.System.Data.DataColumn
        
        Private columnRESIGNED_DATE As Global.System.Data.DataColumn
        
        Private columnRESIGNED_FLAG As Global.System.Data.DataColumn
        
        Private columnNewstatus As Global.System.Data.DataColumn
        
        Private columnSECONDER1 As Global.System.Data.DataColumn
        
        Private columnSECONDERNAME1 As Global.System.Data.DataColumn
        
        Private columnSECONDER2 As Global.System.Data.DataColumn
        
        Private columnSECONDERNAME2 As Global.System.Data.DataColumn
        
        Private columnspl_info As Global.System.Data.DataColumn
        
        Private columnPASSPORTNO As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "membermaster"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SequenceNoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSequenceNo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TAGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTAG
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MEMBERTYPECODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMEMBERTYPECODE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property COMPANYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOMPANY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SUBCDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSUBCD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MCODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMCODE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MNAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMNAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DOBColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDOB
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DOJColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDOJ
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SEXColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSEX
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MARITALSTATUSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMARITALSTATUS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SPOUSEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSPOUSE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBG
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property OCCUPATIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOCCUPATION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BANKERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBANKER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BANKACNOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBANKACNO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property HOBBIESColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHOBBIES
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property OTHERINFOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOTHERINFO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RESIDENTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRESIDENT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property EQUALIFICATIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEQUALIFICATION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PQUALIFICATIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPQUALIFICATION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PROPOSERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPROPOSER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PROPOSERNAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPROPOSERNAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SECONDERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSECONDER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SECONDERNAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSECONDERNAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PAcopystColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPAcopyst
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PADD1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnPADD1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PADD2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnPADD2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PADD3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnPADD3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PCITYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPCITY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PSTATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPSTATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PCOUNTRYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPCOUNTRY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PPINColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPPIN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PPHONE1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnPPHONE1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PPHONE2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnPPHONE2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PCELLColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPCELL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PEMAILColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPEMAIL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RAcopystColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRAcopyst
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CADD1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCADD1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CADD2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCADD2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CADD3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCADD3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CCITYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCCITY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CSTATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCSTATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CCOUNTRYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCCOUNTRY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CPINColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCPIN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CPHONE1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCPHONE1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CPHONE2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCPHONE2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CCELLColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCCELL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CEMAILColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCEMAIL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CONTADD1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCONTADD1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CONTADD2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCONTADD2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CONTADD3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCONTADD3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CONTCITYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCONTCITY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CONTSTATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCONTSTATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CONTCOUNTRYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCONTCOUNTRY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CONTPINColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCONTPIN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CONTPHONE1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCONTPHONE1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CONTPHONE2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCONTPHONE2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CONTCELLColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCONTCELL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CONTEMAILColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCONTEMAIL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property EMPTYPEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEMPTYPE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BUSINESSNAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBUSINESSNAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BAcopystColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBAcopyst
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property OADD1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnOADD1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property OADD2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnOADD2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property OADD3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnOADD3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property OCITYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOCITY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property OSTATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOSTATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property OCOUNTRYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOCOUNTRY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property OPINColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOPIN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property OPHONE1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnOPHONE1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property OPHONE2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnOPHONE2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DOEPROFESSIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDOEPROFESSION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BUSINESSNATUREColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBUSINESSNATURE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property POSITIONHELDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPOSITIONHELD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SERVICENAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSERVICENAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SERVICEYEARColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSERVICEYEAR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PANOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPANO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BBANKERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBBANKER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CCNOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCCNO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ANNUALINCOMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnANNUALINCOME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property UPDUSERIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUPDUSERID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property UPDDATETIMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUPDDATETIME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TERMINATIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTERMINATION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TRN_CON_DATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTRN_CON_DATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CON_MCODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCON_MCODE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PFAXColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPFAX
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CFAXColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCFAX
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CONTFAXColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCONTFAX
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property REASONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnREASON
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PHOTOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPHOTO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CREDITLIMITColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCREDITLIMIT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property LIMITAMOUNTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLIMITAMOUNT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property WEBSITEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnWEBSITE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ImagefileColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnImagefile
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property sizefieldColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnsizefield
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property VdateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVdate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property VyearColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVyear
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ValiddateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnValiddate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TempTerminationColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTempTermination
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TempTermDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTempTermDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TempTermReasonColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTempTermReason
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MemberidColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMemberid
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property EndingDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEndingDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TotalYearsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTotalYears
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CardNoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCardNo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CardExpDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCardExpDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ValidityColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnValidity
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PeriodColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPeriod
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CreditcardnoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCreditcardno
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CreditExpDtColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCreditExpDt
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnType
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property STATUSDATEFROMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSTATUSDATEFROM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property STATUSDATETOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSTATUSDATETO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CurentStatusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCurentStatus
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FirstNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFirstName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MiddleNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMiddleName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SurnameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSurname
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AliasColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAlias
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PrefixColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPrefix
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BillTypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBillType
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NationalityColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNationality
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NationalityAtbirthColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNationalityAtbirth
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BillbasisColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBillbasis
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BillHeadColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBillHead
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GDRLockerColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGDRLocker
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property LDRLockerColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLDRLocker
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MembershipToColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMembershipTo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property salutColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnsalut
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property EntranceFeeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEntranceFee
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DevelopmentFeeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDevelopmentFee
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CriditNumberColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCriditNumber
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SecurityDepositColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSecurityDeposit
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PlaceOfBirthColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPlaceOfBirth
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CountryOfBirthColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCountryOfBirth
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property LastArrivalInCalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLastArrivalInCal
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PeriodOfStay_yearColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPeriodOfStay_year
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PeriodOfStay_MonthColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPeriodOfStay_Month
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PreviouslyProposedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPreviouslyProposed
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NoOfTimesProposedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNoOfTimesProposed
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DateOfProposalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDateOfProposal
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ResultOfProposalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnResultOfProposal
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ElectedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnElected
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FatherNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFatherName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DOBfatherColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDOBfather
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property WifeDOBColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnWifeDOB
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MaidenNameWifeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMaidenNameWife
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NationalityWifeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNationalityWife
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property WifesFatherNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnWifesFatherName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property WifeFatherDOBColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnWifeFatherDOB
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ApplNoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnApplNo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ApplDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnApplDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CorporatestColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCorporatest
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CorporateCodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCorporateCode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CompNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCompName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DesignationColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDesignation
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ProfessionInfoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnProfessionInfo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BuisnessInfoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBuisnessInfo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ProductsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnProducts
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AgentsDealersColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAgentsDealers
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ESTDdateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnESTDdate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NoOfEmpColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNoOfEmp
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TurnoverColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTurnover
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ClientColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnClient
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AppliedButColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAppliedBut
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PositionInChamberColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPositionInChamber
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property QulificationstatusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnQulificationstatus
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Qualification1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnQualification1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Details1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnDetails1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property YearOfPassing1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnYearOfPassing1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Institute1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnInstitute1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Division1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnDivision1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Qualification2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnQualification2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Details2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnDetails2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property YearOfPassing2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnYearOfPassing2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Institute2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnInstitute2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Division2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnDivision2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Qualification3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnQualification3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Details3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnDetails3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property YearOfPassing3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnYearOfPassing3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Institute3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnInstitute3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Division3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnDivision3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property sportstatusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnsportstatus
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GameType1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnGameType1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NameOfGame1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnNameOfGame1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Description1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnDescription1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GameType2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnGameType2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NameofGame2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnNameofGame2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Description2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnDescription2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GameType3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnGameType3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NameOfGame3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnNameOfGame3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Description3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnDescription3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ChildstatusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnChildstatus
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ChildName1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnChildName1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ChildDob1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnChildDob1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ChildSex1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnChildSex1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ChildExpairy1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnChildExpairy1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ChildName2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnChildName2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ChildDob2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnChildDob2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ChildSex2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnChildSex2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ChildExpairy2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnChildExpairy2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ChildName3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnChildName3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ChildDob3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnChildDob3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ChildSex3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnChildSex3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property childExpairy3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnchildExpairy3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ClubstatusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnClubstatus
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property OtherClubName1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnOtherClubName1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property OCAddress1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnOCAddress1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property OCStatus1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnOCStatus1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property OtherClubName2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnOtherClubName2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property OCAddress2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnOCAddress2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property OCStatus2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnOCStatus2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property OtherClubname3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnOtherClubname3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property OCAddress3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnOCAddress3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property OCStatausColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOCStataus
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property adduserColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnadduser
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property adddateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnadddate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property freezeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnfreeze
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RelativestatusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRelativestatus
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RelativeName1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRelativeName1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Relation1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRelation1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property dateofbirth1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columndateofbirth1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Relativeage1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRelativeage1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RelativeSex1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRelativeSex1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Relativeaddress1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRelativeaddress1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RelativeName2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRelativeName2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Relation2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRelation2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property dateofbirth2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columndateofbirth2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Relativeage2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRelativeage2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RelativeSex2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRelativeSex2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Relativeaddress2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRelativeaddress2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RelativeName3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRelativeName3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Relation3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRelation3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property dateofbirth3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columndateofbirth3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Relativeage3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRelativeage3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RelativeSex3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRelativeSex3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Relativeaddress3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRelativeaddress3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property referentialstColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnreferentialst
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property mem_code1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnmem_code1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property mem_name1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnmem_name1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property refmem_date1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnrefmem_date1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property deleted1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columndeleted1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property mem_code2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnmem_code2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property mem_name2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnmem_name2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property refmem_date2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnrefmem_date2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property deleted2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columndeleted2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property mem_code3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnmem_code3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property mem_name3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnmem_name3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property refmem_date3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnrefmem_date3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property deleted3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columndeleted3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property entrancefeestColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnentrancefeest
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property receiptno1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnreceiptno1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property startdate1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnstartdate1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property amount1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnamount1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property receiptno2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnreceiptno2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property startdate2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnstartdate2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property amount2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnamount2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property receiptno3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnreceiptno3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property startdate3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnstartdate3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property amount3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnamount3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property OLDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOLD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CardAmtColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCardAmt
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MINIMUMUSAGEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMINIMUMUSAGE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CREDITNOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCREDITNO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SPOUSEMOBILEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSPOUSEMOBILE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property P_NOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnP_NO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MEM_CODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMEM_CODE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property depnosColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndepnos
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property mb_oprsopColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnmb_oprsop
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property m_payrollColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnm_payroll
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property lib_memColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnlib_mem
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property libbillingbasisColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnlibbillingbasis
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property mcodecColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnmcodec
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property mcodenColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnmcoden
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property mcode1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnmcode1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property dowColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property hplockerColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnhplocker
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GLCODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGLCODE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property termletterColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntermletter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MEMBERTYPEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMEMBERTYPE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MEMIMAGEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMEMIMAGE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MEMIMAGESIGNColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMEMIMAGESIGN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SDOBColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSDOB
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CHILDFDOB1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCHILDFDOB1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PADD4Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnPADD4
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CADD4Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCADD4
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property EMAIL_FLAGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEMAIL_FLAG
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property EBILLColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEBILL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property WEDDING_DATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnWEDDING_DATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TAXFLAGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTAXFLAG
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MLEDGERNAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMLEDGERNAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BACOPYST1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnBACOPYST1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RACOPYST1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRACOPYST1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MSORDERNOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMSORDERNO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PREFIXMCODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPREFIXMCODE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PACOPYST1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnPACOPYST1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property OCELLColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOCELL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property OEMAILColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOEMAIL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ICNOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnICNO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property UNITNOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUNITNO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DATEOFRELEASEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDATEOFRELEASE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DATEOFCREATIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDATEOFCREATION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MDESCRIPTIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMDESCRIPTION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RIDCARDNOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRIDCARDNO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ARMSERVICEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnARMSERVICE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property WOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnWO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NOOFDEPENDENCIESColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNOOFDEPENDENCIES
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RBYMEMBERNOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRBYMEMBERNO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RBYMEMBERNO2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRBYMEMBERNO2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RBYNAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRBYNAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RBYMEMBERNAME2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRBYMEMBERNAME2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RANKNOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRANKNO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DATEOFCOMMISSIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDATEOFCOMMISSION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NOOFTIMESSECONDEDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNOOFTIMESSECONDED
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DATEOFSECONDEDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDATEOFSECONDED
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PLOTNOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPLOTNO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SOCIETYNOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSOCIETYNO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CREDITSTOPFLAGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCREDITSTOPFLAG
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CREDITSTOPDATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCREDITSTOPDATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BTGROUPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBTGROUP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ANNIVERSARYDATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnANNIVERSARYDATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ARMYNOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnARMYNO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RANKNAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRANKNAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BARCODENOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBARCODENO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DEPENDENTIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDEPENDENTID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SPOUSEIMAGEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSPOUSEIMAGE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property F_MCODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnF_MCODE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NOMINEEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNOMINEE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ENC_SMARTCARDNOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnENC_SMARTCARDNO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MTORDERNOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMTORDERNO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MARITAL_STATUSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMARITAL_STATUS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property oldmcodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnoldmcode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property newmcodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnnewmcode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MemberdesigncodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMemberdesigncode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CitycodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCitycode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property StatecodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnStatecode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SaluatationCodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSaluatationCode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ReligionCodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnReligionCode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CountrycodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCountrycode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MemberMaritialcodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMemberMaritialcode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property spouseprefixColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnspouseprefix
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SpouseFreezeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSpouseFreeze
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MEMLIMITColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMEMLIMIT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CATLIMITColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCATLIMIT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property REPLACEMENTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnREPLACEMENT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RNOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRNO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property spouseimagesignColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnspouseimagesign
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property religionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnreligion
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ADD_DATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnADD_DATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ADD_USERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnADD_USER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property UPD_USERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUPD_USER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property UPD_DATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUPD_DATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property VOIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVOID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property VOIDUSERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVOIDUSER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property VOIDDATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVOIDDATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AUTHORISEDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAUTHORISED
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AUTHORISE_LEVEL1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnAUTHORISE_LEVEL1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AUTHORISE_USER1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnAUTHORISE_USER1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AUTHORISE_DATE1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnAUTHORISE_DATE1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AUTHORISE_LEVEL2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnAUTHORISE_LEVEL2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AUTHORISE_USER2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnAUTHORISE_USER2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AUTHORISE_DATE2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnAUTHORISE_DATE2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AUTHORISE_LEVEL3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnAUTHORISE_LEVEL3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AUTHORISE_USER3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnAUTHORISE_USER3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RESIGNED_DATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRESIGNED_DATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RESIGNED_FLAGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRESIGNED_FLAG
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NewstatusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNewstatus
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SECONDER1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnSECONDER1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SECONDERNAME1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnSECONDERNAME1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SECONDER2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnSECONDER2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SECONDERNAME2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnSECONDERNAME2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property spl_infoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnspl_info
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PASSPORTNOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPASSPORTNO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As membermasterRow
            Get
                Return CType(Me.Rows(index),membermasterRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event membermasterRowChanging As membermasterRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event membermasterRowChanged As membermasterRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event membermasterRowDeleting As membermasterRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event membermasterRowDeleted As membermasterRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddmembermasterRow(ByVal row As membermasterRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddmembermasterRow( _
                    ByVal TAG As String,  _
                    ByVal MEMBERTYPECODE As String,  _
                    ByVal COMPANY As String,  _
                    ByVal SUBCD As String,  _
                    ByVal MCODE As String,  _
                    ByVal MNAME As String,  _
                    ByVal MID As String,  _
                    ByVal DOB As Date,  _
                    ByVal DOJ As Date,  _
                    ByVal SEX As String,  _
                    ByVal MARITALSTATUS As String,  _
                    ByVal SPOUSE As String,  _
                    ByVal BG As String,  _
                    ByVal OCCUPATION As String,  _
                    ByVal BANKER As String,  _
                    ByVal BANKACNO As String,  _
                    ByVal HOBBIES As String,  _
                    ByVal OTHERINFO As String,  _
                    ByVal RESIDENT As String,  _
                    ByVal EQUALIFICATION As String,  _
                    ByVal PQUALIFICATION As String,  _
                    ByVal PROPOSER As String,  _
                    ByVal PROPOSERNAME As String,  _
                    ByVal SECONDER As String,  _
                    ByVal SECONDERNAME As String,  _
                    ByVal PAcopyst As String,  _
                    ByVal PADD1 As String,  _
                    ByVal PADD2 As String,  _
                    ByVal PADD3 As String,  _
                    ByVal PCITY As String,  _
                    ByVal PSTATE As String,  _
                    ByVal PCOUNTRY As String,  _
                    ByVal PPIN As String,  _
                    ByVal PPHONE1 As String,  _
                    ByVal PPHONE2 As String,  _
                    ByVal PCELL As String,  _
                    ByVal PEMAIL As String,  _
                    ByVal RAcopyst As String,  _
                    ByVal CADD1 As String,  _
                    ByVal CADD2 As String,  _
                    ByVal CADD3 As String,  _
                    ByVal CCITY As String,  _
                    ByVal CSTATE As String,  _
                    ByVal CCOUNTRY As String,  _
                    ByVal CPIN As String,  _
                    ByVal CPHONE1 As String,  _
                    ByVal CPHONE2 As String,  _
                    ByVal CCELL As String,  _
                    ByVal CEMAIL As String,  _
                    ByVal CONTADD1 As String,  _
                    ByVal CONTADD2 As String,  _
                    ByVal CONTADD3 As String,  _
                    ByVal CONTCITY As String,  _
                    ByVal CONTSTATE As String,  _
                    ByVal CONTCOUNTRY As String,  _
                    ByVal CONTPIN As String,  _
                    ByVal CONTPHONE1 As String,  _
                    ByVal CONTPHONE2 As String,  _
                    ByVal CONTCELL As String,  _
                    ByVal CONTEMAIL As String,  _
                    ByVal EMPTYPE As String,  _
                    ByVal BUSINESSNAME As String,  _
                    ByVal BAcopyst As String,  _
                    ByVal OADD1 As String,  _
                    ByVal OADD2 As String,  _
                    ByVal OADD3 As String,  _
                    ByVal OCITY As String,  _
                    ByVal OSTATE As String,  _
                    ByVal OCOUNTRY As String,  _
                    ByVal OPIN As String,  _
                    ByVal OPHONE1 As String,  _
                    ByVal OPHONE2 As String,  _
                    ByVal DOEPROFESSION As Date,  _
                    ByVal BUSINESSNATURE As String,  _
                    ByVal POSITIONHELD As String,  _
                    ByVal SERVICENAME As String,  _
                    ByVal SERVICEYEAR As Decimal,  _
                    ByVal PANO As String,  _
                    ByVal BBANKER As String,  _
                    ByVal CCNO As String,  _
                    ByVal ANNUALINCOME As Decimal,  _
                    ByVal UPDUSERID As String,  _
                    ByVal UPDDATETIME As Date,  _
                    ByVal TERMINATION As String,  _
                    ByVal TRN_CON_DATE As Date,  _
                    ByVal CON_MCODE As String,  _
                    ByVal PFAX As String,  _
                    ByVal CFAX As String,  _
                    ByVal CONTFAX As String,  _
                    ByVal REASON As String,  _
                    ByVal PHOTO As String,  _
                    ByVal CREDITLIMIT As String,  _
                    ByVal LIMITAMOUNT As Decimal,  _
                    ByVal WEBSITE As String,  _
                    ByVal Imagefile() As Byte,  _
                    ByVal sizefield As Decimal,  _
                    ByVal Vdate As Date,  _
                    ByVal Vyear As Decimal,  _
                    ByVal Validdate As Date,  _
                    ByVal TempTermination As String,  _
                    ByVal TempTermDate As Date,  _
                    ByVal TempTermReason As String,  _
                    ByVal Memberid As String,  _
                    ByVal EndingDate As Date,  _
                    ByVal TotalYears As Decimal,  _
                    ByVal CardNo As String,  _
                    ByVal CardExpDate As Date,  _
                    ByVal Validity As String,  _
                    ByVal Period As String,  _
                    ByVal Creditcardno As String,  _
                    ByVal CreditExpDt As Date,  _
                    ByVal Type As String,  _
                    ByVal STATUSDATEFROM As Date,  _
                    ByVal STATUSDATETO As Date,  _
                    ByVal CurentStatus As String,  _
                    ByVal FirstName As String,  _
                    ByVal MiddleName As String,  _
                    ByVal Surname As String,  _
                    ByVal _Alias As String,  _
                    ByVal Prefix As String,  _
                    ByVal BillType As String,  _
                    ByVal Nationality As String,  _
                    ByVal NationalityAtbirth As String,  _
                    ByVal Billbasis As String,  _
                    ByVal BillHead As String,  _
                    ByVal GDRLocker As String,  _
                    ByVal LDRLocker As String,  _
                    ByVal MembershipTo As Date,  _
                    ByVal salut As String,  _
                    ByVal EntranceFee As Double,  _
                    ByVal DevelopmentFee As Double,  _
                    ByVal CriditNumber As String,  _
                    ByVal SecurityDeposit As Decimal,  _
                    ByVal PlaceOfBirth As String,  _
                    ByVal CountryOfBirth As String,  _
                    ByVal LastArrivalInCal As Date,  _
                    ByVal PeriodOfStay_year As Decimal,  _
                    ByVal PeriodOfStay_Month As Decimal,  _
                    ByVal PreviouslyProposed As String,  _
                    ByVal NoOfTimesProposed As Decimal,  _
                    ByVal DateOfProposal As Date,  _
                    ByVal ResultOfProposal As String,  _
                    ByVal Elected As String,  _
                    ByVal FatherName As String,  _
                    ByVal DOBfather As Date,  _
                    ByVal WifeDOB As Date,  _
                    ByVal MaidenNameWife As String,  _
                    ByVal NationalityWife As String,  _
                    ByVal WifesFatherName As String,  _
                    ByVal WifeFatherDOB As Date,  _
                    ByVal ApplNo As String,  _
                    ByVal ApplDate As Date,  _
                    ByVal Corporatest As String,  _
                    ByVal CorporateCode As String,  _
                    ByVal CompName As String,  _
                    ByVal Designation As String,  _
                    ByVal ProfessionInfo As String,  _
                    ByVal BuisnessInfo As String,  _
                    ByVal Products As String,  _
                    ByVal AgentsDealers As String,  _
                    ByVal ESTDdate As Date,  _
                    ByVal NoOfEmp As Decimal,  _
                    ByVal Turnover As Double,  _
                    ByVal Client As String,  _
                    ByVal AppliedBut As String,  _
                    ByVal PositionInChamber As String,  _
                    ByVal Qulificationstatus As String,  _
                    ByVal Qualification1 As String,  _
                    ByVal Details1 As String,  _
                    ByVal YearOfPassing1 As String,  _
                    ByVal Institute1 As String,  _
                    ByVal Division1 As String,  _
                    ByVal Qualification2 As String,  _
                    ByVal Details2 As String,  _
                    ByVal YearOfPassing2 As String,  _
                    ByVal Institute2 As String,  _
                    ByVal Division2 As String,  _
                    ByVal Qualification3 As String,  _
                    ByVal Details3 As String,  _
                    ByVal YearOfPassing3 As String,  _
                    ByVal Institute3 As String,  _
                    ByVal Division3 As String,  _
                    ByVal sportstatus As String,  _
                    ByVal GameType1 As String,  _
                    ByVal NameOfGame1 As String,  _
                    ByVal Description1 As String,  _
                    ByVal GameType2 As String,  _
                    ByVal NameofGame2 As String,  _
                    ByVal Description2 As String,  _
                    ByVal GameType3 As String,  _
                    ByVal NameOfGame3 As String,  _
                    ByVal Description3 As String,  _
                    ByVal Childstatus As String,  _
                    ByVal ChildName1 As String,  _
                    ByVal ChildDob1 As String,  _
                    ByVal ChildSex1 As String,  _
                    ByVal ChildExpairy1 As String,  _
                    ByVal ChildName2 As String,  _
                    ByVal ChildDob2 As String,  _
                    ByVal ChildSex2 As String,  _
                    ByVal ChildExpairy2 As String,  _
                    ByVal ChildName3 As String,  _
                    ByVal ChildDob3 As String,  _
                    ByVal ChildSex3 As String,  _
                    ByVal childExpairy3 As String,  _
                    ByVal Clubstatus As String,  _
                    ByVal OtherClubName1 As String,  _
                    ByVal OCAddress1 As String,  _
                    ByVal OCStatus1 As String,  _
                    ByVal OtherClubName2 As String,  _
                    ByVal OCAddress2 As String,  _
                    ByVal OCStatus2 As String,  _
                    ByVal OtherClubname3 As String,  _
                    ByVal OCAddress3 As String,  _
                    ByVal OCStataus As String,  _
                    ByVal adduser As String,  _
                    ByVal adddate As Date,  _
                    ByVal freeze As String,  _
                    ByVal Relativestatus As String,  _
                    ByVal RelativeName1 As String,  _
                    ByVal Relation1 As String,  _
                    ByVal dateofbirth1 As String,  _
                    ByVal Relativeage1 As String,  _
                    ByVal RelativeSex1 As String,  _
                    ByVal Relativeaddress1 As String,  _
                    ByVal RelativeName2 As String,  _
                    ByVal Relation2 As String,  _
                    ByVal dateofbirth2 As String,  _
                    ByVal Relativeage2 As String,  _
                    ByVal RelativeSex2 As String,  _
                    ByVal Relativeaddress2 As String,  _
                    ByVal RelativeName3 As String,  _
                    ByVal Relation3 As String,  _
                    ByVal dateofbirth3 As String,  _
                    ByVal Relativeage3 As String,  _
                    ByVal RelativeSex3 As String,  _
                    ByVal Relativeaddress3 As String,  _
                    ByVal referentialst As String,  _
                    ByVal mem_code1 As String,  _
                    ByVal mem_name1 As String,  _
                    ByVal refmem_date1 As String,  _
                    ByVal deleted1 As String,  _
                    ByVal mem_code2 As String,  _
                    ByVal mem_name2 As String,  _
                    ByVal refmem_date2 As String,  _
                    ByVal deleted2 As String,  _
                    ByVal mem_code3 As String,  _
                    ByVal mem_name3 As String,  _
                    ByVal refmem_date3 As String,  _
                    ByVal deleted3 As String,  _
                    ByVal entrancefeest As String,  _
                    ByVal receiptno1 As String,  _
                    ByVal startdate1 As String,  _
                    ByVal amount1 As String,  _
                    ByVal receiptno2 As String,  _
                    ByVal startdate2 As String,  _
                    ByVal amount2 As String,  _
                    ByVal receiptno3 As String,  _
                    ByVal startdate3 As String,  _
                    ByVal amount3 As String,  _
                    ByVal OLD As String,  _
                    ByVal CardAmt As Decimal,  _
                    ByVal MINIMUMUSAGE As Decimal,  _
                    ByVal CREDITNO As String,  _
                    ByVal SPOUSEMOBILE As String,  _
                    ByVal P_NO As String,  _
                    ByVal MEM_CODE As String,  _
                    ByVal depnos As Integer,  _
                    ByVal mb_oprsop As String,  _
                    ByVal m_payroll As String,  _
                    ByVal lib_mem As String,  _
                    ByVal libbillingbasis As String,  _
                    ByVal mcodec As String,  _
                    ByVal mcoden As Decimal,  _
                    ByVal mcode1 As String,  _
                    ByVal dow As Date,  _
                    ByVal hplocker As String,  _
                    ByVal GLCODE As String,  _
                    ByVal termletter As String,  _
                    ByVal MEMBERTYPE As String,  _
                    ByVal MEMIMAGE() As Byte,  _
                    ByVal MEMIMAGESIGN() As Byte,  _
                    ByVal SDOB As Date,  _
                    ByVal CHILDFDOB1 As Date,  _
                    ByVal PADD4 As String,  _
                    ByVal CADD4 As String,  _
                    ByVal EMAIL_FLAG As String,  _
                    ByVal EBILL As String,  _
                    ByVal WEDDING_DATE As Date,  _
                    ByVal TAXFLAG As String,  _
                    ByVal MLEDGERNAME As String,  _
                    ByVal BACOPYST1 As String,  _
                    ByVal RACOPYST1 As String,  _
                    ByVal MSORDERNO As String,  _
                    ByVal PREFIXMCODE As String,  _
                    ByVal PACOPYST1 As String,  _
                    ByVal OCELL As String,  _
                    ByVal OEMAIL As String,  _
                    ByVal ICNO As String,  _
                    ByVal UNITNO As String,  _
                    ByVal DATEOFRELEASE As Date,  _
                    ByVal DATEOFCREATION As Date,  _
                    ByVal MDESCRIPTION As String,  _
                    ByVal RIDCARDNO As String,  _
                    ByVal ARMSERVICE As String,  _
                    ByVal WO As String,  _
                    ByVal NOOFDEPENDENCIES As String,  _
                    ByVal RBYMEMBERNO As String,  _
                    ByVal RBYMEMBERNO2 As String,  _
                    ByVal RBYNAME As String,  _
                    ByVal RBYMEMBERNAME2 As String,  _
                    ByVal RANKNO As String,  _
                    ByVal DATEOFCOMMISSION As Date,  _
                    ByVal NOOFTIMESSECONDED As Decimal,  _
                    ByVal DATEOFSECONDED As Date,  _
                    ByVal PLOTNO As String,  _
                    ByVal SOCIETYNO As String,  _
                    ByVal CREDITSTOPFLAG As String,  _
                    ByVal CREDITSTOPDATE As Date,  _
                    ByVal BTGROUP As String,  _
                    ByVal ANNIVERSARYDATE As Date,  _
                    ByVal ARMYNO As String,  _
                    ByVal RANKNAME As String,  _
                    ByVal BARCODENO As String,  _
                    ByVal DEPENDENTID As Decimal,  _
                    ByVal SPOUSEIMAGE() As Byte,  _
                    ByVal F_MCODE As String,  _
                    ByVal NOMINEE As String,  _
                    ByVal ENC_SMARTCARDNO As String,  _
                    ByVal MTORDERNO As String,  _
                    ByVal MARITAL_STATUS As String,  _
                    ByVal oldmcode As String,  _
                    ByVal newmcode As String,  _
                    ByVal Memberdesigncode As String,  _
                    ByVal Citycode As String,  _
                    ByVal Statecode As String,  _
                    ByVal SaluatationCode As String,  _
                    ByVal ReligionCode As String,  _
                    ByVal Countrycode As String,  _
                    ByVal MemberMaritialcode As String,  _
                    ByVal spouseprefix As String,  _
                    ByVal SpouseFreeze As String,  _
                    ByVal MEMLIMIT As Decimal,  _
                    ByVal CATLIMIT As Decimal,  _
                    ByVal REPLACEMENT As String,  _
                    ByVal RNO As String,  _
                    ByVal spouseimagesign() As Byte,  _
                    ByVal religion As String,  _
                    ByVal ADD_DATE As Date,  _
                    ByVal ADD_USER As String,  _
                    ByVal UPD_USER As String,  _
                    ByVal UPD_DATE As Date,  _
                    ByVal VOID As String,  _
                    ByVal VOIDUSER As String,  _
                    ByVal VOIDDATE As Date,  _
                    ByVal AUTHORISED As String,  _
                    ByVal AUTHORISE_LEVEL1 As String,  _
                    ByVal AUTHORISE_USER1 As String,  _
                    ByVal AUTHORISE_DATE1 As Date,  _
                    ByVal AUTHORISE_LEVEL2 As String,  _
                    ByVal AUTHORISE_USER2 As String,  _
                    ByVal AUTHORISE_DATE2 As Date,  _
                    ByVal AUTHORISE_LEVEL3 As String,  _
                    ByVal AUTHORISE_USER3 As String,  _
                    ByVal RESIGNED_DATE As Date,  _
                    ByVal RESIGNED_FLAG As String,  _
                    ByVal Newstatus As String,  _
                    ByVal SECONDER1 As String,  _
                    ByVal SECONDERNAME1 As String,  _
                    ByVal SECONDER2 As String,  _
                    ByVal SECONDERNAME2 As String,  _
                    ByVal spl_info As String,  _
                    ByVal PASSPORTNO As String) As membermasterRow
            Dim rowmembermasterRow As membermasterRow = CType(Me.NewRow,membermasterRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, TAG, MEMBERTYPECODE, COMPANY, SUBCD, MCODE, MNAME, MID, DOB, DOJ, SEX, MARITALSTATUS, SPOUSE, BG, OCCUPATION, BANKER, BANKACNO, HOBBIES, OTHERINFO, RESIDENT, EQUALIFICATION, PQUALIFICATION, PROPOSER, PROPOSERNAME, SECONDER, SECONDERNAME, PAcopyst, PADD1, PADD2, PADD3, PCITY, PSTATE, PCOUNTRY, PPIN, PPHONE1, PPHONE2, PCELL, PEMAIL, RAcopyst, CADD1, CADD2, CADD3, CCITY, CSTATE, CCOUNTRY, CPIN, CPHONE1, CPHONE2, CCELL, CEMAIL, CONTADD1, CONTADD2, CONTADD3, CONTCITY, CONTSTATE, CONTCOUNTRY, CONTPIN, CONTPHONE1, CONTPHONE2, CONTCELL, CONTEMAIL, EMPTYPE, BUSINESSNAME, BAcopyst, OADD1, OADD2, OADD3, OCITY, OSTATE, OCOUNTRY, OPIN, OPHONE1, OPHONE2, DOEPROFESSION, BUSINESSNATURE, POSITIONHELD, SERVICENAME, SERVICEYEAR, PANO, BBANKER, CCNO, ANNUALINCOME, UPDUSERID, UPDDATETIME, TERMINATION, TRN_CON_DATE, CON_MCODE, PFAX, CFAX, CONTFAX, REASON, PHOTO, CREDITLIMIT, LIMITAMOUNT, WEBSITE, Imagefile, sizefield, Vdate, Vyear, Validdate, TempTermination, TempTermDate, TempTermReason, Memberid, EndingDate, TotalYears, CardNo, CardExpDate, Validity, Period, Creditcardno, CreditExpDt, Type, STATUSDATEFROM, STATUSDATETO, CurentStatus, FirstName, MiddleName, Surname, _Alias, Prefix, BillType, Nationality, NationalityAtbirth, Billbasis, BillHead, GDRLocker, LDRLocker, MembershipTo, salut, EntranceFee, DevelopmentFee, CriditNumber, SecurityDeposit, PlaceOfBirth, CountryOfBirth, LastArrivalInCal, PeriodOfStay_year, PeriodOfStay_Month, PreviouslyProposed, NoOfTimesProposed, DateOfProposal, ResultOfProposal, Elected, FatherName, DOBfather, WifeDOB, MaidenNameWife, NationalityWife, WifesFatherName, WifeFatherDOB, ApplNo, ApplDate, Corporatest, CorporateCode, CompName, Designation, ProfessionInfo, BuisnessInfo, Products, AgentsDealers, ESTDdate, NoOfEmp, Turnover, Client, AppliedBut, PositionInChamber, Qulificationstatus, Qualification1, Details1, YearOfPassing1, Institute1, Division1, Qualification2, Details2, YearOfPassing2, Institute2, Division2, Qualification3, Details3, YearOfPassing3, Institute3, Division3, sportstatus, GameType1, NameOfGame1, Description1, GameType2, NameofGame2, Description2, GameType3, NameOfGame3, Description3, Childstatus, ChildName1, ChildDob1, ChildSex1, ChildExpairy1, ChildName2, ChildDob2, ChildSex2, ChildExpairy2, ChildName3, ChildDob3, ChildSex3, childExpairy3, Clubstatus, OtherClubName1, OCAddress1, OCStatus1, OtherClubName2, OCAddress2, OCStatus2, OtherClubname3, OCAddress3, OCStataus, adduser, adddate, freeze, Relativestatus, RelativeName1, Relation1, dateofbirth1, Relativeage1, RelativeSex1, Relativeaddress1, RelativeName2, Relation2, dateofbirth2, Relativeage2, RelativeSex2, Relativeaddress2, RelativeName3, Relation3, dateofbirth3, Relativeage3, RelativeSex3, Relativeaddress3, referentialst, mem_code1, mem_name1, refmem_date1, deleted1, mem_code2, mem_name2, refmem_date2, deleted2, mem_code3, mem_name3, refmem_date3, deleted3, entrancefeest, receiptno1, startdate1, amount1, receiptno2, startdate2, amount2, receiptno3, startdate3, amount3, OLD, CardAmt, MINIMUMUSAGE, CREDITNO, SPOUSEMOBILE, P_NO, MEM_CODE, depnos, mb_oprsop, m_payroll, lib_mem, libbillingbasis, mcodec, mcoden, mcode1, dow, hplocker, GLCODE, termletter, MEMBERTYPE, MEMIMAGE, MEMIMAGESIGN, SDOB, CHILDFDOB1, PADD4, CADD4, EMAIL_FLAG, EBILL, WEDDING_DATE, TAXFLAG, MLEDGERNAME, BACOPYST1, RACOPYST1, MSORDERNO, PREFIXMCODE, PACOPYST1, OCELL, OEMAIL, ICNO, UNITNO, DATEOFRELEASE, DATEOFCREATION, MDESCRIPTION, RIDCARDNO, ARMSERVICE, WO, NOOFDEPENDENCIES, RBYMEMBERNO, RBYMEMBERNO2, RBYNAME, RBYMEMBERNAME2, RANKNO, DATEOFCOMMISSION, NOOFTIMESSECONDED, DATEOFSECONDED, PLOTNO, SOCIETYNO, CREDITSTOPFLAG, CREDITSTOPDATE, BTGROUP, ANNIVERSARYDATE, ARMYNO, RANKNAME, BARCODENO, DEPENDENTID, SPOUSEIMAGE, F_MCODE, NOMINEE, ENC_SMARTCARDNO, MTORDERNO, MARITAL_STATUS, oldmcode, newmcode, Memberdesigncode, Citycode, Statecode, SaluatationCode, ReligionCode, Countrycode, MemberMaritialcode, spouseprefix, SpouseFreeze, MEMLIMIT, CATLIMIT, REPLACEMENT, RNO, spouseimagesign, religion, ADD_DATE, ADD_USER, UPD_USER, UPD_DATE, VOID, VOIDUSER, VOIDDATE, AUTHORISED, AUTHORISE_LEVEL1, AUTHORISE_USER1, AUTHORISE_DATE1, AUTHORISE_LEVEL2, AUTHORISE_USER2, AUTHORISE_DATE2, AUTHORISE_LEVEL3, AUTHORISE_USER3, RESIGNED_DATE, RESIGNED_FLAG, Newstatus, SECONDER1, SECONDERNAME1, SECONDER2, SECONDERNAME2, spl_info, PASSPORTNO}
            rowmembermasterRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowmembermasterRow)
            Return rowmembermasterRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As membermasterDataTable = CType(MyBase.Clone,membermasterDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New membermasterDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnSequenceNo = MyBase.Columns("SequenceNo")
            Me.columnTAG = MyBase.Columns("TAG")
            Me.columnMEMBERTYPECODE = MyBase.Columns("MEMBERTYPECODE")
            Me.columnCOMPANY = MyBase.Columns("COMPANY")
            Me.columnSUBCD = MyBase.Columns("SUBCD")
            Me.columnMCODE = MyBase.Columns("MCODE")
            Me.columnMNAME = MyBase.Columns("MNAME")
            Me.columnMID = MyBase.Columns("MID")
            Me.columnDOB = MyBase.Columns("DOB")
            Me.columnDOJ = MyBase.Columns("DOJ")
            Me.columnSEX = MyBase.Columns("SEX")
            Me.columnMARITALSTATUS = MyBase.Columns("MARITALSTATUS")
            Me.columnSPOUSE = MyBase.Columns("SPOUSE")
            Me.columnBG = MyBase.Columns("BG")
            Me.columnOCCUPATION = MyBase.Columns("OCCUPATION")
            Me.columnBANKER = MyBase.Columns("BANKER")
            Me.columnBANKACNO = MyBase.Columns("BANKACNO")
            Me.columnHOBBIES = MyBase.Columns("HOBBIES")
            Me.columnOTHERINFO = MyBase.Columns("OTHERINFO")
            Me.columnRESIDENT = MyBase.Columns("RESIDENT")
            Me.columnEQUALIFICATION = MyBase.Columns("EQUALIFICATION")
            Me.columnPQUALIFICATION = MyBase.Columns("PQUALIFICATION")
            Me.columnPROPOSER = MyBase.Columns("PROPOSER")
            Me.columnPROPOSERNAME = MyBase.Columns("PROPOSERNAME")
            Me.columnSECONDER = MyBase.Columns("SECONDER")
            Me.columnSECONDERNAME = MyBase.Columns("SECONDERNAME")
            Me.columnPAcopyst = MyBase.Columns("PAcopyst")
            Me.columnPADD1 = MyBase.Columns("PADD1")
            Me.columnPADD2 = MyBase.Columns("PADD2")
            Me.columnPADD3 = MyBase.Columns("PADD3")
            Me.columnPCITY = MyBase.Columns("PCITY")
            Me.columnPSTATE = MyBase.Columns("PSTATE")
            Me.columnPCOUNTRY = MyBase.Columns("PCOUNTRY")
            Me.columnPPIN = MyBase.Columns("PPIN")
            Me.columnPPHONE1 = MyBase.Columns("PPHONE1")
            Me.columnPPHONE2 = MyBase.Columns("PPHONE2")
            Me.columnPCELL = MyBase.Columns("PCELL")
            Me.columnPEMAIL = MyBase.Columns("PEMAIL")
            Me.columnRAcopyst = MyBase.Columns("RAcopyst")
            Me.columnCADD1 = MyBase.Columns("CADD1")
            Me.columnCADD2 = MyBase.Columns("CADD2")
            Me.columnCADD3 = MyBase.Columns("CADD3")
            Me.columnCCITY = MyBase.Columns("CCITY")
            Me.columnCSTATE = MyBase.Columns("CSTATE")
            Me.columnCCOUNTRY = MyBase.Columns("CCOUNTRY")
            Me.columnCPIN = MyBase.Columns("CPIN")
            Me.columnCPHONE1 = MyBase.Columns("CPHONE1")
            Me.columnCPHONE2 = MyBase.Columns("CPHONE2")
            Me.columnCCELL = MyBase.Columns("CCELL")
            Me.columnCEMAIL = MyBase.Columns("CEMAIL")
            Me.columnCONTADD1 = MyBase.Columns("CONTADD1")
            Me.columnCONTADD2 = MyBase.Columns("CONTADD2")
            Me.columnCONTADD3 = MyBase.Columns("CONTADD3")
            Me.columnCONTCITY = MyBase.Columns("CONTCITY")
            Me.columnCONTSTATE = MyBase.Columns("CONTSTATE")
            Me.columnCONTCOUNTRY = MyBase.Columns("CONTCOUNTRY")
            Me.columnCONTPIN = MyBase.Columns("CONTPIN")
            Me.columnCONTPHONE1 = MyBase.Columns("CONTPHONE1")
            Me.columnCONTPHONE2 = MyBase.Columns("CONTPHONE2")
            Me.columnCONTCELL = MyBase.Columns("CONTCELL")
            Me.columnCONTEMAIL = MyBase.Columns("CONTEMAIL")
            Me.columnEMPTYPE = MyBase.Columns("EMPTYPE")
            Me.columnBUSINESSNAME = MyBase.Columns("BUSINESSNAME")
            Me.columnBAcopyst = MyBase.Columns("BAcopyst")
            Me.columnOADD1 = MyBase.Columns("OADD1")
            Me.columnOADD2 = MyBase.Columns("OADD2")
            Me.columnOADD3 = MyBase.Columns("OADD3")
            Me.columnOCITY = MyBase.Columns("OCITY")
            Me.columnOSTATE = MyBase.Columns("OSTATE")
            Me.columnOCOUNTRY = MyBase.Columns("OCOUNTRY")
            Me.columnOPIN = MyBase.Columns("OPIN")
            Me.columnOPHONE1 = MyBase.Columns("OPHONE1")
            Me.columnOPHONE2 = MyBase.Columns("OPHONE2")
            Me.columnDOEPROFESSION = MyBase.Columns("DOEPROFESSION")
            Me.columnBUSINESSNATURE = MyBase.Columns("BUSINESSNATURE")
            Me.columnPOSITIONHELD = MyBase.Columns("POSITIONHELD")
            Me.columnSERVICENAME = MyBase.Columns("SERVICENAME")
            Me.columnSERVICEYEAR = MyBase.Columns("SERVICEYEAR")
            Me.columnPANO = MyBase.Columns("PANO")
            Me.columnBBANKER = MyBase.Columns("BBANKER")
            Me.columnCCNO = MyBase.Columns("CCNO")
            Me.columnANNUALINCOME = MyBase.Columns("ANNUALINCOME")
            Me.columnUPDUSERID = MyBase.Columns("UPDUSERID")
            Me.columnUPDDATETIME = MyBase.Columns("UPDDATETIME")
            Me.columnTERMINATION = MyBase.Columns("TERMINATION")
            Me.columnTRN_CON_DATE = MyBase.Columns("TRN_CON_DATE")
            Me.columnCON_MCODE = MyBase.Columns("CON_MCODE")
            Me.columnPFAX = MyBase.Columns("PFAX")
            Me.columnCFAX = MyBase.Columns("CFAX")
            Me.columnCONTFAX = MyBase.Columns("CONTFAX")
            Me.columnREASON = MyBase.Columns("REASON")
            Me.columnPHOTO = MyBase.Columns("PHOTO")
            Me.columnCREDITLIMIT = MyBase.Columns("CREDITLIMIT")
            Me.columnLIMITAMOUNT = MyBase.Columns("LIMITAMOUNT")
            Me.columnWEBSITE = MyBase.Columns("WEBSITE")
            Me.columnImagefile = MyBase.Columns("Imagefile")
            Me.columnsizefield = MyBase.Columns("sizefield")
            Me.columnVdate = MyBase.Columns("Vdate")
            Me.columnVyear = MyBase.Columns("Vyear")
            Me.columnValiddate = MyBase.Columns("Validdate")
            Me.columnTempTermination = MyBase.Columns("TempTermination")
            Me.columnTempTermDate = MyBase.Columns("TempTermDate")
            Me.columnTempTermReason = MyBase.Columns("TempTermReason")
            Me.columnMemberid = MyBase.Columns("Memberid")
            Me.columnEndingDate = MyBase.Columns("EndingDate")
            Me.columnTotalYears = MyBase.Columns("TotalYears")
            Me.columnCardNo = MyBase.Columns("CardNo")
            Me.columnCardExpDate = MyBase.Columns("CardExpDate")
            Me.columnValidity = MyBase.Columns("Validity")
            Me.columnPeriod = MyBase.Columns("Period")
            Me.columnCreditcardno = MyBase.Columns("Creditcardno")
            Me.columnCreditExpDt = MyBase.Columns("CreditExpDt")
            Me.columnType = MyBase.Columns("Type")
            Me.columnSTATUSDATEFROM = MyBase.Columns("STATUSDATEFROM")
            Me.columnSTATUSDATETO = MyBase.Columns("STATUSDATETO")
            Me.columnCurentStatus = MyBase.Columns("CurentStatus")
            Me.columnFirstName = MyBase.Columns("FirstName")
            Me.columnMiddleName = MyBase.Columns("MiddleName")
            Me.columnSurname = MyBase.Columns("Surname")
            Me.columnAlias = MyBase.Columns("Alias")
            Me.columnPrefix = MyBase.Columns("Prefix")
            Me.columnBillType = MyBase.Columns("BillType")
            Me.columnNationality = MyBase.Columns("Nationality")
            Me.columnNationalityAtbirth = MyBase.Columns("NationalityAtbirth")
            Me.columnBillbasis = MyBase.Columns("Billbasis")
            Me.columnBillHead = MyBase.Columns("BillHead")
            Me.columnGDRLocker = MyBase.Columns("GDRLocker")
            Me.columnLDRLocker = MyBase.Columns("LDRLocker")
            Me.columnMembershipTo = MyBase.Columns("MembershipTo")
            Me.columnsalut = MyBase.Columns("salut")
            Me.columnEntranceFee = MyBase.Columns("EntranceFee")
            Me.columnDevelopmentFee = MyBase.Columns("DevelopmentFee")
            Me.columnCriditNumber = MyBase.Columns("CriditNumber")
            Me.columnSecurityDeposit = MyBase.Columns("SecurityDeposit")
            Me.columnPlaceOfBirth = MyBase.Columns("PlaceOfBirth")
            Me.columnCountryOfBirth = MyBase.Columns("CountryOfBirth")
            Me.columnLastArrivalInCal = MyBase.Columns("LastArrivalInCal")
            Me.columnPeriodOfStay_year = MyBase.Columns("PeriodOfStay_year")
            Me.columnPeriodOfStay_Month = MyBase.Columns("PeriodOfStay_Month")
            Me.columnPreviouslyProposed = MyBase.Columns("PreviouslyProposed")
            Me.columnNoOfTimesProposed = MyBase.Columns("NoOfTimesProposed")
            Me.columnDateOfProposal = MyBase.Columns("DateOfProposal")
            Me.columnResultOfProposal = MyBase.Columns("ResultOfProposal")
            Me.columnElected = MyBase.Columns("Elected")
            Me.columnFatherName = MyBase.Columns("FatherName")
            Me.columnDOBfather = MyBase.Columns("DOBfather")
            Me.columnWifeDOB = MyBase.Columns("WifeDOB")
            Me.columnMaidenNameWife = MyBase.Columns("MaidenNameWife")
            Me.columnNationalityWife = MyBase.Columns("NationalityWife")
            Me.columnWifesFatherName = MyBase.Columns("WifesFatherName")
            Me.columnWifeFatherDOB = MyBase.Columns("WifeFatherDOB")
            Me.columnApplNo = MyBase.Columns("ApplNo")
            Me.columnApplDate = MyBase.Columns("ApplDate")
            Me.columnCorporatest = MyBase.Columns("Corporatest")
            Me.columnCorporateCode = MyBase.Columns("CorporateCode")
            Me.columnCompName = MyBase.Columns("CompName")
            Me.columnDesignation = MyBase.Columns("Designation")
            Me.columnProfessionInfo = MyBase.Columns("ProfessionInfo")
            Me.columnBuisnessInfo = MyBase.Columns("BuisnessInfo")
            Me.columnProducts = MyBase.Columns("Products")
            Me.columnAgentsDealers = MyBase.Columns("AgentsDealers")
            Me.columnESTDdate = MyBase.Columns("ESTDdate")
            Me.columnNoOfEmp = MyBase.Columns("NoOfEmp")
            Me.columnTurnover = MyBase.Columns("Turnover")
            Me.columnClient = MyBase.Columns("Client")
            Me.columnAppliedBut = MyBase.Columns("AppliedBut")
            Me.columnPositionInChamber = MyBase.Columns("PositionInChamber")
            Me.columnQulificationstatus = MyBase.Columns("Qulificationstatus")
            Me.columnQualification1 = MyBase.Columns("Qualification1")
            Me.columnDetails1 = MyBase.Columns("Details1")
            Me.columnYearOfPassing1 = MyBase.Columns("YearOfPassing1")
            Me.columnInstitute1 = MyBase.Columns("Institute1")
            Me.columnDivision1 = MyBase.Columns("Division1")
            Me.columnQualification2 = MyBase.Columns("Qualification2")
            Me.columnDetails2 = MyBase.Columns("Details2")
            Me.columnYearOfPassing2 = MyBase.Columns("YearOfPassing2")
            Me.columnInstitute2 = MyBase.Columns("Institute2")
            Me.columnDivision2 = MyBase.Columns("Division2")
            Me.columnQualification3 = MyBase.Columns("Qualification3")
            Me.columnDetails3 = MyBase.Columns("Details3")
            Me.columnYearOfPassing3 = MyBase.Columns("YearOfPassing3")
            Me.columnInstitute3 = MyBase.Columns("Institute3")
            Me.columnDivision3 = MyBase.Columns("Division3")
            Me.columnsportstatus = MyBase.Columns("sportstatus")
            Me.columnGameType1 = MyBase.Columns("GameType1")
            Me.columnNameOfGame1 = MyBase.Columns("NameOfGame1")
            Me.columnDescription1 = MyBase.Columns("Description1")
            Me.columnGameType2 = MyBase.Columns("GameType2")
            Me.columnNameofGame2 = MyBase.Columns("NameofGame2")
            Me.columnDescription2 = MyBase.Columns("Description2")
            Me.columnGameType3 = MyBase.Columns("GameType3")
            Me.columnNameOfGame3 = MyBase.Columns("NameOfGame3")
            Me.columnDescription3 = MyBase.Columns("Description3")
            Me.columnChildstatus = MyBase.Columns("Childstatus")
            Me.columnChildName1 = MyBase.Columns("ChildName1")
            Me.columnChildDob1 = MyBase.Columns("ChildDob1")
            Me.columnChildSex1 = MyBase.Columns("ChildSex1")
            Me.columnChildExpairy1 = MyBase.Columns("ChildExpairy1")
            Me.columnChildName2 = MyBase.Columns("ChildName2")
            Me.columnChildDob2 = MyBase.Columns("ChildDob2")
            Me.columnChildSex2 = MyBase.Columns("ChildSex2")
            Me.columnChildExpairy2 = MyBase.Columns("ChildExpairy2")
            Me.columnChildName3 = MyBase.Columns("ChildName3")
            Me.columnChildDob3 = MyBase.Columns("ChildDob3")
            Me.columnChildSex3 = MyBase.Columns("ChildSex3")
            Me.columnchildExpairy3 = MyBase.Columns("childExpairy3")
            Me.columnClubstatus = MyBase.Columns("Clubstatus")
            Me.columnOtherClubName1 = MyBase.Columns("OtherClubName1")
            Me.columnOCAddress1 = MyBase.Columns("OCAddress1")
            Me.columnOCStatus1 = MyBase.Columns("OCStatus1")
            Me.columnOtherClubName2 = MyBase.Columns("OtherClubName2")
            Me.columnOCAddress2 = MyBase.Columns("OCAddress2")
            Me.columnOCStatus2 = MyBase.Columns("OCStatus2")
            Me.columnOtherClubname3 = MyBase.Columns("OtherClubname3")
            Me.columnOCAddress3 = MyBase.Columns("OCAddress3")
            Me.columnOCStataus = MyBase.Columns("OCStataus")
            Me.columnadduser = MyBase.Columns("adduser")
            Me.columnadddate = MyBase.Columns("adddate")
            Me.columnfreeze = MyBase.Columns("freeze")
            Me.columnRelativestatus = MyBase.Columns("Relativestatus")
            Me.columnRelativeName1 = MyBase.Columns("RelativeName1")
            Me.columnRelation1 = MyBase.Columns("Relation1")
            Me.columndateofbirth1 = MyBase.Columns("dateofbirth1")
            Me.columnRelativeage1 = MyBase.Columns("Relativeage1")
            Me.columnRelativeSex1 = MyBase.Columns("RelativeSex1")
            Me.columnRelativeaddress1 = MyBase.Columns("Relativeaddress1")
            Me.columnRelativeName2 = MyBase.Columns("RelativeName2")
            Me.columnRelation2 = MyBase.Columns("Relation2")
            Me.columndateofbirth2 = MyBase.Columns("dateofbirth2")
            Me.columnRelativeage2 = MyBase.Columns("Relativeage2")
            Me.columnRelativeSex2 = MyBase.Columns("RelativeSex2")
            Me.columnRelativeaddress2 = MyBase.Columns("Relativeaddress2")
            Me.columnRelativeName3 = MyBase.Columns("RelativeName3")
            Me.columnRelation3 = MyBase.Columns("Relation3")
            Me.columndateofbirth3 = MyBase.Columns("dateofbirth3")
            Me.columnRelativeage3 = MyBase.Columns("Relativeage3")
            Me.columnRelativeSex3 = MyBase.Columns("RelativeSex3")
            Me.columnRelativeaddress3 = MyBase.Columns("Relativeaddress3")
            Me.columnreferentialst = MyBase.Columns("referentialst")
            Me.columnmem_code1 = MyBase.Columns("mem_code1")
            Me.columnmem_name1 = MyBase.Columns("mem_name1")
            Me.columnrefmem_date1 = MyBase.Columns("refmem_date1")
            Me.columndeleted1 = MyBase.Columns("deleted1")
            Me.columnmem_code2 = MyBase.Columns("mem_code2")
            Me.columnmem_name2 = MyBase.Columns("mem_name2")
            Me.columnrefmem_date2 = MyBase.Columns("refmem_date2")
            Me.columndeleted2 = MyBase.Columns("deleted2")
            Me.columnmem_code3 = MyBase.Columns("mem_code3")
            Me.columnmem_name3 = MyBase.Columns("mem_name3")
            Me.columnrefmem_date3 = MyBase.Columns("refmem_date3")
            Me.columndeleted3 = MyBase.Columns("deleted3")
            Me.columnentrancefeest = MyBase.Columns("entrancefeest")
            Me.columnreceiptno1 = MyBase.Columns("receiptno1")
            Me.columnstartdate1 = MyBase.Columns("startdate1")
            Me.columnamount1 = MyBase.Columns("amount1")
            Me.columnreceiptno2 = MyBase.Columns("receiptno2")
            Me.columnstartdate2 = MyBase.Columns("startdate2")
            Me.columnamount2 = MyBase.Columns("amount2")
            Me.columnreceiptno3 = MyBase.Columns("receiptno3")
            Me.columnstartdate3 = MyBase.Columns("startdate3")
            Me.columnamount3 = MyBase.Columns("amount3")
            Me.columnOLD = MyBase.Columns("OLD")
            Me.columnCardAmt = MyBase.Columns("CardAmt")
            Me.columnMINIMUMUSAGE = MyBase.Columns("MINIMUMUSAGE")
            Me.columnCREDITNO = MyBase.Columns("CREDITNO")
            Me.columnSPOUSEMOBILE = MyBase.Columns("SPOUSEMOBILE")
            Me.columnP_NO = MyBase.Columns("P_NO")
            Me.columnMEM_CODE = MyBase.Columns("MEM_CODE")
            Me.columndepnos = MyBase.Columns("depnos")
            Me.columnmb_oprsop = MyBase.Columns("mb_oprsop")
            Me.columnm_payroll = MyBase.Columns("m_payroll")
            Me.columnlib_mem = MyBase.Columns("lib_mem")
            Me.columnlibbillingbasis = MyBase.Columns("libbillingbasis")
            Me.columnmcodec = MyBase.Columns("mcodec")
            Me.columnmcoden = MyBase.Columns("mcoden")
            Me.columnmcode1 = MyBase.Columns("mcode1")
            Me.columndow = MyBase.Columns("dow")
            Me.columnhplocker = MyBase.Columns("hplocker")
            Me.columnGLCODE = MyBase.Columns("GLCODE")
            Me.columntermletter = MyBase.Columns("termletter")
            Me.columnMEMBERTYPE = MyBase.Columns("MEMBERTYPE")
            Me.columnMEMIMAGE = MyBase.Columns("MEMIMAGE")
            Me.columnMEMIMAGESIGN = MyBase.Columns("MEMIMAGESIGN")
            Me.columnSDOB = MyBase.Columns("SDOB")
            Me.columnCHILDFDOB1 = MyBase.Columns("CHILDFDOB1")
            Me.columnPADD4 = MyBase.Columns("PADD4")
            Me.columnCADD4 = MyBase.Columns("CADD4")
            Me.columnEMAIL_FLAG = MyBase.Columns("EMAIL_FLAG")
            Me.columnEBILL = MyBase.Columns("EBILL")
            Me.columnWEDDING_DATE = MyBase.Columns("WEDDING_DATE")
            Me.columnTAXFLAG = MyBase.Columns("TAXFLAG")
            Me.columnMLEDGERNAME = MyBase.Columns("MLEDGERNAME")
            Me.columnBACOPYST1 = MyBase.Columns("BACOPYST1")
            Me.columnRACOPYST1 = MyBase.Columns("RACOPYST1")
            Me.columnMSORDERNO = MyBase.Columns("MSORDERNO")
            Me.columnPREFIXMCODE = MyBase.Columns("PREFIXMCODE")
            Me.columnPACOPYST1 = MyBase.Columns("PACOPYST1")
            Me.columnOCELL = MyBase.Columns("OCELL")
            Me.columnOEMAIL = MyBase.Columns("OEMAIL")
            Me.columnICNO = MyBase.Columns("ICNO")
            Me.columnUNITNO = MyBase.Columns("UNITNO")
            Me.columnDATEOFRELEASE = MyBase.Columns("DATEOFRELEASE")
            Me.columnDATEOFCREATION = MyBase.Columns("DATEOFCREATION")
            Me.columnMDESCRIPTION = MyBase.Columns("MDESCRIPTION")
            Me.columnRIDCARDNO = MyBase.Columns("RIDCARDNO")
            Me.columnARMSERVICE = MyBase.Columns("ARMSERVICE")
            Me.columnWO = MyBase.Columns("WO")
            Me.columnNOOFDEPENDENCIES = MyBase.Columns("NOOFDEPENDENCIES")
            Me.columnRBYMEMBERNO = MyBase.Columns("RBYMEMBERNO")
            Me.columnRBYMEMBERNO2 = MyBase.Columns("RBYMEMBERNO2")
            Me.columnRBYNAME = MyBase.Columns("RBYNAME")
            Me.columnRBYMEMBERNAME2 = MyBase.Columns("RBYMEMBERNAME2")
            Me.columnRANKNO = MyBase.Columns("RANKNO")
            Me.columnDATEOFCOMMISSION = MyBase.Columns("DATEOFCOMMISSION")
            Me.columnNOOFTIMESSECONDED = MyBase.Columns("NOOFTIMESSECONDED")
            Me.columnDATEOFSECONDED = MyBase.Columns("DATEOFSECONDED")
            Me.columnPLOTNO = MyBase.Columns("PLOTNO")
            Me.columnSOCIETYNO = MyBase.Columns("SOCIETYNO")
            Me.columnCREDITSTOPFLAG = MyBase.Columns("CREDITSTOPFLAG")
            Me.columnCREDITSTOPDATE = MyBase.Columns("CREDITSTOPDATE")
            Me.columnBTGROUP = MyBase.Columns("BTGROUP")
            Me.columnANNIVERSARYDATE = MyBase.Columns("ANNIVERSARYDATE")
            Me.columnARMYNO = MyBase.Columns("ARMYNO")
            Me.columnRANKNAME = MyBase.Columns("RANKNAME")
            Me.columnBARCODENO = MyBase.Columns("BARCODENO")
            Me.columnDEPENDENTID = MyBase.Columns("DEPENDENTID")
            Me.columnSPOUSEIMAGE = MyBase.Columns("SPOUSEIMAGE")
            Me.columnF_MCODE = MyBase.Columns("F_MCODE")
            Me.columnNOMINEE = MyBase.Columns("NOMINEE")
            Me.columnENC_SMARTCARDNO = MyBase.Columns("ENC_SMARTCARDNO")
            Me.columnMTORDERNO = MyBase.Columns("MTORDERNO")
            Me.columnMARITAL_STATUS = MyBase.Columns("MARITAL_STATUS")
            Me.columnoldmcode = MyBase.Columns("oldmcode")
            Me.columnnewmcode = MyBase.Columns("newmcode")
            Me.columnMemberdesigncode = MyBase.Columns("Memberdesigncode")
            Me.columnCitycode = MyBase.Columns("Citycode")
            Me.columnStatecode = MyBase.Columns("Statecode")
            Me.columnSaluatationCode = MyBase.Columns("SaluatationCode")
            Me.columnReligionCode = MyBase.Columns("ReligionCode")
            Me.columnCountrycode = MyBase.Columns("Countrycode")
            Me.columnMemberMaritialcode = MyBase.Columns("MemberMaritialcode")
            Me.columnspouseprefix = MyBase.Columns("spouseprefix")
            Me.columnSpouseFreeze = MyBase.Columns("SpouseFreeze")
            Me.columnMEMLIMIT = MyBase.Columns("MEMLIMIT")
            Me.columnCATLIMIT = MyBase.Columns("CATLIMIT")
            Me.columnREPLACEMENT = MyBase.Columns("REPLACEMENT")
            Me.columnRNO = MyBase.Columns("RNO")
            Me.columnspouseimagesign = MyBase.Columns("spouseimagesign")
            Me.columnreligion = MyBase.Columns("religion")
            Me.columnADD_DATE = MyBase.Columns("ADD_DATE")
            Me.columnADD_USER = MyBase.Columns("ADD_USER")
            Me.columnUPD_USER = MyBase.Columns("UPD_USER")
            Me.columnUPD_DATE = MyBase.Columns("UPD_DATE")
            Me.columnVOID = MyBase.Columns("VOID")
            Me.columnVOIDUSER = MyBase.Columns("VOIDUSER")
            Me.columnVOIDDATE = MyBase.Columns("VOIDDATE")
            Me.columnAUTHORISED = MyBase.Columns("AUTHORISED")
            Me.columnAUTHORISE_LEVEL1 = MyBase.Columns("AUTHORISE_LEVEL1")
            Me.columnAUTHORISE_USER1 = MyBase.Columns("AUTHORISE_USER1")
            Me.columnAUTHORISE_DATE1 = MyBase.Columns("AUTHORISE_DATE1")
            Me.columnAUTHORISE_LEVEL2 = MyBase.Columns("AUTHORISE_LEVEL2")
            Me.columnAUTHORISE_USER2 = MyBase.Columns("AUTHORISE_USER2")
            Me.columnAUTHORISE_DATE2 = MyBase.Columns("AUTHORISE_DATE2")
            Me.columnAUTHORISE_LEVEL3 = MyBase.Columns("AUTHORISE_LEVEL3")
            Me.columnAUTHORISE_USER3 = MyBase.Columns("AUTHORISE_USER3")
            Me.columnRESIGNED_DATE = MyBase.Columns("RESIGNED_DATE")
            Me.columnRESIGNED_FLAG = MyBase.Columns("RESIGNED_FLAG")
            Me.columnNewstatus = MyBase.Columns("Newstatus")
            Me.columnSECONDER1 = MyBase.Columns("SECONDER1")
            Me.columnSECONDERNAME1 = MyBase.Columns("SECONDERNAME1")
            Me.columnSECONDER2 = MyBase.Columns("SECONDER2")
            Me.columnSECONDERNAME2 = MyBase.Columns("SECONDERNAME2")
            Me.columnspl_info = MyBase.Columns("spl_info")
            Me.columnPASSPORTNO = MyBase.Columns("PASSPORTNO")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnSequenceNo = New Global.System.Data.DataColumn("SequenceNo", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSequenceNo)
            Me.columnTAG = New Global.System.Data.DataColumn("TAG", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTAG)
            Me.columnMEMBERTYPECODE = New Global.System.Data.DataColumn("MEMBERTYPECODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMEMBERTYPECODE)
            Me.columnCOMPANY = New Global.System.Data.DataColumn("COMPANY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOMPANY)
            Me.columnSUBCD = New Global.System.Data.DataColumn("SUBCD", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSUBCD)
            Me.columnMCODE = New Global.System.Data.DataColumn("MCODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMCODE)
            Me.columnMNAME = New Global.System.Data.DataColumn("MNAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMNAME)
            Me.columnMID = New Global.System.Data.DataColumn("MID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMID)
            Me.columnDOB = New Global.System.Data.DataColumn("DOB", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDOB)
            Me.columnDOJ = New Global.System.Data.DataColumn("DOJ", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDOJ)
            Me.columnSEX = New Global.System.Data.DataColumn("SEX", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSEX)
            Me.columnMARITALSTATUS = New Global.System.Data.DataColumn("MARITALSTATUS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMARITALSTATUS)
            Me.columnSPOUSE = New Global.System.Data.DataColumn("SPOUSE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSPOUSE)
            Me.columnBG = New Global.System.Data.DataColumn("BG", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBG)
            Me.columnOCCUPATION = New Global.System.Data.DataColumn("OCCUPATION", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOCCUPATION)
            Me.columnBANKER = New Global.System.Data.DataColumn("BANKER", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBANKER)
            Me.columnBANKACNO = New Global.System.Data.DataColumn("BANKACNO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBANKACNO)
            Me.columnHOBBIES = New Global.System.Data.DataColumn("HOBBIES", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHOBBIES)
            Me.columnOTHERINFO = New Global.System.Data.DataColumn("OTHERINFO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOTHERINFO)
            Me.columnRESIDENT = New Global.System.Data.DataColumn("RESIDENT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRESIDENT)
            Me.columnEQUALIFICATION = New Global.System.Data.DataColumn("EQUALIFICATION", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEQUALIFICATION)
            Me.columnPQUALIFICATION = New Global.System.Data.DataColumn("PQUALIFICATION", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPQUALIFICATION)
            Me.columnPROPOSER = New Global.System.Data.DataColumn("PROPOSER", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPROPOSER)
            Me.columnPROPOSERNAME = New Global.System.Data.DataColumn("PROPOSERNAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPROPOSERNAME)
            Me.columnSECONDER = New Global.System.Data.DataColumn("SECONDER", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSECONDER)
            Me.columnSECONDERNAME = New Global.System.Data.DataColumn("SECONDERNAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSECONDERNAME)
            Me.columnPAcopyst = New Global.System.Data.DataColumn("PAcopyst", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPAcopyst)
            Me.columnPADD1 = New Global.System.Data.DataColumn("PADD1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPADD1)
            Me.columnPADD2 = New Global.System.Data.DataColumn("PADD2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPADD2)
            Me.columnPADD3 = New Global.System.Data.DataColumn("PADD3", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPADD3)
            Me.columnPCITY = New Global.System.Data.DataColumn("PCITY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPCITY)
            Me.columnPSTATE = New Global.System.Data.DataColumn("PSTATE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPSTATE)
            Me.columnPCOUNTRY = New Global.System.Data.DataColumn("PCOUNTRY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPCOUNTRY)
            Me.columnPPIN = New Global.System.Data.DataColumn("PPIN", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPPIN)
            Me.columnPPHONE1 = New Global.System.Data.DataColumn("PPHONE1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPPHONE1)
            Me.columnPPHONE2 = New Global.System.Data.DataColumn("PPHONE2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPPHONE2)
            Me.columnPCELL = New Global.System.Data.DataColumn("PCELL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPCELL)
            Me.columnPEMAIL = New Global.System.Data.DataColumn("PEMAIL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPEMAIL)
            Me.columnRAcopyst = New Global.System.Data.DataColumn("RAcopyst", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRAcopyst)
            Me.columnCADD1 = New Global.System.Data.DataColumn("CADD1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCADD1)
            Me.columnCADD2 = New Global.System.Data.DataColumn("CADD2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCADD2)
            Me.columnCADD3 = New Global.System.Data.DataColumn("CADD3", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCADD3)
            Me.columnCCITY = New Global.System.Data.DataColumn("CCITY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCCITY)
            Me.columnCSTATE = New Global.System.Data.DataColumn("CSTATE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCSTATE)
            Me.columnCCOUNTRY = New Global.System.Data.DataColumn("CCOUNTRY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCCOUNTRY)
            Me.columnCPIN = New Global.System.Data.DataColumn("CPIN", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCPIN)
            Me.columnCPHONE1 = New Global.System.Data.DataColumn("CPHONE1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCPHONE1)
            Me.columnCPHONE2 = New Global.System.Data.DataColumn("CPHONE2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCPHONE2)
            Me.columnCCELL = New Global.System.Data.DataColumn("CCELL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCCELL)
            Me.columnCEMAIL = New Global.System.Data.DataColumn("CEMAIL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCEMAIL)
            Me.columnCONTADD1 = New Global.System.Data.DataColumn("CONTADD1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCONTADD1)
            Me.columnCONTADD2 = New Global.System.Data.DataColumn("CONTADD2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCONTADD2)
            Me.columnCONTADD3 = New Global.System.Data.DataColumn("CONTADD3", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCONTADD3)
            Me.columnCONTCITY = New Global.System.Data.DataColumn("CONTCITY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCONTCITY)
            Me.columnCONTSTATE = New Global.System.Data.DataColumn("CONTSTATE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCONTSTATE)
            Me.columnCONTCOUNTRY = New Global.System.Data.DataColumn("CONTCOUNTRY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCONTCOUNTRY)
            Me.columnCONTPIN = New Global.System.Data.DataColumn("CONTPIN", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCONTPIN)
            Me.columnCONTPHONE1 = New Global.System.Data.DataColumn("CONTPHONE1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCONTPHONE1)
            Me.columnCONTPHONE2 = New Global.System.Data.DataColumn("CONTPHONE2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCONTPHONE2)
            Me.columnCONTCELL = New Global.System.Data.DataColumn("CONTCELL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCONTCELL)
            Me.columnCONTEMAIL = New Global.System.Data.DataColumn("CONTEMAIL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCONTEMAIL)
            Me.columnEMPTYPE = New Global.System.Data.DataColumn("EMPTYPE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEMPTYPE)
            Me.columnBUSINESSNAME = New Global.System.Data.DataColumn("BUSINESSNAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBUSINESSNAME)
            Me.columnBAcopyst = New Global.System.Data.DataColumn("BAcopyst", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBAcopyst)
            Me.columnOADD1 = New Global.System.Data.DataColumn("OADD1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOADD1)
            Me.columnOADD2 = New Global.System.Data.DataColumn("OADD2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOADD2)
            Me.columnOADD3 = New Global.System.Data.DataColumn("OADD3", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOADD3)
            Me.columnOCITY = New Global.System.Data.DataColumn("OCITY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOCITY)
            Me.columnOSTATE = New Global.System.Data.DataColumn("OSTATE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOSTATE)
            Me.columnOCOUNTRY = New Global.System.Data.DataColumn("OCOUNTRY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOCOUNTRY)
            Me.columnOPIN = New Global.System.Data.DataColumn("OPIN", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOPIN)
            Me.columnOPHONE1 = New Global.System.Data.DataColumn("OPHONE1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOPHONE1)
            Me.columnOPHONE2 = New Global.System.Data.DataColumn("OPHONE2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOPHONE2)
            Me.columnDOEPROFESSION = New Global.System.Data.DataColumn("DOEPROFESSION", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDOEPROFESSION)
            Me.columnBUSINESSNATURE = New Global.System.Data.DataColumn("BUSINESSNATURE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBUSINESSNATURE)
            Me.columnPOSITIONHELD = New Global.System.Data.DataColumn("POSITIONHELD", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPOSITIONHELD)
            Me.columnSERVICENAME = New Global.System.Data.DataColumn("SERVICENAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSERVICENAME)
            Me.columnSERVICEYEAR = New Global.System.Data.DataColumn("SERVICEYEAR", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSERVICEYEAR)
            Me.columnPANO = New Global.System.Data.DataColumn("PANO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPANO)
            Me.columnBBANKER = New Global.System.Data.DataColumn("BBANKER", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBBANKER)
            Me.columnCCNO = New Global.System.Data.DataColumn("CCNO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCCNO)
            Me.columnANNUALINCOME = New Global.System.Data.DataColumn("ANNUALINCOME", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnANNUALINCOME)
            Me.columnUPDUSERID = New Global.System.Data.DataColumn("UPDUSERID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUPDUSERID)
            Me.columnUPDDATETIME = New Global.System.Data.DataColumn("UPDDATETIME", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUPDDATETIME)
            Me.columnTERMINATION = New Global.System.Data.DataColumn("TERMINATION", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTERMINATION)
            Me.columnTRN_CON_DATE = New Global.System.Data.DataColumn("TRN_CON_DATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTRN_CON_DATE)
            Me.columnCON_MCODE = New Global.System.Data.DataColumn("CON_MCODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCON_MCODE)
            Me.columnPFAX = New Global.System.Data.DataColumn("PFAX", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPFAX)
            Me.columnCFAX = New Global.System.Data.DataColumn("CFAX", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCFAX)
            Me.columnCONTFAX = New Global.System.Data.DataColumn("CONTFAX", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCONTFAX)
            Me.columnREASON = New Global.System.Data.DataColumn("REASON", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnREASON)
            Me.columnPHOTO = New Global.System.Data.DataColumn("PHOTO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPHOTO)
            Me.columnCREDITLIMIT = New Global.System.Data.DataColumn("CREDITLIMIT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCREDITLIMIT)
            Me.columnLIMITAMOUNT = New Global.System.Data.DataColumn("LIMITAMOUNT", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLIMITAMOUNT)
            Me.columnWEBSITE = New Global.System.Data.DataColumn("WEBSITE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWEBSITE)
            Me.columnImagefile = New Global.System.Data.DataColumn("Imagefile", GetType(Byte()), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnImagefile)
            Me.columnsizefield = New Global.System.Data.DataColumn("sizefield", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsizefield)
            Me.columnVdate = New Global.System.Data.DataColumn("Vdate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVdate)
            Me.columnVyear = New Global.System.Data.DataColumn("Vyear", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVyear)
            Me.columnValiddate = New Global.System.Data.DataColumn("Validdate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnValiddate)
            Me.columnTempTermination = New Global.System.Data.DataColumn("TempTermination", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTempTermination)
            Me.columnTempTermDate = New Global.System.Data.DataColumn("TempTermDate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTempTermDate)
            Me.columnTempTermReason = New Global.System.Data.DataColumn("TempTermReason", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTempTermReason)
            Me.columnMemberid = New Global.System.Data.DataColumn("Memberid", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMemberid)
            Me.columnEndingDate = New Global.System.Data.DataColumn("EndingDate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEndingDate)
            Me.columnTotalYears = New Global.System.Data.DataColumn("TotalYears", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTotalYears)
            Me.columnCardNo = New Global.System.Data.DataColumn("CardNo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCardNo)
            Me.columnCardExpDate = New Global.System.Data.DataColumn("CardExpDate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCardExpDate)
            Me.columnValidity = New Global.System.Data.DataColumn("Validity", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnValidity)
            Me.columnPeriod = New Global.System.Data.DataColumn("Period", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPeriod)
            Me.columnCreditcardno = New Global.System.Data.DataColumn("Creditcardno", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCreditcardno)
            Me.columnCreditExpDt = New Global.System.Data.DataColumn("CreditExpDt", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCreditExpDt)
            Me.columnType = New Global.System.Data.DataColumn("Type", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnType)
            Me.columnSTATUSDATEFROM = New Global.System.Data.DataColumn("STATUSDATEFROM", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSTATUSDATEFROM)
            Me.columnSTATUSDATETO = New Global.System.Data.DataColumn("STATUSDATETO", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSTATUSDATETO)
            Me.columnCurentStatus = New Global.System.Data.DataColumn("CurentStatus", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCurentStatus)
            Me.columnFirstName = New Global.System.Data.DataColumn("FirstName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFirstName)
            Me.columnMiddleName = New Global.System.Data.DataColumn("MiddleName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMiddleName)
            Me.columnSurname = New Global.System.Data.DataColumn("Surname", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSurname)
            Me.columnAlias = New Global.System.Data.DataColumn("Alias", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            Me.columnAlias.ExtendedProperties.Add("Generator_ColumnPropNameInTable", "AliasColumn")
            Me.columnAlias.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "columnAlias")
            Me.columnAlias.ExtendedProperties.Add("Generator_UserColumnName", "Alias")
            MyBase.Columns.Add(Me.columnAlias)
            Me.columnPrefix = New Global.System.Data.DataColumn("Prefix", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPrefix)
            Me.columnBillType = New Global.System.Data.DataColumn("BillType", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBillType)
            Me.columnNationality = New Global.System.Data.DataColumn("Nationality", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNationality)
            Me.columnNationalityAtbirth = New Global.System.Data.DataColumn("NationalityAtbirth", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNationalityAtbirth)
            Me.columnBillbasis = New Global.System.Data.DataColumn("Billbasis", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBillbasis)
            Me.columnBillHead = New Global.System.Data.DataColumn("BillHead", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBillHead)
            Me.columnGDRLocker = New Global.System.Data.DataColumn("GDRLocker", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGDRLocker)
            Me.columnLDRLocker = New Global.System.Data.DataColumn("LDRLocker", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLDRLocker)
            Me.columnMembershipTo = New Global.System.Data.DataColumn("MembershipTo", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMembershipTo)
            Me.columnsalut = New Global.System.Data.DataColumn("salut", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsalut)
            Me.columnEntranceFee = New Global.System.Data.DataColumn("EntranceFee", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEntranceFee)
            Me.columnDevelopmentFee = New Global.System.Data.DataColumn("DevelopmentFee", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDevelopmentFee)
            Me.columnCriditNumber = New Global.System.Data.DataColumn("CriditNumber", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCriditNumber)
            Me.columnSecurityDeposit = New Global.System.Data.DataColumn("SecurityDeposit", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSecurityDeposit)
            Me.columnPlaceOfBirth = New Global.System.Data.DataColumn("PlaceOfBirth", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPlaceOfBirth)
            Me.columnCountryOfBirth = New Global.System.Data.DataColumn("CountryOfBirth", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCountryOfBirth)
            Me.columnLastArrivalInCal = New Global.System.Data.DataColumn("LastArrivalInCal", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLastArrivalInCal)
            Me.columnPeriodOfStay_year = New Global.System.Data.DataColumn("PeriodOfStay_year", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPeriodOfStay_year)
            Me.columnPeriodOfStay_Month = New Global.System.Data.DataColumn("PeriodOfStay_Month", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPeriodOfStay_Month)
            Me.columnPreviouslyProposed = New Global.System.Data.DataColumn("PreviouslyProposed", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPreviouslyProposed)
            Me.columnNoOfTimesProposed = New Global.System.Data.DataColumn("NoOfTimesProposed", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNoOfTimesProposed)
            Me.columnDateOfProposal = New Global.System.Data.DataColumn("DateOfProposal", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDateOfProposal)
            Me.columnResultOfProposal = New Global.System.Data.DataColumn("ResultOfProposal", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnResultOfProposal)
            Me.columnElected = New Global.System.Data.DataColumn("Elected", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnElected)
            Me.columnFatherName = New Global.System.Data.DataColumn("FatherName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFatherName)
            Me.columnDOBfather = New Global.System.Data.DataColumn("DOBfather", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDOBfather)
            Me.columnWifeDOB = New Global.System.Data.DataColumn("WifeDOB", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWifeDOB)
            Me.columnMaidenNameWife = New Global.System.Data.DataColumn("MaidenNameWife", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMaidenNameWife)
            Me.columnNationalityWife = New Global.System.Data.DataColumn("NationalityWife", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNationalityWife)
            Me.columnWifesFatherName = New Global.System.Data.DataColumn("WifesFatherName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWifesFatherName)
            Me.columnWifeFatherDOB = New Global.System.Data.DataColumn("WifeFatherDOB", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWifeFatherDOB)
            Me.columnApplNo = New Global.System.Data.DataColumn("ApplNo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnApplNo)
            Me.columnApplDate = New Global.System.Data.DataColumn("ApplDate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnApplDate)
            Me.columnCorporatest = New Global.System.Data.DataColumn("Corporatest", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCorporatest)
            Me.columnCorporateCode = New Global.System.Data.DataColumn("CorporateCode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCorporateCode)
            Me.columnCompName = New Global.System.Data.DataColumn("CompName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCompName)
            Me.columnDesignation = New Global.System.Data.DataColumn("Designation", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDesignation)
            Me.columnProfessionInfo = New Global.System.Data.DataColumn("ProfessionInfo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnProfessionInfo)
            Me.columnBuisnessInfo = New Global.System.Data.DataColumn("BuisnessInfo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBuisnessInfo)
            Me.columnProducts = New Global.System.Data.DataColumn("Products", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnProducts)
            Me.columnAgentsDealers = New Global.System.Data.DataColumn("AgentsDealers", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAgentsDealers)
            Me.columnESTDdate = New Global.System.Data.DataColumn("ESTDdate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnESTDdate)
            Me.columnNoOfEmp = New Global.System.Data.DataColumn("NoOfEmp", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNoOfEmp)
            Me.columnTurnover = New Global.System.Data.DataColumn("Turnover", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTurnover)
            Me.columnClient = New Global.System.Data.DataColumn("Client", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnClient)
            Me.columnAppliedBut = New Global.System.Data.DataColumn("AppliedBut", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAppliedBut)
            Me.columnPositionInChamber = New Global.System.Data.DataColumn("PositionInChamber", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPositionInChamber)
            Me.columnQulificationstatus = New Global.System.Data.DataColumn("Qulificationstatus", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnQulificationstatus)
            Me.columnQualification1 = New Global.System.Data.DataColumn("Qualification1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnQualification1)
            Me.columnDetails1 = New Global.System.Data.DataColumn("Details1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDetails1)
            Me.columnYearOfPassing1 = New Global.System.Data.DataColumn("YearOfPassing1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnYearOfPassing1)
            Me.columnInstitute1 = New Global.System.Data.DataColumn("Institute1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnInstitute1)
            Me.columnDivision1 = New Global.System.Data.DataColumn("Division1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDivision1)
            Me.columnQualification2 = New Global.System.Data.DataColumn("Qualification2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnQualification2)
            Me.columnDetails2 = New Global.System.Data.DataColumn("Details2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDetails2)
            Me.columnYearOfPassing2 = New Global.System.Data.DataColumn("YearOfPassing2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnYearOfPassing2)
            Me.columnInstitute2 = New Global.System.Data.DataColumn("Institute2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnInstitute2)
            Me.columnDivision2 = New Global.System.Data.DataColumn("Division2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDivision2)
            Me.columnQualification3 = New Global.System.Data.DataColumn("Qualification3", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnQualification3)
            Me.columnDetails3 = New Global.System.Data.DataColumn("Details3", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDetails3)
            Me.columnYearOfPassing3 = New Global.System.Data.DataColumn("YearOfPassing3", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnYearOfPassing3)
            Me.columnInstitute3 = New Global.System.Data.DataColumn("Institute3", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnInstitute3)
            Me.columnDivision3 = New Global.System.Data.DataColumn("Division3", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDivision3)
            Me.columnsportstatus = New Global.System.Data.DataColumn("sportstatus", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsportstatus)
            Me.columnGameType1 = New Global.System.Data.DataColumn("GameType1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGameType1)
            Me.columnNameOfGame1 = New Global.System.Data.DataColumn("NameOfGame1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNameOfGame1)
            Me.columnDescription1 = New Global.System.Data.DataColumn("Description1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDescription1)
            Me.columnGameType2 = New Global.System.Data.DataColumn("GameType2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGameType2)
            Me.columnNameofGame2 = New Global.System.Data.DataColumn("NameofGame2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNameofGame2)
            Me.columnDescription2 = New Global.System.Data.DataColumn("Description2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDescription2)
            Me.columnGameType3 = New Global.System.Data.DataColumn("GameType3", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGameType3)
            Me.columnNameOfGame3 = New Global.System.Data.DataColumn("NameOfGame3", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNameOfGame3)
            Me.columnDescription3 = New Global.System.Data.DataColumn("Description3", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDescription3)
            Me.columnChildstatus = New Global.System.Data.DataColumn("Childstatus", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnChildstatus)
            Me.columnChildName1 = New Global.System.Data.DataColumn("ChildName1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnChildName1)
            Me.columnChildDob1 = New Global.System.Data.DataColumn("ChildDob1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnChildDob1)
            Me.columnChildSex1 = New Global.System.Data.DataColumn("ChildSex1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnChildSex1)
            Me.columnChildExpairy1 = New Global.System.Data.DataColumn("ChildExpairy1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnChildExpairy1)
            Me.columnChildName2 = New Global.System.Data.DataColumn("ChildName2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnChildName2)
            Me.columnChildDob2 = New Global.System.Data.DataColumn("ChildDob2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnChildDob2)
            Me.columnChildSex2 = New Global.System.Data.DataColumn("ChildSex2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnChildSex2)
            Me.columnChildExpairy2 = New Global.System.Data.DataColumn("ChildExpairy2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnChildExpairy2)
            Me.columnChildName3 = New Global.System.Data.DataColumn("ChildName3", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnChildName3)
            Me.columnChildDob3 = New Global.System.Data.DataColumn("ChildDob3", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnChildDob3)
            Me.columnChildSex3 = New Global.System.Data.DataColumn("ChildSex3", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnChildSex3)
            Me.columnchildExpairy3 = New Global.System.Data.DataColumn("childExpairy3", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnchildExpairy3)
            Me.columnClubstatus = New Global.System.Data.DataColumn("Clubstatus", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnClubstatus)
            Me.columnOtherClubName1 = New Global.System.Data.DataColumn("OtherClubName1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOtherClubName1)
            Me.columnOCAddress1 = New Global.System.Data.DataColumn("OCAddress1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOCAddress1)
            Me.columnOCStatus1 = New Global.System.Data.DataColumn("OCStatus1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOCStatus1)
            Me.columnOtherClubName2 = New Global.System.Data.DataColumn("OtherClubName2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOtherClubName2)
            Me.columnOCAddress2 = New Global.System.Data.DataColumn("OCAddress2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOCAddress2)
            Me.columnOCStatus2 = New Global.System.Data.DataColumn("OCStatus2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOCStatus2)
            Me.columnOtherClubname3 = New Global.System.Data.DataColumn("OtherClubname3", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOtherClubname3)
            Me.columnOCAddress3 = New Global.System.Data.DataColumn("OCAddress3", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOCAddress3)
            Me.columnOCStataus = New Global.System.Data.DataColumn("OCStataus", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOCStataus)
            Me.columnadduser = New Global.System.Data.DataColumn("adduser", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnadduser)
            Me.columnadddate = New Global.System.Data.DataColumn("adddate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnadddate)
            Me.columnfreeze = New Global.System.Data.DataColumn("freeze", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfreeze)
            Me.columnRelativestatus = New Global.System.Data.DataColumn("Relativestatus", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRelativestatus)
            Me.columnRelativeName1 = New Global.System.Data.DataColumn("RelativeName1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRelativeName1)
            Me.columnRelation1 = New Global.System.Data.DataColumn("Relation1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRelation1)
            Me.columndateofbirth1 = New Global.System.Data.DataColumn("dateofbirth1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndateofbirth1)
            Me.columnRelativeage1 = New Global.System.Data.DataColumn("Relativeage1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRelativeage1)
            Me.columnRelativeSex1 = New Global.System.Data.DataColumn("RelativeSex1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRelativeSex1)
            Me.columnRelativeaddress1 = New Global.System.Data.DataColumn("Relativeaddress1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRelativeaddress1)
            Me.columnRelativeName2 = New Global.System.Data.DataColumn("RelativeName2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRelativeName2)
            Me.columnRelation2 = New Global.System.Data.DataColumn("Relation2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRelation2)
            Me.columndateofbirth2 = New Global.System.Data.DataColumn("dateofbirth2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndateofbirth2)
            Me.columnRelativeage2 = New Global.System.Data.DataColumn("Relativeage2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRelativeage2)
            Me.columnRelativeSex2 = New Global.System.Data.DataColumn("RelativeSex2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRelativeSex2)
            Me.columnRelativeaddress2 = New Global.System.Data.DataColumn("Relativeaddress2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRelativeaddress2)
            Me.columnRelativeName3 = New Global.System.Data.DataColumn("RelativeName3", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRelativeName3)
            Me.columnRelation3 = New Global.System.Data.DataColumn("Relation3", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRelation3)
            Me.columndateofbirth3 = New Global.System.Data.DataColumn("dateofbirth3", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndateofbirth3)
            Me.columnRelativeage3 = New Global.System.Data.DataColumn("Relativeage3", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRelativeage3)
            Me.columnRelativeSex3 = New Global.System.Data.DataColumn("RelativeSex3", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRelativeSex3)
            Me.columnRelativeaddress3 = New Global.System.Data.DataColumn("Relativeaddress3", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRelativeaddress3)
            Me.columnreferentialst = New Global.System.Data.DataColumn("referentialst", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnreferentialst)
            Me.columnmem_code1 = New Global.System.Data.DataColumn("mem_code1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmem_code1)
            Me.columnmem_name1 = New Global.System.Data.DataColumn("mem_name1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmem_name1)
            Me.columnrefmem_date1 = New Global.System.Data.DataColumn("refmem_date1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnrefmem_date1)
            Me.columndeleted1 = New Global.System.Data.DataColumn("deleted1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndeleted1)
            Me.columnmem_code2 = New Global.System.Data.DataColumn("mem_code2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmem_code2)
            Me.columnmem_name2 = New Global.System.Data.DataColumn("mem_name2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmem_name2)
            Me.columnrefmem_date2 = New Global.System.Data.DataColumn("refmem_date2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnrefmem_date2)
            Me.columndeleted2 = New Global.System.Data.DataColumn("deleted2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndeleted2)
            Me.columnmem_code3 = New Global.System.Data.DataColumn("mem_code3", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmem_code3)
            Me.columnmem_name3 = New Global.System.Data.DataColumn("mem_name3", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmem_name3)
            Me.columnrefmem_date3 = New Global.System.Data.DataColumn("refmem_date3", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnrefmem_date3)
            Me.columndeleted3 = New Global.System.Data.DataColumn("deleted3", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndeleted3)
            Me.columnentrancefeest = New Global.System.Data.DataColumn("entrancefeest", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnentrancefeest)
            Me.columnreceiptno1 = New Global.System.Data.DataColumn("receiptno1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnreceiptno1)
            Me.columnstartdate1 = New Global.System.Data.DataColumn("startdate1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnstartdate1)
            Me.columnamount1 = New Global.System.Data.DataColumn("amount1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnamount1)
            Me.columnreceiptno2 = New Global.System.Data.DataColumn("receiptno2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnreceiptno2)
            Me.columnstartdate2 = New Global.System.Data.DataColumn("startdate2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnstartdate2)
            Me.columnamount2 = New Global.System.Data.DataColumn("amount2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnamount2)
            Me.columnreceiptno3 = New Global.System.Data.DataColumn("receiptno3", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnreceiptno3)
            Me.columnstartdate3 = New Global.System.Data.DataColumn("startdate3", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnstartdate3)
            Me.columnamount3 = New Global.System.Data.DataColumn("amount3", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnamount3)
            Me.columnOLD = New Global.System.Data.DataColumn("OLD", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOLD)
            Me.columnCardAmt = New Global.System.Data.DataColumn("CardAmt", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCardAmt)
            Me.columnMINIMUMUSAGE = New Global.System.Data.DataColumn("MINIMUMUSAGE", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMINIMUMUSAGE)
            Me.columnCREDITNO = New Global.System.Data.DataColumn("CREDITNO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCREDITNO)
            Me.columnSPOUSEMOBILE = New Global.System.Data.DataColumn("SPOUSEMOBILE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSPOUSEMOBILE)
            Me.columnP_NO = New Global.System.Data.DataColumn("P_NO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnP_NO)
            Me.columnMEM_CODE = New Global.System.Data.DataColumn("MEM_CODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMEM_CODE)
            Me.columndepnos = New Global.System.Data.DataColumn("depnos", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndepnos)
            Me.columnmb_oprsop = New Global.System.Data.DataColumn("mb_oprsop", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmb_oprsop)
            Me.columnm_payroll = New Global.System.Data.DataColumn("m_payroll", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnm_payroll)
            Me.columnlib_mem = New Global.System.Data.DataColumn("lib_mem", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnlib_mem)
            Me.columnlibbillingbasis = New Global.System.Data.DataColumn("libbillingbasis", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnlibbillingbasis)
            Me.columnmcodec = New Global.System.Data.DataColumn("mcodec", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmcodec)
            Me.columnmcoden = New Global.System.Data.DataColumn("mcoden", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmcoden)
            Me.columnmcode1 = New Global.System.Data.DataColumn("mcode1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmcode1)
            Me.columndow = New Global.System.Data.DataColumn("dow", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndow)
            Me.columnhplocker = New Global.System.Data.DataColumn("hplocker", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnhplocker)
            Me.columnGLCODE = New Global.System.Data.DataColumn("GLCODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGLCODE)
            Me.columntermletter = New Global.System.Data.DataColumn("termletter", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntermletter)
            Me.columnMEMBERTYPE = New Global.System.Data.DataColumn("MEMBERTYPE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMEMBERTYPE)
            Me.columnMEMIMAGE = New Global.System.Data.DataColumn("MEMIMAGE", GetType(Byte()), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMEMIMAGE)
            Me.columnMEMIMAGESIGN = New Global.System.Data.DataColumn("MEMIMAGESIGN", GetType(Byte()), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMEMIMAGESIGN)
            Me.columnSDOB = New Global.System.Data.DataColumn("SDOB", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSDOB)
            Me.columnCHILDFDOB1 = New Global.System.Data.DataColumn("CHILDFDOB1", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCHILDFDOB1)
            Me.columnPADD4 = New Global.System.Data.DataColumn("PADD4", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPADD4)
            Me.columnCADD4 = New Global.System.Data.DataColumn("CADD4", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCADD4)
            Me.columnEMAIL_FLAG = New Global.System.Data.DataColumn("EMAIL_FLAG", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEMAIL_FLAG)
            Me.columnEBILL = New Global.System.Data.DataColumn("EBILL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEBILL)
            Me.columnWEDDING_DATE = New Global.System.Data.DataColumn("WEDDING_DATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWEDDING_DATE)
            Me.columnTAXFLAG = New Global.System.Data.DataColumn("TAXFLAG", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTAXFLAG)
            Me.columnMLEDGERNAME = New Global.System.Data.DataColumn("MLEDGERNAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMLEDGERNAME)
            Me.columnBACOPYST1 = New Global.System.Data.DataColumn("BACOPYST1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBACOPYST1)
            Me.columnRACOPYST1 = New Global.System.Data.DataColumn("RACOPYST1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRACOPYST1)
            Me.columnMSORDERNO = New Global.System.Data.DataColumn("MSORDERNO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMSORDERNO)
            Me.columnPREFIXMCODE = New Global.System.Data.DataColumn("PREFIXMCODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPREFIXMCODE)
            Me.columnPACOPYST1 = New Global.System.Data.DataColumn("PACOPYST1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPACOPYST1)
            Me.columnOCELL = New Global.System.Data.DataColumn("OCELL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOCELL)
            Me.columnOEMAIL = New Global.System.Data.DataColumn("OEMAIL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOEMAIL)
            Me.columnICNO = New Global.System.Data.DataColumn("ICNO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnICNO)
            Me.columnUNITNO = New Global.System.Data.DataColumn("UNITNO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUNITNO)
            Me.columnDATEOFRELEASE = New Global.System.Data.DataColumn("DATEOFRELEASE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDATEOFRELEASE)
            Me.columnDATEOFCREATION = New Global.System.Data.DataColumn("DATEOFCREATION", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDATEOFCREATION)
            Me.columnMDESCRIPTION = New Global.System.Data.DataColumn("MDESCRIPTION", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMDESCRIPTION)
            Me.columnRIDCARDNO = New Global.System.Data.DataColumn("RIDCARDNO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRIDCARDNO)
            Me.columnARMSERVICE = New Global.System.Data.DataColumn("ARMSERVICE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnARMSERVICE)
            Me.columnWO = New Global.System.Data.DataColumn("WO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWO)
            Me.columnNOOFDEPENDENCIES = New Global.System.Data.DataColumn("NOOFDEPENDENCIES", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNOOFDEPENDENCIES)
            Me.columnRBYMEMBERNO = New Global.System.Data.DataColumn("RBYMEMBERNO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRBYMEMBERNO)
            Me.columnRBYMEMBERNO2 = New Global.System.Data.DataColumn("RBYMEMBERNO2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRBYMEMBERNO2)
            Me.columnRBYNAME = New Global.System.Data.DataColumn("RBYNAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRBYNAME)
            Me.columnRBYMEMBERNAME2 = New Global.System.Data.DataColumn("RBYMEMBERNAME2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRBYMEMBERNAME2)
            Me.columnRANKNO = New Global.System.Data.DataColumn("RANKNO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRANKNO)
            Me.columnDATEOFCOMMISSION = New Global.System.Data.DataColumn("DATEOFCOMMISSION", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDATEOFCOMMISSION)
            Me.columnNOOFTIMESSECONDED = New Global.System.Data.DataColumn("NOOFTIMESSECONDED", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNOOFTIMESSECONDED)
            Me.columnDATEOFSECONDED = New Global.System.Data.DataColumn("DATEOFSECONDED", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDATEOFSECONDED)
            Me.columnPLOTNO = New Global.System.Data.DataColumn("PLOTNO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPLOTNO)
            Me.columnSOCIETYNO = New Global.System.Data.DataColumn("SOCIETYNO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSOCIETYNO)
            Me.columnCREDITSTOPFLAG = New Global.System.Data.DataColumn("CREDITSTOPFLAG", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCREDITSTOPFLAG)
            Me.columnCREDITSTOPDATE = New Global.System.Data.DataColumn("CREDITSTOPDATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCREDITSTOPDATE)
            Me.columnBTGROUP = New Global.System.Data.DataColumn("BTGROUP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBTGROUP)
            Me.columnANNIVERSARYDATE = New Global.System.Data.DataColumn("ANNIVERSARYDATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnANNIVERSARYDATE)
            Me.columnARMYNO = New Global.System.Data.DataColumn("ARMYNO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnARMYNO)
            Me.columnRANKNAME = New Global.System.Data.DataColumn("RANKNAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRANKNAME)
            Me.columnBARCODENO = New Global.System.Data.DataColumn("BARCODENO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBARCODENO)
            Me.columnDEPENDENTID = New Global.System.Data.DataColumn("DEPENDENTID", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDEPENDENTID)
            Me.columnSPOUSEIMAGE = New Global.System.Data.DataColumn("SPOUSEIMAGE", GetType(Byte()), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSPOUSEIMAGE)
            Me.columnF_MCODE = New Global.System.Data.DataColumn("F_MCODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnF_MCODE)
            Me.columnNOMINEE = New Global.System.Data.DataColumn("NOMINEE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNOMINEE)
            Me.columnENC_SMARTCARDNO = New Global.System.Data.DataColumn("ENC_SMARTCARDNO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnENC_SMARTCARDNO)
            Me.columnMTORDERNO = New Global.System.Data.DataColumn("MTORDERNO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMTORDERNO)
            Me.columnMARITAL_STATUS = New Global.System.Data.DataColumn("MARITAL_STATUS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMARITAL_STATUS)
            Me.columnoldmcode = New Global.System.Data.DataColumn("oldmcode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnoldmcode)
            Me.columnnewmcode = New Global.System.Data.DataColumn("newmcode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnewmcode)
            Me.columnMemberdesigncode = New Global.System.Data.DataColumn("Memberdesigncode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMemberdesigncode)
            Me.columnCitycode = New Global.System.Data.DataColumn("Citycode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCitycode)
            Me.columnStatecode = New Global.System.Data.DataColumn("Statecode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnStatecode)
            Me.columnSaluatationCode = New Global.System.Data.DataColumn("SaluatationCode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSaluatationCode)
            Me.columnReligionCode = New Global.System.Data.DataColumn("ReligionCode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnReligionCode)
            Me.columnCountrycode = New Global.System.Data.DataColumn("Countrycode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCountrycode)
            Me.columnMemberMaritialcode = New Global.System.Data.DataColumn("MemberMaritialcode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMemberMaritialcode)
            Me.columnspouseprefix = New Global.System.Data.DataColumn("spouseprefix", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnspouseprefix)
            Me.columnSpouseFreeze = New Global.System.Data.DataColumn("SpouseFreeze", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSpouseFreeze)
            Me.columnMEMLIMIT = New Global.System.Data.DataColumn("MEMLIMIT", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMEMLIMIT)
            Me.columnCATLIMIT = New Global.System.Data.DataColumn("CATLIMIT", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCATLIMIT)
            Me.columnREPLACEMENT = New Global.System.Data.DataColumn("REPLACEMENT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnREPLACEMENT)
            Me.columnRNO = New Global.System.Data.DataColumn("RNO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRNO)
            Me.columnspouseimagesign = New Global.System.Data.DataColumn("spouseimagesign", GetType(Byte()), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnspouseimagesign)
            Me.columnreligion = New Global.System.Data.DataColumn("religion", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnreligion)
            Me.columnADD_DATE = New Global.System.Data.DataColumn("ADD_DATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnADD_DATE)
            Me.columnADD_USER = New Global.System.Data.DataColumn("ADD_USER", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnADD_USER)
            Me.columnUPD_USER = New Global.System.Data.DataColumn("UPD_USER", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUPD_USER)
            Me.columnUPD_DATE = New Global.System.Data.DataColumn("UPD_DATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUPD_DATE)
            Me.columnVOID = New Global.System.Data.DataColumn("VOID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVOID)
            Me.columnVOIDUSER = New Global.System.Data.DataColumn("VOIDUSER", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVOIDUSER)
            Me.columnVOIDDATE = New Global.System.Data.DataColumn("VOIDDATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVOIDDATE)
            Me.columnAUTHORISED = New Global.System.Data.DataColumn("AUTHORISED", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAUTHORISED)
            Me.columnAUTHORISE_LEVEL1 = New Global.System.Data.DataColumn("AUTHORISE_LEVEL1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAUTHORISE_LEVEL1)
            Me.columnAUTHORISE_USER1 = New Global.System.Data.DataColumn("AUTHORISE_USER1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAUTHORISE_USER1)
            Me.columnAUTHORISE_DATE1 = New Global.System.Data.DataColumn("AUTHORISE_DATE1", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAUTHORISE_DATE1)
            Me.columnAUTHORISE_LEVEL2 = New Global.System.Data.DataColumn("AUTHORISE_LEVEL2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAUTHORISE_LEVEL2)
            Me.columnAUTHORISE_USER2 = New Global.System.Data.DataColumn("AUTHORISE_USER2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAUTHORISE_USER2)
            Me.columnAUTHORISE_DATE2 = New Global.System.Data.DataColumn("AUTHORISE_DATE2", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAUTHORISE_DATE2)
            Me.columnAUTHORISE_LEVEL3 = New Global.System.Data.DataColumn("AUTHORISE_LEVEL3", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAUTHORISE_LEVEL3)
            Me.columnAUTHORISE_USER3 = New Global.System.Data.DataColumn("AUTHORISE_USER3", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAUTHORISE_USER3)
            Me.columnRESIGNED_DATE = New Global.System.Data.DataColumn("RESIGNED_DATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRESIGNED_DATE)
            Me.columnRESIGNED_FLAG = New Global.System.Data.DataColumn("RESIGNED_FLAG", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRESIGNED_FLAG)
            Me.columnNewstatus = New Global.System.Data.DataColumn("Newstatus", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNewstatus)
            Me.columnSECONDER1 = New Global.System.Data.DataColumn("SECONDER1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSECONDER1)
            Me.columnSECONDERNAME1 = New Global.System.Data.DataColumn("SECONDERNAME1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSECONDERNAME1)
            Me.columnSECONDER2 = New Global.System.Data.DataColumn("SECONDER2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSECONDER2)
            Me.columnSECONDERNAME2 = New Global.System.Data.DataColumn("SECONDERNAME2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSECONDERNAME2)
            Me.columnspl_info = New Global.System.Data.DataColumn("spl_info", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnspl_info)
            Me.columnPASSPORTNO = New Global.System.Data.DataColumn("PASSPORTNO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPASSPORTNO)
            Me.columnSequenceNo.AutoIncrement = true
            Me.columnSequenceNo.AutoIncrementSeed = -1
            Me.columnSequenceNo.AutoIncrementStep = -1
            Me.columnSequenceNo.AllowDBNull = false
            Me.columnSequenceNo.ReadOnly = true
            Me.columnTAG.MaxLength = 4
            Me.columnMEMBERTYPECODE.MaxLength = 15
            Me.columnCOMPANY.MaxLength = 50
            Me.columnSUBCD.MaxLength = 10
            Me.columnMCODE.AllowDBNull = false
            Me.columnMCODE.MaxLength = 15
            Me.columnMNAME.MaxLength = 150
            Me.columnMID.MaxLength = 10
            Me.columnSEX.MaxLength = 10
            Me.columnMARITALSTATUS.MaxLength = 10
            Me.columnSPOUSE.MaxLength = 50
            Me.columnBG.MaxLength = 10
            Me.columnOCCUPATION.MaxLength = 50
            Me.columnBANKER.MaxLength = 50
            Me.columnBANKACNO.MaxLength = 25
            Me.columnHOBBIES.MaxLength = 20
            Me.columnOTHERINFO.MaxLength = 50
            Me.columnRESIDENT.MaxLength = 25
            Me.columnEQUALIFICATION.MaxLength = 50
            Me.columnPQUALIFICATION.MaxLength = 50
            Me.columnPROPOSER.MaxLength = 50
            Me.columnPROPOSERNAME.MaxLength = 50
            Me.columnSECONDER.MaxLength = 50
            Me.columnSECONDERNAME.MaxLength = 50
            Me.columnPAcopyst.MaxLength = 10
            Me.columnPADD1.MaxLength = 150
            Me.columnPADD2.MaxLength = 150
            Me.columnPADD3.MaxLength = 150
            Me.columnPCITY.MaxLength = 50
            Me.columnPSTATE.MaxLength = 50
            Me.columnPCOUNTRY.MaxLength = 50
            Me.columnPPIN.MaxLength = 25
            Me.columnPPHONE1.MaxLength = 35
            Me.columnPPHONE2.MaxLength = 35
            Me.columnPCELL.MaxLength = 15
            Me.columnPEMAIL.MaxLength = 50
            Me.columnRAcopyst.MaxLength = 10
            Me.columnCADD1.MaxLength = 150
            Me.columnCADD2.MaxLength = 150
            Me.columnCADD3.MaxLength = 150
            Me.columnCCITY.MaxLength = 25
            Me.columnCSTATE.MaxLength = 25
            Me.columnCCOUNTRY.MaxLength = 25
            Me.columnCPIN.MaxLength = 10
            Me.columnCPHONE1.MaxLength = 35
            Me.columnCPHONE2.MaxLength = 35
            Me.columnCCELL.MaxLength = 200
            Me.columnCEMAIL.MaxLength = 50
            Me.columnCONTADD1.MaxLength = 150
            Me.columnCONTADD2.MaxLength = 150
            Me.columnCONTADD3.MaxLength = 150
            Me.columnCONTCITY.MaxLength = 25
            Me.columnCONTSTATE.MaxLength = 25
            Me.columnCONTCOUNTRY.MaxLength = 25
            Me.columnCONTPIN.MaxLength = 10
            Me.columnCONTPHONE1.MaxLength = 35
            Me.columnCONTPHONE2.MaxLength = 35
            Me.columnCONTCELL.MaxLength = 50
            Me.columnCONTEMAIL.MaxLength = 50
            Me.columnEMPTYPE.MaxLength = 50
            Me.columnBUSINESSNAME.MaxLength = 50
            Me.columnBAcopyst.MaxLength = 10
            Me.columnOADD1.MaxLength = 150
            Me.columnOADD2.MaxLength = 150
            Me.columnOADD3.MaxLength = 150
            Me.columnOCITY.MaxLength = 25
            Me.columnOSTATE.MaxLength = 25
            Me.columnOCOUNTRY.MaxLength = 25
            Me.columnOPIN.MaxLength = 25
            Me.columnOPHONE1.MaxLength = 35
            Me.columnOPHONE2.MaxLength = 35
            Me.columnBUSINESSNATURE.MaxLength = 50
            Me.columnPOSITIONHELD.MaxLength = 50
            Me.columnSERVICENAME.MaxLength = 50
            Me.columnPANO.MaxLength = 25
            Me.columnBBANKER.MaxLength = 50
            Me.columnCCNO.MaxLength = 25
            Me.columnUPDUSERID.MaxLength = 10
            Me.columnTERMINATION.MaxLength = 10
            Me.columnCON_MCODE.MaxLength = 10
            Me.columnPFAX.MaxLength = 25
            Me.columnCFAX.MaxLength = 25
            Me.columnCONTFAX.MaxLength = 25
            Me.columnREASON.MaxLength = 50
            Me.columnPHOTO.MaxLength = 20
            Me.columnCREDITLIMIT.MaxLength = 10
            Me.columnWEBSITE.MaxLength = 50
            Me.columnTempTermination.MaxLength = 10
            Me.columnTempTermReason.MaxLength = 50
            Me.columnMemberid.MaxLength = 25
            Me.columnCardNo.MaxLength = 20
            Me.columnValidity.MaxLength = 10
            Me.columnPeriod.MaxLength = 10
            Me.columnCreditcardno.MaxLength = 20
            Me.columnType.MaxLength = 10
            Me.columnCurentStatus.MaxLength = 15
            Me.columnFirstName.MaxLength = 100
            Me.columnMiddleName.MaxLength = 100
            Me.columnSurname.MaxLength = 100
            Me.columnAlias.MaxLength = 10
            Me.columnPrefix.MaxLength = 30
            Me.columnBillType.MaxLength = 20
            Me.columnNationality.MaxLength = 15
            Me.columnNationalityAtbirth.MaxLength = 15
            Me.columnBillbasis.MaxLength = 35
            Me.columnBillHead.MaxLength = 10
            Me.columnGDRLocker.MaxLength = 10
            Me.columnLDRLocker.MaxLength = 10
            Me.columnsalut.MaxLength = 12
            Me.columnCriditNumber.MaxLength = 10
            Me.columnPlaceOfBirth.MaxLength = 35
            Me.columnCountryOfBirth.MaxLength = 35
            Me.columnPreviouslyProposed.MaxLength = 10
            Me.columnResultOfProposal.MaxLength = 10
            Me.columnElected.MaxLength = 10
            Me.columnFatherName.MaxLength = 35
            Me.columnMaidenNameWife.MaxLength = 35
            Me.columnNationalityWife.MaxLength = 35
            Me.columnWifesFatherName.MaxLength = 35
            Me.columnApplNo.MaxLength = 10
            Me.columnCorporatest.MaxLength = 50
            Me.columnCorporateCode.MaxLength = 10
            Me.columnCompName.MaxLength = 35
            Me.columnDesignation.MaxLength = 15
            Me.columnProfessionInfo.MaxLength = 50
            Me.columnBuisnessInfo.MaxLength = 50
            Me.columnProducts.MaxLength = 50
            Me.columnAgentsDealers.MaxLength = 50
            Me.columnClient.MaxLength = 50
            Me.columnAppliedBut.MaxLength = 50
            Me.columnPositionInChamber.MaxLength = 50
            Me.columnQulificationstatus.MaxLength = 10
            Me.columnQualification1.MaxLength = 35
            Me.columnDetails1.MaxLength = 50
            Me.columnYearOfPassing1.MaxLength = 20
            Me.columnInstitute1.MaxLength = 35
            Me.columnDivision1.MaxLength = 50
            Me.columnQualification2.MaxLength = 35
            Me.columnDetails2.MaxLength = 50
            Me.columnYearOfPassing2.MaxLength = 50
            Me.columnInstitute2.MaxLength = 35
            Me.columnDivision2.MaxLength = 50
            Me.columnQualification3.MaxLength = 35
            Me.columnDetails3.MaxLength = 50
            Me.columnYearOfPassing3.MaxLength = 50
            Me.columnInstitute3.MaxLength = 35
            Me.columnDivision3.MaxLength = 50
            Me.columnsportstatus.MaxLength = 1
            Me.columnGameType1.MaxLength = 10
            Me.columnNameOfGame1.MaxLength = 35
            Me.columnDescription1.MaxLength = 50
            Me.columnGameType2.MaxLength = 10
            Me.columnNameofGame2.MaxLength = 35
            Me.columnDescription2.MaxLength = 50
            Me.columnGameType3.MaxLength = 10
            Me.columnNameOfGame3.MaxLength = 35
            Me.columnDescription3.MaxLength = 50
            Me.columnChildstatus.MaxLength = 1
            Me.columnChildName1.MaxLength = 50
            Me.columnChildDob1.MaxLength = 50
            Me.columnChildSex1.MaxLength = 8
            Me.columnChildExpairy1.MaxLength = 50
            Me.columnChildName2.MaxLength = 50
            Me.columnChildDob2.MaxLength = 50
            Me.columnChildSex2.MaxLength = 8
            Me.columnChildExpairy2.MaxLength = 50
            Me.columnChildName3.MaxLength = 50
            Me.columnChildDob3.MaxLength = 50
            Me.columnChildSex3.MaxLength = 8
            Me.columnchildExpairy3.MaxLength = 50
            Me.columnClubstatus.MaxLength = 1
            Me.columnOtherClubName1.MaxLength = 35
            Me.columnOCAddress1.MaxLength = 50
            Me.columnOCStatus1.MaxLength = 10
            Me.columnOtherClubName2.MaxLength = 35
            Me.columnOCAddress2.MaxLength = 50
            Me.columnOCStatus2.MaxLength = 10
            Me.columnOtherClubname3.MaxLength = 50
            Me.columnOCAddress3.MaxLength = 50
            Me.columnOCStataus.MaxLength = 15
            Me.columnadduser.MaxLength = 50
            Me.columnfreeze.MaxLength = 1
            Me.columnRelativestatus.MaxLength = 1
            Me.columnRelativeName1.MaxLength = 35
            Me.columnRelation1.MaxLength = 35
            Me.columndateofbirth1.MaxLength = 50
            Me.columnRelativeage1.MaxLength = 50
            Me.columnRelativeSex1.MaxLength = 1
            Me.columnRelativeaddress1.MaxLength = 50
            Me.columnRelativeName2.MaxLength = 35
            Me.columnRelation2.MaxLength = 50
            Me.columndateofbirth2.MaxLength = 50
            Me.columnRelativeage2.MaxLength = 50
            Me.columnRelativeSex2.MaxLength = 1
            Me.columnRelativeaddress2.MaxLength = 50
            Me.columnRelativeName3.MaxLength = 35
            Me.columnRelation3.MaxLength = 35
            Me.columndateofbirth3.MaxLength = 50
            Me.columnRelativeage3.MaxLength = 50
            Me.columnRelativeSex3.MaxLength = 1
            Me.columnRelativeaddress3.MaxLength = 50
            Me.columnreferentialst.MaxLength = 1
            Me.columnmem_code1.MaxLength = 20
            Me.columnmem_name1.MaxLength = 30
            Me.columnrefmem_date1.MaxLength = 30
            Me.columndeleted1.MaxLength = 20
            Me.columnmem_code2.MaxLength = 20
            Me.columnmem_name2.MaxLength = 30
            Me.columnrefmem_date2.MaxLength = 30
            Me.columndeleted2.MaxLength = 20
            Me.columnmem_code3.MaxLength = 20
            Me.columnmem_name3.MaxLength = 30
            Me.columnrefmem_date3.MaxLength = 30
            Me.columndeleted3.MaxLength = 20
            Me.columnentrancefeest.MaxLength = 1
            Me.columnreceiptno1.MaxLength = 20
            Me.columnstartdate1.MaxLength = 30
            Me.columnamount1.MaxLength = 50
            Me.columnreceiptno2.MaxLength = 20
            Me.columnstartdate2.MaxLength = 30
            Me.columnamount2.MaxLength = 20
            Me.columnreceiptno3.MaxLength = 20
            Me.columnstartdate3.MaxLength = 30
            Me.columnamount3.MaxLength = 20
            Me.columnOLD.MaxLength = 10
            Me.columnCREDITNO.MaxLength = 10
            Me.columnSPOUSEMOBILE.MaxLength = 20
            Me.columnP_NO.MaxLength = 20
            Me.columnMEM_CODE.MaxLength = 30
            Me.columnmb_oprsop.MaxLength = 1
            Me.columnm_payroll.MaxLength = 20
            Me.columnlib_mem.MaxLength = 1
            Me.columnlibbillingbasis.MaxLength = 20
            Me.columnmcodec.MaxLength = 5
            Me.columnmcode1.MaxLength = 20
            Me.columnhplocker.MaxLength = 20
            Me.columnGLCODE.MaxLength = 20
            Me.columntermletter.MaxLength = 20
            Me.columnMEMBERTYPE.MaxLength = 1000
            Me.columnPADD4.MaxLength = 50
            Me.columnCADD4.MaxLength = 50
            Me.columnEMAIL_FLAG.MaxLength = 30
            Me.columnEBILL.MaxLength = 20
            Me.columnTAXFLAG.MaxLength = 10
            Me.columnMLEDGERNAME.MaxLength = 50
            Me.columnBACOPYST1.MaxLength = 1
            Me.columnRACOPYST1.MaxLength = 1
            Me.columnMSORDERNO.MaxLength = 50
            Me.columnPREFIXMCODE.MaxLength = 10
            Me.columnPACOPYST1.MaxLength = 1
            Me.columnOCELL.MaxLength = 60
            Me.columnOEMAIL.MaxLength = 510
            Me.columnICNO.MaxLength = 50
            Me.columnUNITNO.MaxLength = 50
            Me.columnMDESCRIPTION.MaxLength = 100
            Me.columnRIDCARDNO.MaxLength = 50
            Me.columnARMSERVICE.MaxLength = 50
            Me.columnWO.MaxLength = 50
            Me.columnNOOFDEPENDENCIES.MaxLength = 50
            Me.columnRBYMEMBERNO.MaxLength = 50
            Me.columnRBYMEMBERNO2.MaxLength = 50
            Me.columnRBYNAME.MaxLength = 50
            Me.columnRBYMEMBERNAME2.MaxLength = 50
            Me.columnRANKNO.MaxLength = 50
            Me.columnPLOTNO.MaxLength = 50
            Me.columnSOCIETYNO.MaxLength = 50
            Me.columnCREDITSTOPFLAG.MaxLength = 1
            Me.columnBTGROUP.MaxLength = 50
            Me.columnARMYNO.MaxLength = 500
            Me.columnRANKNAME.MaxLength = 500
            Me.columnBARCODENO.MaxLength = 500
            Me.columnF_MCODE.MaxLength = 20
            Me.columnNOMINEE.MaxLength = 30
            Me.columnENC_SMARTCARDNO.MaxLength = 100
            Me.columnMTORDERNO.MaxLength = 10
            Me.columnMARITAL_STATUS.MaxLength = 15
            Me.columnoldmcode.MaxLength = 20
            Me.columnnewmcode.MaxLength = 20
            Me.columnMemberdesigncode.MaxLength = 15
            Me.columnCitycode.MaxLength = 15
            Me.columnStatecode.MaxLength = 15
            Me.columnSaluatationCode.MaxLength = 15
            Me.columnReligionCode.MaxLength = 15
            Me.columnCountrycode.MaxLength = 15
            Me.columnMemberMaritialcode.MaxLength = 15
            Me.columnspouseprefix.MaxLength = 10
            Me.columnSpouseFreeze.MaxLength = 1
            Me.columnREPLACEMENT.MaxLength = 15
            Me.columnRNO.MaxLength = 20
            Me.columnreligion.MaxLength = 50
            Me.columnADD_USER.MaxLength = 50
            Me.columnUPD_USER.MaxLength = 9
            Me.columnVOID.MaxLength = 9
            Me.columnVOIDUSER.MaxLength = 9
            Me.columnAUTHORISED.MaxLength = 2
            Me.columnAUTHORISE_LEVEL1.MaxLength = 2
            Me.columnAUTHORISE_USER1.MaxLength = 20
            Me.columnAUTHORISE_LEVEL2.MaxLength = 2
            Me.columnAUTHORISE_USER2.MaxLength = 20
            Me.columnAUTHORISE_LEVEL3.MaxLength = 2
            Me.columnAUTHORISE_USER3.MaxLength = 20
            Me.columnRESIGNED_FLAG.MaxLength = 3
            Me.columnNewstatus.MaxLength = 20
            Me.columnSECONDER1.MaxLength = 50
            Me.columnSECONDERNAME1.MaxLength = 50
            Me.columnSECONDER2.MaxLength = 50
            Me.columnSECONDERNAME2.MaxLength = 50
            Me.columnspl_info.MaxLength = 100
            Me.columnPASSPORTNO.MaxLength = 50
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewmembermasterRow() As membermasterRow
            Return CType(Me.NewRow,membermasterRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New membermasterRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(membermasterRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.membermasterRowChangedEvent) Is Nothing) Then
                RaiseEvent membermasterRowChanged(Me, New membermasterRowChangeEvent(CType(e.Row,membermasterRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.membermasterRowChangingEvent) Is Nothing) Then
                RaiseEvent membermasterRowChanging(Me, New membermasterRowChangeEvent(CType(e.Row,membermasterRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.membermasterRowDeletedEvent) Is Nothing) Then
                RaiseEvent membermasterRowDeleted(Me, New membermasterRowChangeEvent(CType(e.Row,membermasterRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.membermasterRowDeletingEvent) Is Nothing) Then
                RaiseEvent membermasterRowDeleting(Me, New membermasterRowChangeEvent(CType(e.Row,membermasterRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemovemembermasterRow(ByVal row As membermasterRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DataSet2 = New DataSet2()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "membermasterDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class View_DRCR_SUMDataTable
        Inherits Global.System.Data.TypedTableBase(Of View_DRCR_SUMRow)
        
        Private columnbillno As Global.System.Data.DataColumn
        
        Private columnbilldate As Global.System.Data.DataColumn
        
        Private columnMCODE As Global.System.Data.DataColumn
        
        Private columnBRAMOUNT As Global.System.Data.DataColumn
        
        Private columnCRAMOUNT As Global.System.Data.DataColumn
        
        Private columnCCRAMOUNT As Global.System.Data.DataColumn
        
        Private columnCCNAMOUNT As Global.System.Data.DataColumn
        
        Private columnCDNAMOUNT As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "View_DRCR_SUM"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property billnoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnbillno
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property billdateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnbilldate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MCODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMCODE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BRAMOUNTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBRAMOUNT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CRAMOUNTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCRAMOUNT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CCRAMOUNTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCCRAMOUNT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CCNAMOUNTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCCNAMOUNT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CDNAMOUNTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCDNAMOUNT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As View_DRCR_SUMRow
            Get
                Return CType(Me.Rows(index),View_DRCR_SUMRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event View_DRCR_SUMRowChanging As View_DRCR_SUMRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event View_DRCR_SUMRowChanged As View_DRCR_SUMRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event View_DRCR_SUMRowDeleting As View_DRCR_SUMRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event View_DRCR_SUMRowDeleted As View_DRCR_SUMRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddView_DRCR_SUMRow(ByVal row As View_DRCR_SUMRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddView_DRCR_SUMRow(ByVal billno As String, ByVal billdate As Date, ByVal MCODE As String, ByVal BRAMOUNT As Decimal, ByVal CRAMOUNT As Decimal, ByVal CCRAMOUNT As Decimal, ByVal CCNAMOUNT As Decimal, ByVal CDNAMOUNT As Decimal) As View_DRCR_SUMRow
            Dim rowView_DRCR_SUMRow As View_DRCR_SUMRow = CType(Me.NewRow,View_DRCR_SUMRow)
            Dim columnValuesArray() As Object = New Object() {billno, billdate, MCODE, BRAMOUNT, CRAMOUNT, CCRAMOUNT, CCNAMOUNT, CDNAMOUNT}
            rowView_DRCR_SUMRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowView_DRCR_SUMRow)
            Return rowView_DRCR_SUMRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As View_DRCR_SUMDataTable = CType(MyBase.Clone,View_DRCR_SUMDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New View_DRCR_SUMDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnbillno = MyBase.Columns("billno")
            Me.columnbilldate = MyBase.Columns("billdate")
            Me.columnMCODE = MyBase.Columns("MCODE")
            Me.columnBRAMOUNT = MyBase.Columns("BRAMOUNT")
            Me.columnCRAMOUNT = MyBase.Columns("CRAMOUNT")
            Me.columnCCRAMOUNT = MyBase.Columns("CCRAMOUNT")
            Me.columnCCNAMOUNT = MyBase.Columns("CCNAMOUNT")
            Me.columnCDNAMOUNT = MyBase.Columns("CDNAMOUNT")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnbillno = New Global.System.Data.DataColumn("billno", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnbillno)
            Me.columnbilldate = New Global.System.Data.DataColumn("billdate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnbilldate)
            Me.columnMCODE = New Global.System.Data.DataColumn("MCODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMCODE)
            Me.columnBRAMOUNT = New Global.System.Data.DataColumn("BRAMOUNT", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBRAMOUNT)
            Me.columnCRAMOUNT = New Global.System.Data.DataColumn("CRAMOUNT", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCRAMOUNT)
            Me.columnCCRAMOUNT = New Global.System.Data.DataColumn("CCRAMOUNT", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCCRAMOUNT)
            Me.columnCCNAMOUNT = New Global.System.Data.DataColumn("CCNAMOUNT", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCCNAMOUNT)
            Me.columnCDNAMOUNT = New Global.System.Data.DataColumn("CDNAMOUNT", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCDNAMOUNT)
            Me.columnbillno.AllowDBNull = false
            Me.columnbillno.MaxLength = 50
            Me.columnbilldate.AllowDBNull = false
            Me.columnMCODE.AllowDBNull = false
            Me.columnMCODE.MaxLength = 10
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewView_DRCR_SUMRow() As View_DRCR_SUMRow
            Return CType(Me.NewRow,View_DRCR_SUMRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New View_DRCR_SUMRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(View_DRCR_SUMRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.View_DRCR_SUMRowChangedEvent) Is Nothing) Then
                RaiseEvent View_DRCR_SUMRowChanged(Me, New View_DRCR_SUMRowChangeEvent(CType(e.Row,View_DRCR_SUMRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.View_DRCR_SUMRowChangingEvent) Is Nothing) Then
                RaiseEvent View_DRCR_SUMRowChanging(Me, New View_DRCR_SUMRowChangeEvent(CType(e.Row,View_DRCR_SUMRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.View_DRCR_SUMRowDeletedEvent) Is Nothing) Then
                RaiseEvent View_DRCR_SUMRowDeleted(Me, New View_DRCR_SUMRowChangeEvent(CType(e.Row,View_DRCR_SUMRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.View_DRCR_SUMRowDeletingEvent) Is Nothing) Then
                RaiseEvent View_DRCR_SUMRowDeleting(Me, New View_DRCR_SUMRowChangeEvent(CType(e.Row,View_DRCR_SUMRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveView_DRCR_SUMRow(ByVal row As View_DRCR_SUMRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DataSet2 = New DataSet2()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "View_DRCR_SUMDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class MEM_POS_DETDataTable
        Inherits Global.System.Data.TypedTableBase(Of MEM_POS_DETRow)
        
        Private columnposcode As Global.System.Data.DataColumn
        
        Private columnposdesc As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "MEM_POS_DET"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property poscodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnposcode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property posdescColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnposdesc
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As MEM_POS_DETRow
            Get
                Return CType(Me.Rows(index),MEM_POS_DETRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event MEM_POS_DETRowChanging As MEM_POS_DETRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event MEM_POS_DETRowChanged As MEM_POS_DETRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event MEM_POS_DETRowDeleting As MEM_POS_DETRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event MEM_POS_DETRowDeleted As MEM_POS_DETRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddMEM_POS_DETRow(ByVal row As MEM_POS_DETRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddMEM_POS_DETRow(ByVal poscode As String, ByVal posdesc As String) As MEM_POS_DETRow
            Dim rowMEM_POS_DETRow As MEM_POS_DETRow = CType(Me.NewRow,MEM_POS_DETRow)
            Dim columnValuesArray() As Object = New Object() {poscode, posdesc}
            rowMEM_POS_DETRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowMEM_POS_DETRow)
            Return rowMEM_POS_DETRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As MEM_POS_DETDataTable = CType(MyBase.Clone,MEM_POS_DETDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New MEM_POS_DETDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnposcode = MyBase.Columns("poscode")
            Me.columnposdesc = MyBase.Columns("posdesc")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnposcode = New Global.System.Data.DataColumn("poscode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnposcode)
            Me.columnposdesc = New Global.System.Data.DataColumn("posdesc", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnposdesc)
            Me.columnposcode.AllowDBNull = false
            Me.columnposcode.MaxLength = 10
            Me.columnposdesc.MaxLength = 50
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewMEM_POS_DETRow() As MEM_POS_DETRow
            Return CType(Me.NewRow,MEM_POS_DETRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New MEM_POS_DETRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(MEM_POS_DETRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.MEM_POS_DETRowChangedEvent) Is Nothing) Then
                RaiseEvent MEM_POS_DETRowChanged(Me, New MEM_POS_DETRowChangeEvent(CType(e.Row,MEM_POS_DETRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.MEM_POS_DETRowChangingEvent) Is Nothing) Then
                RaiseEvent MEM_POS_DETRowChanging(Me, New MEM_POS_DETRowChangeEvent(CType(e.Row,MEM_POS_DETRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.MEM_POS_DETRowDeletedEvent) Is Nothing) Then
                RaiseEvent MEM_POS_DETRowDeleted(Me, New MEM_POS_DETRowChangeEvent(CType(e.Row,MEM_POS_DETRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.MEM_POS_DETRowDeletingEvent) Is Nothing) Then
                RaiseEvent MEM_POS_DETRowDeleting(Me, New MEM_POS_DETRowChangeEvent(CType(e.Row,MEM_POS_DETRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveMEM_POS_DETRow(ByVal row As MEM_POS_DETRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DataSet2 = New DataSet2()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "MEM_POS_DETDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class VIEW_WBSTDataTable
        Inherits Global.System.Data.TypedTableBase(Of VIEW_WBSTRow)
        
        Private columnBILLDETAILS As Global.System.Data.DataColumn
        
        Private columnWBST As Global.System.Data.DataColumn
        
        Private columnmcode As Global.System.Data.DataColumn
        
        Private columnKOTDATE As Global.System.Data.DataColumn
        
        Private columnTAXCODE As Global.System.Data.DataColumn
        
        Private columnTAXPERCENT As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "VIEW_WBST"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BILLDETAILSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBILLDETAILS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property WBSTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnWBST
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property mcodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnmcode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property KOTDATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnKOTDATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TAXCODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTAXCODE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TAXPERCENTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTAXPERCENT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As VIEW_WBSTRow
            Get
                Return CType(Me.Rows(index),VIEW_WBSTRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event VIEW_WBSTRowChanging As VIEW_WBSTRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event VIEW_WBSTRowChanged As VIEW_WBSTRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event VIEW_WBSTRowDeleting As VIEW_WBSTRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event VIEW_WBSTRowDeleted As VIEW_WBSTRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddVIEW_WBSTRow(ByVal row As VIEW_WBSTRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddVIEW_WBSTRow(ByVal BILLDETAILS As String, ByVal WBST As Decimal, ByVal mcode As String, ByVal KOTDATE As Date, ByVal TAXCODE As String, ByVal TAXPERCENT As Decimal) As VIEW_WBSTRow
            Dim rowVIEW_WBSTRow As VIEW_WBSTRow = CType(Me.NewRow,VIEW_WBSTRow)
            Dim columnValuesArray() As Object = New Object() {BILLDETAILS, WBST, mcode, KOTDATE, TAXCODE, TAXPERCENT}
            rowVIEW_WBSTRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowVIEW_WBSTRow)
            Return rowVIEW_WBSTRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As VIEW_WBSTDataTable = CType(MyBase.Clone,VIEW_WBSTDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New VIEW_WBSTDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnBILLDETAILS = MyBase.Columns("BILLDETAILS")
            Me.columnWBST = MyBase.Columns("WBST")
            Me.columnmcode = MyBase.Columns("mcode")
            Me.columnKOTDATE = MyBase.Columns("KOTDATE")
            Me.columnTAXCODE = MyBase.Columns("TAXCODE")
            Me.columnTAXPERCENT = MyBase.Columns("TAXPERCENT")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnBILLDETAILS = New Global.System.Data.DataColumn("BILLDETAILS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBILLDETAILS)
            Me.columnWBST = New Global.System.Data.DataColumn("WBST", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWBST)
            Me.columnmcode = New Global.System.Data.DataColumn("mcode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmcode)
            Me.columnKOTDATE = New Global.System.Data.DataColumn("KOTDATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnKOTDATE)
            Me.columnTAXCODE = New Global.System.Data.DataColumn("TAXCODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTAXCODE)
            Me.columnTAXPERCENT = New Global.System.Data.DataColumn("TAXPERCENT", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTAXPERCENT)
            Me.columnBILLDETAILS.MaxLength = 50
            Me.columnmcode.MaxLength = 50
            Me.columnTAXCODE.MaxLength = 15
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewVIEW_WBSTRow() As VIEW_WBSTRow
            Return CType(Me.NewRow,VIEW_WBSTRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New VIEW_WBSTRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(VIEW_WBSTRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.VIEW_WBSTRowChangedEvent) Is Nothing) Then
                RaiseEvent VIEW_WBSTRowChanged(Me, New VIEW_WBSTRowChangeEvent(CType(e.Row,VIEW_WBSTRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.VIEW_WBSTRowChangingEvent) Is Nothing) Then
                RaiseEvent VIEW_WBSTRowChanging(Me, New VIEW_WBSTRowChangeEvent(CType(e.Row,VIEW_WBSTRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.VIEW_WBSTRowDeletedEvent) Is Nothing) Then
                RaiseEvent VIEW_WBSTRowDeleted(Me, New VIEW_WBSTRowChangeEvent(CType(e.Row,VIEW_WBSTRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.VIEW_WBSTRowDeletingEvent) Is Nothing) Then
                RaiseEvent VIEW_WBSTRowDeleting(Me, New VIEW_WBSTRowChangeEvent(CType(e.Row,VIEW_WBSTRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveVIEW_WBSTRow(ByVal row As VIEW_WBSTRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DataSet2 = New DataSet2()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "VIEW_WBSTDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class View_Recipt_DetCCLDataTable
        Inherits Global.System.Data.TypedTableBase(Of View_Recipt_DetCCLRow)
        
        Private columnbillno As Global.System.Data.DataColumn
        
        Private columnbilldate As Global.System.Data.DataColumn
        
        Private columnMCODE As Global.System.Data.DataColumn
        
        Private columnDramount As Global.System.Data.DataColumn
        
        Private columnCramount As Global.System.Data.DataColumn
        
        Private columnlocdesc As Global.System.Data.DataColumn
        
        Private columnloccode As Global.System.Data.DataColumn
        
        Private columnInstrumentType As Global.System.Data.DataColumn
        
        Private columnDescription As Global.System.Data.DataColumn
        
        Private columnInstrumentno As Global.System.Data.DataColumn
        
        Private columnCREDITDEBIT As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "View_Recipt_DetCCL"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property billnoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnbillno
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property billdateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnbilldate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MCODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMCODE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DramountColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDramount
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CramountColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCramount
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property locdescColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnlocdesc
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property loccodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnloccode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property InstrumentTypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnInstrumentType
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DescriptionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDescription
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property InstrumentnoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnInstrumentno
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CREDITDEBITColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCREDITDEBIT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As View_Recipt_DetCCLRow
            Get
                Return CType(Me.Rows(index),View_Recipt_DetCCLRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event View_Recipt_DetCCLRowChanging As View_Recipt_DetCCLRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event View_Recipt_DetCCLRowChanged As View_Recipt_DetCCLRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event View_Recipt_DetCCLRowDeleting As View_Recipt_DetCCLRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event View_Recipt_DetCCLRowDeleted As View_Recipt_DetCCLRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddView_Recipt_DetCCLRow(ByVal row As View_Recipt_DetCCLRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddView_Recipt_DetCCLRow(ByVal billno As String, ByVal billdate As Date, ByVal MCODE As String, ByVal Dramount As Decimal, ByVal Cramount As Decimal, ByVal locdesc As String, ByVal loccode As String, ByVal InstrumentType As String, ByVal Description As String, ByVal Instrumentno As String, ByVal CREDITDEBIT As String) As View_Recipt_DetCCLRow
            Dim rowView_Recipt_DetCCLRow As View_Recipt_DetCCLRow = CType(Me.NewRow,View_Recipt_DetCCLRow)
            Dim columnValuesArray() As Object = New Object() {billno, billdate, MCODE, Dramount, Cramount, locdesc, loccode, InstrumentType, Description, Instrumentno, CREDITDEBIT}
            rowView_Recipt_DetCCLRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowView_Recipt_DetCCLRow)
            Return rowView_Recipt_DetCCLRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As View_Recipt_DetCCLDataTable = CType(MyBase.Clone,View_Recipt_DetCCLDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New View_Recipt_DetCCLDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnbillno = MyBase.Columns("billno")
            Me.columnbilldate = MyBase.Columns("billdate")
            Me.columnMCODE = MyBase.Columns("MCODE")
            Me.columnDramount = MyBase.Columns("Dramount")
            Me.columnCramount = MyBase.Columns("Cramount")
            Me.columnlocdesc = MyBase.Columns("locdesc")
            Me.columnloccode = MyBase.Columns("loccode")
            Me.columnInstrumentType = MyBase.Columns("InstrumentType")
            Me.columnDescription = MyBase.Columns("Description")
            Me.columnInstrumentno = MyBase.Columns("Instrumentno")
            Me.columnCREDITDEBIT = MyBase.Columns("CREDITDEBIT")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnbillno = New Global.System.Data.DataColumn("billno", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnbillno)
            Me.columnbilldate = New Global.System.Data.DataColumn("billdate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnbilldate)
            Me.columnMCODE = New Global.System.Data.DataColumn("MCODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMCODE)
            Me.columnDramount = New Global.System.Data.DataColumn("Dramount", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDramount)
            Me.columnCramount = New Global.System.Data.DataColumn("Cramount", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCramount)
            Me.columnlocdesc = New Global.System.Data.DataColumn("locdesc", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnlocdesc)
            Me.columnloccode = New Global.System.Data.DataColumn("loccode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnloccode)
            Me.columnInstrumentType = New Global.System.Data.DataColumn("InstrumentType", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnInstrumentType)
            Me.columnDescription = New Global.System.Data.DataColumn("Description", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDescription)
            Me.columnInstrumentno = New Global.System.Data.DataColumn("Instrumentno", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnInstrumentno)
            Me.columnCREDITDEBIT = New Global.System.Data.DataColumn("CREDITDEBIT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCREDITDEBIT)
            Me.columnbillno.AllowDBNull = false
            Me.columnbillno.MaxLength = 50
            Me.columnbilldate.AllowDBNull = false
            Me.columnMCODE.AllowDBNull = false
            Me.columnMCODE.MaxLength = 10
            Me.columnlocdesc.AllowDBNull = false
            Me.columnlocdesc.MaxLength = 50
            Me.columnloccode.AllowDBNull = false
            Me.columnloccode.MaxLength = 50
            Me.columnInstrumentType.AllowDBNull = false
            Me.columnInstrumentType.MaxLength = 20
            Me.columnDescription.AllowDBNull = false
            Me.columnDescription.MaxLength = 500
            Me.columnInstrumentno.AllowDBNull = false
            Me.columnInstrumentno.MaxLength = 25
            Me.columnCREDITDEBIT.AllowDBNull = false
            Me.columnCREDITDEBIT.MaxLength = 10
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewView_Recipt_DetCCLRow() As View_Recipt_DetCCLRow
            Return CType(Me.NewRow,View_Recipt_DetCCLRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New View_Recipt_DetCCLRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(View_Recipt_DetCCLRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.View_Recipt_DetCCLRowChangedEvent) Is Nothing) Then
                RaiseEvent View_Recipt_DetCCLRowChanged(Me, New View_Recipt_DetCCLRowChangeEvent(CType(e.Row,View_Recipt_DetCCLRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.View_Recipt_DetCCLRowChangingEvent) Is Nothing) Then
                RaiseEvent View_Recipt_DetCCLRowChanging(Me, New View_Recipt_DetCCLRowChangeEvent(CType(e.Row,View_Recipt_DetCCLRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.View_Recipt_DetCCLRowDeletedEvent) Is Nothing) Then
                RaiseEvent View_Recipt_DetCCLRowDeleted(Me, New View_Recipt_DetCCLRowChangeEvent(CType(e.Row,View_Recipt_DetCCLRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.View_Recipt_DetCCLRowDeletingEvent) Is Nothing) Then
                RaiseEvent View_Recipt_DetCCLRowDeleting(Me, New View_Recipt_DetCCLRowChangeEvent(CType(e.Row,View_Recipt_DetCCLRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveView_Recipt_DetCCLRow(ByVal row As View_Recipt_DetCCLRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DataSet2 = New DataSet2()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "View_Recipt_DetCCLDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class MEMBER_CONSUMPTION_OUTLETDataTable
        Inherits Global.System.Data.TypedTableBase(Of MEMBER_CONSUMPTION_OUTLETRow)
        
        Private columnBILLDETAILS As Global.System.Data.DataColumn
        
        Private columnPOSCODE As Global.System.Data.DataColumn
        
        Private columnPOSDESC As Global.System.Data.DataColumn
        
        Private columnKOTDATE As Global.System.Data.DataColumn
        
        Private columnMCODE As Global.System.Data.DataColumn
        
        Private columnAMOUNT As Global.System.Data.DataColumn
        
        Private columnVAT14 As Global.System.Data.DataColumn
        
        Private columnVAT25 As Global.System.Data.DataColumn
        
        Private columnVAT35 As Global.System.Data.DataColumn
        
        Private columnVAT7 As Global.System.Data.DataColumn
        
        Private columnVAT5 As Global.System.Data.DataColumn
        
        Private columnSERTAX4 As Global.System.Data.DataColumn
        
        Private columnSERTAX12 As Global.System.Data.DataColumn
        
        Private columnSCharge As Global.System.Data.DataColumn
        
        Private columnSERVICE_CHARGE As Global.System.Data.DataColumn
        
        Private columnSNO As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "MEMBER_CONSUMPTION_OUTLET"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BILLDETAILSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBILLDETAILS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property POSCODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPOSCODE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property POSDESCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPOSDESC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property KOTDATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnKOTDATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MCODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMCODE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AMOUNTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAMOUNT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property VAT14Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnVAT14
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property VAT25Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnVAT25
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property VAT35Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnVAT35
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property VAT7Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnVAT7
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property VAT5Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnVAT5
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SERTAX4Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnSERTAX4
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SERTAX12Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnSERTAX12
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SChargeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSCharge
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SERVICE_CHARGEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSERVICE_CHARGE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SNOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSNO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As MEMBER_CONSUMPTION_OUTLETRow
            Get
                Return CType(Me.Rows(index),MEMBER_CONSUMPTION_OUTLETRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event MEMBER_CONSUMPTION_OUTLETRowChanging As MEMBER_CONSUMPTION_OUTLETRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event MEMBER_CONSUMPTION_OUTLETRowChanged As MEMBER_CONSUMPTION_OUTLETRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event MEMBER_CONSUMPTION_OUTLETRowDeleting As MEMBER_CONSUMPTION_OUTLETRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event MEMBER_CONSUMPTION_OUTLETRowDeleted As MEMBER_CONSUMPTION_OUTLETRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddMEMBER_CONSUMPTION_OUTLETRow(ByVal row As MEMBER_CONSUMPTION_OUTLETRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddMEMBER_CONSUMPTION_OUTLETRow( _
                    ByVal BILLDETAILS As String,  _
                    ByVal POSCODE As String,  _
                    ByVal POSDESC As String,  _
                    ByVal KOTDATE As Date,  _
                    ByVal MCODE As String,  _
                    ByVal AMOUNT As Decimal,  _
                    ByVal VAT14 As Decimal,  _
                    ByVal VAT25 As Integer,  _
                    ByVal VAT35 As Decimal,  _
                    ByVal VAT7 As Decimal,  _
                    ByVal VAT5 As Decimal,  _
                    ByVal SERTAX4 As Decimal,  _
                    ByVal SERTAX12 As Decimal,  _
                    ByVal SCharge As Integer,  _
                    ByVal SERVICE_CHARGE As Decimal,  _
                    ByVal SNO As String) As MEMBER_CONSUMPTION_OUTLETRow
            Dim rowMEMBER_CONSUMPTION_OUTLETRow As MEMBER_CONSUMPTION_OUTLETRow = CType(Me.NewRow,MEMBER_CONSUMPTION_OUTLETRow)
            Dim columnValuesArray() As Object = New Object() {BILLDETAILS, POSCODE, POSDESC, KOTDATE, MCODE, AMOUNT, VAT14, VAT25, VAT35, VAT7, VAT5, SERTAX4, SERTAX12, SCharge, SERVICE_CHARGE, SNO}
            rowMEMBER_CONSUMPTION_OUTLETRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowMEMBER_CONSUMPTION_OUTLETRow)
            Return rowMEMBER_CONSUMPTION_OUTLETRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As MEMBER_CONSUMPTION_OUTLETDataTable = CType(MyBase.Clone,MEMBER_CONSUMPTION_OUTLETDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New MEMBER_CONSUMPTION_OUTLETDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnBILLDETAILS = MyBase.Columns("BILLDETAILS")
            Me.columnPOSCODE = MyBase.Columns("POSCODE")
            Me.columnPOSDESC = MyBase.Columns("POSDESC")
            Me.columnKOTDATE = MyBase.Columns("KOTDATE")
            Me.columnMCODE = MyBase.Columns("MCODE")
            Me.columnAMOUNT = MyBase.Columns("AMOUNT")
            Me.columnVAT14 = MyBase.Columns("VAT14")
            Me.columnVAT25 = MyBase.Columns("VAT25")
            Me.columnVAT35 = MyBase.Columns("VAT35")
            Me.columnVAT7 = MyBase.Columns("VAT7")
            Me.columnVAT5 = MyBase.Columns("VAT5")
            Me.columnSERTAX4 = MyBase.Columns("SERTAX4")
            Me.columnSERTAX12 = MyBase.Columns("SERTAX12")
            Me.columnSCharge = MyBase.Columns("SCharge")
            Me.columnSERVICE_CHARGE = MyBase.Columns("SERVICE_CHARGE")
            Me.columnSNO = MyBase.Columns("SNO")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnBILLDETAILS = New Global.System.Data.DataColumn("BILLDETAILS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBILLDETAILS)
            Me.columnPOSCODE = New Global.System.Data.DataColumn("POSCODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPOSCODE)
            Me.columnPOSDESC = New Global.System.Data.DataColumn("POSDESC", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPOSDESC)
            Me.columnKOTDATE = New Global.System.Data.DataColumn("KOTDATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnKOTDATE)
            Me.columnMCODE = New Global.System.Data.DataColumn("MCODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMCODE)
            Me.columnAMOUNT = New Global.System.Data.DataColumn("AMOUNT", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAMOUNT)
            Me.columnVAT14 = New Global.System.Data.DataColumn("VAT14", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVAT14)
            Me.columnVAT25 = New Global.System.Data.DataColumn("VAT25", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVAT25)
            Me.columnVAT35 = New Global.System.Data.DataColumn("VAT35", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVAT35)
            Me.columnVAT7 = New Global.System.Data.DataColumn("VAT7", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVAT7)
            Me.columnVAT5 = New Global.System.Data.DataColumn("VAT5", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVAT5)
            Me.columnSERTAX4 = New Global.System.Data.DataColumn("SERTAX4", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSERTAX4)
            Me.columnSERTAX12 = New Global.System.Data.DataColumn("SERTAX12", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSERTAX12)
            Me.columnSCharge = New Global.System.Data.DataColumn("SCharge", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSCharge)
            Me.columnSERVICE_CHARGE = New Global.System.Data.DataColumn("SERVICE_CHARGE", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSERVICE_CHARGE)
            Me.columnSNO = New Global.System.Data.DataColumn("SNO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSNO)
            Me.columnBILLDETAILS.MaxLength = 50
            Me.columnPOSCODE.MaxLength = 50
            Me.columnPOSDESC.MaxLength = 50
            Me.columnMCODE.MaxLength = 50
            Me.columnSNO.AllowDBNull = false
            Me.columnSNO.MaxLength = 1
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewMEMBER_CONSUMPTION_OUTLETRow() As MEMBER_CONSUMPTION_OUTLETRow
            Return CType(Me.NewRow,MEMBER_CONSUMPTION_OUTLETRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New MEMBER_CONSUMPTION_OUTLETRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(MEMBER_CONSUMPTION_OUTLETRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.MEMBER_CONSUMPTION_OUTLETRowChangedEvent) Is Nothing) Then
                RaiseEvent MEMBER_CONSUMPTION_OUTLETRowChanged(Me, New MEMBER_CONSUMPTION_OUTLETRowChangeEvent(CType(e.Row,MEMBER_CONSUMPTION_OUTLETRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.MEMBER_CONSUMPTION_OUTLETRowChangingEvent) Is Nothing) Then
                RaiseEvent MEMBER_CONSUMPTION_OUTLETRowChanging(Me, New MEMBER_CONSUMPTION_OUTLETRowChangeEvent(CType(e.Row,MEMBER_CONSUMPTION_OUTLETRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.MEMBER_CONSUMPTION_OUTLETRowDeletedEvent) Is Nothing) Then
                RaiseEvent MEMBER_CONSUMPTION_OUTLETRowDeleted(Me, New MEMBER_CONSUMPTION_OUTLETRowChangeEvent(CType(e.Row,MEMBER_CONSUMPTION_OUTLETRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.MEMBER_CONSUMPTION_OUTLETRowDeletingEvent) Is Nothing) Then
                RaiseEvent MEMBER_CONSUMPTION_OUTLETRowDeleting(Me, New MEMBER_CONSUMPTION_OUTLETRowChangeEvent(CType(e.Row,MEMBER_CONSUMPTION_OUTLETRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveMEMBER_CONSUMPTION_OUTLETRow(ByVal row As MEMBER_CONSUMPTION_OUTLETRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DataSet2 = New DataSet2()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "MEMBER_CONSUMPTION_OUTLETDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class VW_CommitteeTransactionDataTable
        Inherits Global.System.Data.TypedTableBase(Of VW_CommitteeTransactionRow)
        
        Private columnMCODE As Global.System.Data.DataColumn
        
        Private columnMNAME As Global.System.Data.DataColumn
        
        Private columnDesignationCode As Global.System.Data.DataColumn
        
        Private columnDesignation As Global.System.Data.DataColumn
        
        Private columnCEMAIL As Global.System.Data.DataColumn
        
        Private columnCCELL As Global.System.Data.DataColumn
        
        Private columnMEMIMAGE As Global.System.Data.DataColumn
        
        Private columnCurentStatus As Global.System.Data.DataColumn
        
        Private columnFromdate As Global.System.Data.DataColumn
        
        Private columnTodate As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "VW_CommitteeTransaction"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MCODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMCODE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MNAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMNAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DesignationCodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDesignationCode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DesignationColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDesignation
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CEMAILColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCEMAIL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CCELLColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCCELL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MEMIMAGEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMEMIMAGE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CurentStatusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCurentStatus
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FromdateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFromdate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TodateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTodate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As VW_CommitteeTransactionRow
            Get
                Return CType(Me.Rows(index),VW_CommitteeTransactionRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event VW_CommitteeTransactionRowChanging As VW_CommitteeTransactionRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event VW_CommitteeTransactionRowChanged As VW_CommitteeTransactionRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event VW_CommitteeTransactionRowDeleting As VW_CommitteeTransactionRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event VW_CommitteeTransactionRowDeleted As VW_CommitteeTransactionRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddVW_CommitteeTransactionRow(ByVal row As VW_CommitteeTransactionRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddVW_CommitteeTransactionRow(ByVal MCODE As String, ByVal MNAME As String, ByVal DesignationCode As String, ByVal Designation As String, ByVal CEMAIL As String, ByVal CCELL As String, ByVal MEMIMAGE() As Byte, ByVal CurentStatus As String, ByVal Fromdate As Date, ByVal Todate As Date) As VW_CommitteeTransactionRow
            Dim rowVW_CommitteeTransactionRow As VW_CommitteeTransactionRow = CType(Me.NewRow,VW_CommitteeTransactionRow)
            Dim columnValuesArray() As Object = New Object() {MCODE, MNAME, DesignationCode, Designation, CEMAIL, CCELL, MEMIMAGE, CurentStatus, Fromdate, Todate}
            rowVW_CommitteeTransactionRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowVW_CommitteeTransactionRow)
            Return rowVW_CommitteeTransactionRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As VW_CommitteeTransactionDataTable = CType(MyBase.Clone,VW_CommitteeTransactionDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New VW_CommitteeTransactionDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnMCODE = MyBase.Columns("MCODE")
            Me.columnMNAME = MyBase.Columns("MNAME")
            Me.columnDesignationCode = MyBase.Columns("DesignationCode")
            Me.columnDesignation = MyBase.Columns("Designation")
            Me.columnCEMAIL = MyBase.Columns("CEMAIL")
            Me.columnCCELL = MyBase.Columns("CCELL")
            Me.columnMEMIMAGE = MyBase.Columns("MEMIMAGE")
            Me.columnCurentStatus = MyBase.Columns("CurentStatus")
            Me.columnFromdate = MyBase.Columns("Fromdate")
            Me.columnTodate = MyBase.Columns("Todate")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnMCODE = New Global.System.Data.DataColumn("MCODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMCODE)
            Me.columnMNAME = New Global.System.Data.DataColumn("MNAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMNAME)
            Me.columnDesignationCode = New Global.System.Data.DataColumn("DesignationCode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDesignationCode)
            Me.columnDesignation = New Global.System.Data.DataColumn("Designation", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDesignation)
            Me.columnCEMAIL = New Global.System.Data.DataColumn("CEMAIL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCEMAIL)
            Me.columnCCELL = New Global.System.Data.DataColumn("CCELL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCCELL)
            Me.columnMEMIMAGE = New Global.System.Data.DataColumn("MEMIMAGE", GetType(Byte()), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMEMIMAGE)
            Me.columnCurentStatus = New Global.System.Data.DataColumn("CurentStatus", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCurentStatus)
            Me.columnFromdate = New Global.System.Data.DataColumn("Fromdate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFromdate)
            Me.columnTodate = New Global.System.Data.DataColumn("Todate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTodate)
            Me.columnMCODE.MaxLength = 200
            Me.columnMNAME.MaxLength = 200
            Me.columnDesignationCode.MaxLength = 50
            Me.columnDesignation.MaxLength = 200
            Me.columnCEMAIL.MaxLength = 100
            Me.columnCCELL.MaxLength = 100
            Me.columnCurentStatus.MaxLength = 15
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewVW_CommitteeTransactionRow() As VW_CommitteeTransactionRow
            Return CType(Me.NewRow,VW_CommitteeTransactionRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New VW_CommitteeTransactionRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(VW_CommitteeTransactionRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.VW_CommitteeTransactionRowChangedEvent) Is Nothing) Then
                RaiseEvent VW_CommitteeTransactionRowChanged(Me, New VW_CommitteeTransactionRowChangeEvent(CType(e.Row,VW_CommitteeTransactionRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.VW_CommitteeTransactionRowChangingEvent) Is Nothing) Then
                RaiseEvent VW_CommitteeTransactionRowChanging(Me, New VW_CommitteeTransactionRowChangeEvent(CType(e.Row,VW_CommitteeTransactionRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.VW_CommitteeTransactionRowDeletedEvent) Is Nothing) Then
                RaiseEvent VW_CommitteeTransactionRowDeleted(Me, New VW_CommitteeTransactionRowChangeEvent(CType(e.Row,VW_CommitteeTransactionRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.VW_CommitteeTransactionRowDeletingEvent) Is Nothing) Then
                RaiseEvent VW_CommitteeTransactionRowDeleting(Me, New VW_CommitteeTransactionRowChangeEvent(CType(e.Row,VW_CommitteeTransactionRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveVW_CommitteeTransactionRow(ByVal row As VW_CommitteeTransactionRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DataSet2 = New DataSet2()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "VW_CommitteeTransactionDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class accountsglaccountmasterDataTable
        Inherits Global.System.Data.TypedTableBase(Of accountsglaccountmasterRow)
        
        Private columnaccode As Global.System.Data.DataColumn
        
        Private columnacdesc As Global.System.Data.DataColumn
        
        Private columnalias As Global.System.Data.DataColumn
        
        Private columnsubledgerflag As Global.System.Data.DataColumn
        
        Private columngroupname As Global.System.Data.DataColumn
        
        Private columnsubgroup As Global.System.Data.DataColumn
        
        Private columnactype As Global.System.Data.DataColumn
        
        Private columnbudgetflag As Global.System.Data.DataColumn
        
        Private columnbank As Global.System.Data.DataColumn
        
        Private columnbankaddress As Global.System.Data.DataColumn
        
        Private columnopdebits As Global.System.Data.DataColumn
        
        Private columnopcredits As Global.System.Data.DataColumn
        
        Private columncldebits As Global.System.Data.DataColumn
        
        Private columnclcredits As Global.System.Data.DataColumn
        
        Private columnaprdebits As Global.System.Data.DataColumn
        
        Private columnaprcredits As Global.System.Data.DataColumn
        
        Private columnmaydebits As Global.System.Data.DataColumn
        
        Private columnmaycredits As Global.System.Data.DataColumn
        
        Private columnjundebits As Global.System.Data.DataColumn
        
        Private columnjuncredits As Global.System.Data.DataColumn
        
        Private columnjuldebits As Global.System.Data.DataColumn
        
        Private columnjulcredits As Global.System.Data.DataColumn
        
        Private columnaugdebits As Global.System.Data.DataColumn
        
        Private columnaugcredits As Global.System.Data.DataColumn
        
        Private columnsepdebits As Global.System.Data.DataColumn
        
        Private columnsepcredits As Global.System.Data.DataColumn
        
        Private columnoctdebits As Global.System.Data.DataColumn
        
        Private columnoctcredits As Global.System.Data.DataColumn
        
        Private columnnovdebits As Global.System.Data.DataColumn
        
        Private columnnovcredits As Global.System.Data.DataColumn
        
        Private columndecdebits As Global.System.Data.DataColumn
        
        Private columndeccredits As Global.System.Data.DataColumn
        
        Private columnjandebits As Global.System.Data.DataColumn
        
        Private columnjancredits As Global.System.Data.DataColumn
        
        Private columnfebdebits As Global.System.Data.DataColumn
        
        Private columnfebcredits As Global.System.Data.DataColumn
        
        Private columnmardebits As Global.System.Data.DataColumn
        
        Private columnmarcredits As Global.System.Data.DataColumn
        
        Private columnactuallastyear As Global.System.Data.DataColumn
        
        Private columnprojectedlastyear As Global.System.Data.DataColumn
        
        Private columnactualcurrentyear As Global.System.Data.DataColumn
        
        Private columnprojectedcurrentyear As Global.System.Data.DataColumn
        
        Private columnactualnextyear As Global.System.Data.DataColumn
        
        Private columnprojectednextyear As Global.System.Data.DataColumn
        
        Private columnadduserid As Global.System.Data.DataColumn
        
        Private columnadddatetime As Global.System.Data.DataColumn
        
        Private columnupdateuserid As Global.System.Data.DataColumn
        
        Private columnupdatedatetime As Global.System.Data.DataColumn
        
        Private columnfreezeflag As Global.System.Data.DataColumn
        
        Private columnfreezeuserid As Global.System.Data.DataColumn
        
        Private columnfreezedatetime As Global.System.Data.DataColumn
        
        Private columnBSPL As Global.System.Data.DataColumn
        
        Private columnFREZEEFLAG As Global.System.Data.DataColumn
        
        Private columnCATEGORY As Global.System.Data.DataColumn
        
        Private columnDEPPER As Global.System.Data.DataColumn
        
        Private columnSUBSUBGROUP As Global.System.Data.DataColumn
        
        Private columnSLTYPE As Global.System.Data.DataColumn
        
        Private columnCOST As Global.System.Data.DataColumn
        
        Private columnCOSTMASTER As Global.System.Data.DataColumn
        
        Private columnADD_DATE As Global.System.Data.DataColumn
        
        Private columnADD_USER As Global.System.Data.DataColumn
        
        Private columnUPD_USER As Global.System.Data.DataColumn
        
        Private columnUPD_DATE As Global.System.Data.DataColumn
        
        Private columnVOIDUSER As Global.System.Data.DataColumn
        
        Private columnVOIDDATE As Global.System.Data.DataColumn
        
        Private columnAUTHORISED As Global.System.Data.DataColumn
        
        Private columnAUTHORISE_LEVEL1 As Global.System.Data.DataColumn
        
        Private columnAUTHORISE_USER1 As Global.System.Data.DataColumn
        
        Private columnAUTHORISE_DATE1 As Global.System.Data.DataColumn
        
        Private columnAUTHORISE_LEVEL2 As Global.System.Data.DataColumn
        
        Private columnAUTHORISE_USER2 As Global.System.Data.DataColumn
        
        Private columnAUTHORISE_DATE2 As Global.System.Data.DataColumn
        
        Private columnAUTHORISE_LEVEL3 As Global.System.Data.DataColumn
        
        Private columnAUTHORISE_USER3 As Global.System.Data.DataColumn
        
        Private columnAUTHORISE_DATE3 As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "accountsglaccountmaster"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property accodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnaccode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property acdescColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnacdesc
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property aliasColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnalias
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property subledgerflagColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnsubledgerflag
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property groupnameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columngroupname
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property subgroupColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnsubgroup
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property actypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnactype
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property budgetflagColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnbudgetflag
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property bankColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnbank
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property bankaddressColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnbankaddress
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property opdebitsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnopdebits
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property opcreditsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnopcredits
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property cldebitsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncldebits
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property clcreditsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnclcredits
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property aprdebitsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnaprdebits
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property aprcreditsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnaprcredits
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property maydebitsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnmaydebits
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property maycreditsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnmaycredits
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property jundebitsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnjundebits
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property juncreditsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnjuncredits
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property juldebitsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnjuldebits
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property julcreditsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnjulcredits
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property augdebitsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnaugdebits
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property augcreditsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnaugcredits
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property sepdebitsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnsepdebits
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property sepcreditsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnsepcredits
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property octdebitsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnoctdebits
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property octcreditsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnoctcredits
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property novdebitsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnnovdebits
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property novcreditsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnnovcredits
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property decdebitsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndecdebits
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property deccreditsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndeccredits
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property jandebitsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnjandebits
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property jancreditsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnjancredits
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property febdebitsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnfebdebits
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property febcreditsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnfebcredits
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property mardebitsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnmardebits
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property marcreditsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnmarcredits
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property actuallastyearColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnactuallastyear
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property projectedlastyearColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnprojectedlastyear
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property actualcurrentyearColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnactualcurrentyear
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property projectedcurrentyearColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnprojectedcurrentyear
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property actualnextyearColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnactualnextyear
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property projectednextyearColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnprojectednextyear
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property adduseridColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnadduserid
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property adddatetimeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnadddatetime
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property updateuseridColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnupdateuserid
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property updatedatetimeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnupdatedatetime
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property freezeflagColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnfreezeflag
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property freezeuseridColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnfreezeuserid
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property freezedatetimeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnfreezedatetime
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BSPLColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBSPL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FREZEEFLAGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFREZEEFLAG
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CATEGORYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCATEGORY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DEPPERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDEPPER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SUBSUBGROUPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSUBSUBGROUP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SLTYPEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSLTYPE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property COSTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOST
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property COSTMASTERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOSTMASTER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ADD_DATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnADD_DATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ADD_USERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnADD_USER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property UPD_USERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUPD_USER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property UPD_DATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUPD_DATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property VOIDUSERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVOIDUSER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property VOIDDATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVOIDDATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AUTHORISEDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAUTHORISED
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AUTHORISE_LEVEL1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnAUTHORISE_LEVEL1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AUTHORISE_USER1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnAUTHORISE_USER1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AUTHORISE_DATE1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnAUTHORISE_DATE1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AUTHORISE_LEVEL2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnAUTHORISE_LEVEL2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AUTHORISE_USER2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnAUTHORISE_USER2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AUTHORISE_DATE2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnAUTHORISE_DATE2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AUTHORISE_LEVEL3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnAUTHORISE_LEVEL3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AUTHORISE_USER3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnAUTHORISE_USER3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AUTHORISE_DATE3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnAUTHORISE_DATE3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As accountsglaccountmasterRow
            Get
                Return CType(Me.Rows(index),accountsglaccountmasterRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event accountsglaccountmasterRowChanging As accountsglaccountmasterRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event accountsglaccountmasterRowChanged As accountsglaccountmasterRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event accountsglaccountmasterRowDeleting As accountsglaccountmasterRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event accountsglaccountmasterRowDeleted As accountsglaccountmasterRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddaccountsglaccountmasterRow(ByVal row As accountsglaccountmasterRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddaccountsglaccountmasterRow( _
                    ByVal accode As String,  _
                    ByVal acdesc As String,  _
                    ByVal _alias As String,  _
                    ByVal subledgerflag As String,  _
                    ByVal groupname As String,  _
                    ByVal subgroup As String,  _
                    ByVal actype As String,  _
                    ByVal budgetflag As String,  _
                    ByVal bank As String,  _
                    ByVal bankaddress As String,  _
                    ByVal opdebits As Decimal,  _
                    ByVal opcredits As Decimal,  _
                    ByVal cldebits As Decimal,  _
                    ByVal clcredits As Decimal,  _
                    ByVal aprdebits As Decimal,  _
                    ByVal aprcredits As Decimal,  _
                    ByVal maydebits As Decimal,  _
                    ByVal maycredits As Decimal,  _
                    ByVal jundebits As Decimal,  _
                    ByVal juncredits As Decimal,  _
                    ByVal juldebits As Decimal,  _
                    ByVal julcredits As Decimal,  _
                    ByVal augdebits As Decimal,  _
                    ByVal augcredits As Decimal,  _
                    ByVal sepdebits As Decimal,  _
                    ByVal sepcredits As Decimal,  _
                    ByVal octdebits As Decimal,  _
                    ByVal octcredits As Decimal,  _
                    ByVal novdebits As Decimal,  _
                    ByVal novcredits As Decimal,  _
                    ByVal decdebits As Decimal,  _
                    ByVal deccredits As Decimal,  _
                    ByVal jandebits As Decimal,  _
                    ByVal jancredits As Decimal,  _
                    ByVal febdebits As Decimal,  _
                    ByVal febcredits As Decimal,  _
                    ByVal mardebits As Decimal,  _
                    ByVal marcredits As Decimal,  _
                    ByVal actuallastyear As Decimal,  _
                    ByVal projectedlastyear As Decimal,  _
                    ByVal actualcurrentyear As Decimal,  _
                    ByVal projectedcurrentyear As Decimal,  _
                    ByVal actualnextyear As Decimal,  _
                    ByVal projectednextyear As Decimal,  _
                    ByVal adduserid As String,  _
                    ByVal adddatetime As Date,  _
                    ByVal updateuserid As String,  _
                    ByVal updatedatetime As Date,  _
                    ByVal freezeflag As String,  _
                    ByVal freezeuserid As String,  _
                    ByVal freezedatetime As Date,  _
                    ByVal BSPL As String,  _
                    ByVal FREZEEFLAG As String,  _
                    ByVal CATEGORY As String,  _
                    ByVal DEPPER As Decimal,  _
                    ByVal SUBSUBGROUP As String,  _
                    ByVal SLTYPE As String,  _
                    ByVal COST As String,  _
                    ByVal COSTMASTER As String,  _
                    ByVal ADD_DATE As Date,  _
                    ByVal ADD_USER As String,  _
                    ByVal UPD_USER As String,  _
                    ByVal UPD_DATE As Date,  _
                    ByVal VOIDUSER As String,  _
                    ByVal VOIDDATE As Date,  _
                    ByVal AUTHORISED As String,  _
                    ByVal AUTHORISE_LEVEL1 As String,  _
                    ByVal AUTHORISE_USER1 As String,  _
                    ByVal AUTHORISE_DATE1 As Date,  _
                    ByVal AUTHORISE_LEVEL2 As String,  _
                    ByVal AUTHORISE_USER2 As String,  _
                    ByVal AUTHORISE_DATE2 As Date,  _
                    ByVal AUTHORISE_LEVEL3 As String,  _
                    ByVal AUTHORISE_USER3 As String,  _
                    ByVal AUTHORISE_DATE3 As Date) As accountsglaccountmasterRow
            Dim rowaccountsglaccountmasterRow As accountsglaccountmasterRow = CType(Me.NewRow,accountsglaccountmasterRow)
            Dim columnValuesArray() As Object = New Object() {accode, acdesc, _alias, subledgerflag, groupname, subgroup, actype, budgetflag, bank, bankaddress, opdebits, opcredits, cldebits, clcredits, aprdebits, aprcredits, maydebits, maycredits, jundebits, juncredits, juldebits, julcredits, augdebits, augcredits, sepdebits, sepcredits, octdebits, octcredits, novdebits, novcredits, decdebits, deccredits, jandebits, jancredits, febdebits, febcredits, mardebits, marcredits, actuallastyear, projectedlastyear, actualcurrentyear, projectedcurrentyear, actualnextyear, projectednextyear, adduserid, adddatetime, updateuserid, updatedatetime, freezeflag, freezeuserid, freezedatetime, BSPL, FREZEEFLAG, CATEGORY, DEPPER, SUBSUBGROUP, SLTYPE, COST, COSTMASTER, ADD_DATE, ADD_USER, UPD_USER, UPD_DATE, VOIDUSER, VOIDDATE, AUTHORISED, AUTHORISE_LEVEL1, AUTHORISE_USER1, AUTHORISE_DATE1, AUTHORISE_LEVEL2, AUTHORISE_USER2, AUTHORISE_DATE2, AUTHORISE_LEVEL3, AUTHORISE_USER3, AUTHORISE_DATE3}
            rowaccountsglaccountmasterRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowaccountsglaccountmasterRow)
            Return rowaccountsglaccountmasterRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As accountsglaccountmasterDataTable = CType(MyBase.Clone,accountsglaccountmasterDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New accountsglaccountmasterDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnaccode = MyBase.Columns("accode")
            Me.columnacdesc = MyBase.Columns("acdesc")
            Me.columnalias = MyBase.Columns("alias")
            Me.columnsubledgerflag = MyBase.Columns("subledgerflag")
            Me.columngroupname = MyBase.Columns("groupname")
            Me.columnsubgroup = MyBase.Columns("subgroup")
            Me.columnactype = MyBase.Columns("actype")
            Me.columnbudgetflag = MyBase.Columns("budgetflag")
            Me.columnbank = MyBase.Columns("bank")
            Me.columnbankaddress = MyBase.Columns("bankaddress")
            Me.columnopdebits = MyBase.Columns("opdebits")
            Me.columnopcredits = MyBase.Columns("opcredits")
            Me.columncldebits = MyBase.Columns("cldebits")
            Me.columnclcredits = MyBase.Columns("clcredits")
            Me.columnaprdebits = MyBase.Columns("aprdebits")
            Me.columnaprcredits = MyBase.Columns("aprcredits")
            Me.columnmaydebits = MyBase.Columns("maydebits")
            Me.columnmaycredits = MyBase.Columns("maycredits")
            Me.columnjundebits = MyBase.Columns("jundebits")
            Me.columnjuncredits = MyBase.Columns("juncredits")
            Me.columnjuldebits = MyBase.Columns("juldebits")
            Me.columnjulcredits = MyBase.Columns("julcredits")
            Me.columnaugdebits = MyBase.Columns("augdebits")
            Me.columnaugcredits = MyBase.Columns("augcredits")
            Me.columnsepdebits = MyBase.Columns("sepdebits")
            Me.columnsepcredits = MyBase.Columns("sepcredits")
            Me.columnoctdebits = MyBase.Columns("octdebits")
            Me.columnoctcredits = MyBase.Columns("octcredits")
            Me.columnnovdebits = MyBase.Columns("novdebits")
            Me.columnnovcredits = MyBase.Columns("novcredits")
            Me.columndecdebits = MyBase.Columns("decdebits")
            Me.columndeccredits = MyBase.Columns("deccredits")
            Me.columnjandebits = MyBase.Columns("jandebits")
            Me.columnjancredits = MyBase.Columns("jancredits")
            Me.columnfebdebits = MyBase.Columns("febdebits")
            Me.columnfebcredits = MyBase.Columns("febcredits")
            Me.columnmardebits = MyBase.Columns("mardebits")
            Me.columnmarcredits = MyBase.Columns("marcredits")
            Me.columnactuallastyear = MyBase.Columns("actuallastyear")
            Me.columnprojectedlastyear = MyBase.Columns("projectedlastyear")
            Me.columnactualcurrentyear = MyBase.Columns("actualcurrentyear")
            Me.columnprojectedcurrentyear = MyBase.Columns("projectedcurrentyear")
            Me.columnactualnextyear = MyBase.Columns("actualnextyear")
            Me.columnprojectednextyear = MyBase.Columns("projectednextyear")
            Me.columnadduserid = MyBase.Columns("adduserid")
            Me.columnadddatetime = MyBase.Columns("adddatetime")
            Me.columnupdateuserid = MyBase.Columns("updateuserid")
            Me.columnupdatedatetime = MyBase.Columns("updatedatetime")
            Me.columnfreezeflag = MyBase.Columns("freezeflag")
            Me.columnfreezeuserid = MyBase.Columns("freezeuserid")
            Me.columnfreezedatetime = MyBase.Columns("freezedatetime")
            Me.columnBSPL = MyBase.Columns("BSPL")
            Me.columnFREZEEFLAG = MyBase.Columns("FREZEEFLAG")
            Me.columnCATEGORY = MyBase.Columns("CATEGORY")
            Me.columnDEPPER = MyBase.Columns("DEPPER")
            Me.columnSUBSUBGROUP = MyBase.Columns("SUBSUBGROUP")
            Me.columnSLTYPE = MyBase.Columns("SLTYPE")
            Me.columnCOST = MyBase.Columns("COST")
            Me.columnCOSTMASTER = MyBase.Columns("COSTMASTER")
            Me.columnADD_DATE = MyBase.Columns("ADD_DATE")
            Me.columnADD_USER = MyBase.Columns("ADD_USER")
            Me.columnUPD_USER = MyBase.Columns("UPD_USER")
            Me.columnUPD_DATE = MyBase.Columns("UPD_DATE")
            Me.columnVOIDUSER = MyBase.Columns("VOIDUSER")
            Me.columnVOIDDATE = MyBase.Columns("VOIDDATE")
            Me.columnAUTHORISED = MyBase.Columns("AUTHORISED")
            Me.columnAUTHORISE_LEVEL1 = MyBase.Columns("AUTHORISE_LEVEL1")
            Me.columnAUTHORISE_USER1 = MyBase.Columns("AUTHORISE_USER1")
            Me.columnAUTHORISE_DATE1 = MyBase.Columns("AUTHORISE_DATE1")
            Me.columnAUTHORISE_LEVEL2 = MyBase.Columns("AUTHORISE_LEVEL2")
            Me.columnAUTHORISE_USER2 = MyBase.Columns("AUTHORISE_USER2")
            Me.columnAUTHORISE_DATE2 = MyBase.Columns("AUTHORISE_DATE2")
            Me.columnAUTHORISE_LEVEL3 = MyBase.Columns("AUTHORISE_LEVEL3")
            Me.columnAUTHORISE_USER3 = MyBase.Columns("AUTHORISE_USER3")
            Me.columnAUTHORISE_DATE3 = MyBase.Columns("AUTHORISE_DATE3")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnaccode = New Global.System.Data.DataColumn("accode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnaccode)
            Me.columnacdesc = New Global.System.Data.DataColumn("acdesc", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnacdesc)
            Me.columnalias = New Global.System.Data.DataColumn("alias", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            Me.columnalias.ExtendedProperties.Add("Generator_ColumnPropNameInTable", "aliasColumn")
            Me.columnalias.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "columnalias")
            Me.columnalias.ExtendedProperties.Add("Generator_UserColumnName", "alias")
            MyBase.Columns.Add(Me.columnalias)
            Me.columnsubledgerflag = New Global.System.Data.DataColumn("subledgerflag", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsubledgerflag)
            Me.columngroupname = New Global.System.Data.DataColumn("groupname", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columngroupname)
            Me.columnsubgroup = New Global.System.Data.DataColumn("subgroup", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsubgroup)
            Me.columnactype = New Global.System.Data.DataColumn("actype", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnactype)
            Me.columnbudgetflag = New Global.System.Data.DataColumn("budgetflag", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnbudgetflag)
            Me.columnbank = New Global.System.Data.DataColumn("bank", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnbank)
            Me.columnbankaddress = New Global.System.Data.DataColumn("bankaddress", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnbankaddress)
            Me.columnopdebits = New Global.System.Data.DataColumn("opdebits", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnopdebits)
            Me.columnopcredits = New Global.System.Data.DataColumn("opcredits", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnopcredits)
            Me.columncldebits = New Global.System.Data.DataColumn("cldebits", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncldebits)
            Me.columnclcredits = New Global.System.Data.DataColumn("clcredits", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnclcredits)
            Me.columnaprdebits = New Global.System.Data.DataColumn("aprdebits", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnaprdebits)
            Me.columnaprcredits = New Global.System.Data.DataColumn("aprcredits", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnaprcredits)
            Me.columnmaydebits = New Global.System.Data.DataColumn("maydebits", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmaydebits)
            Me.columnmaycredits = New Global.System.Data.DataColumn("maycredits", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmaycredits)
            Me.columnjundebits = New Global.System.Data.DataColumn("jundebits", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnjundebits)
            Me.columnjuncredits = New Global.System.Data.DataColumn("juncredits", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnjuncredits)
            Me.columnjuldebits = New Global.System.Data.DataColumn("juldebits", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnjuldebits)
            Me.columnjulcredits = New Global.System.Data.DataColumn("julcredits", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnjulcredits)
            Me.columnaugdebits = New Global.System.Data.DataColumn("augdebits", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnaugdebits)
            Me.columnaugcredits = New Global.System.Data.DataColumn("augcredits", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnaugcredits)
            Me.columnsepdebits = New Global.System.Data.DataColumn("sepdebits", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsepdebits)
            Me.columnsepcredits = New Global.System.Data.DataColumn("sepcredits", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsepcredits)
            Me.columnoctdebits = New Global.System.Data.DataColumn("octdebits", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnoctdebits)
            Me.columnoctcredits = New Global.System.Data.DataColumn("octcredits", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnoctcredits)
            Me.columnnovdebits = New Global.System.Data.DataColumn("novdebits", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnovdebits)
            Me.columnnovcredits = New Global.System.Data.DataColumn("novcredits", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnovcredits)
            Me.columndecdebits = New Global.System.Data.DataColumn("decdebits", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndecdebits)
            Me.columndeccredits = New Global.System.Data.DataColumn("deccredits", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndeccredits)
            Me.columnjandebits = New Global.System.Data.DataColumn("jandebits", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnjandebits)
            Me.columnjancredits = New Global.System.Data.DataColumn("jancredits", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnjancredits)
            Me.columnfebdebits = New Global.System.Data.DataColumn("febdebits", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfebdebits)
            Me.columnfebcredits = New Global.System.Data.DataColumn("febcredits", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfebcredits)
            Me.columnmardebits = New Global.System.Data.DataColumn("mardebits", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmardebits)
            Me.columnmarcredits = New Global.System.Data.DataColumn("marcredits", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmarcredits)
            Me.columnactuallastyear = New Global.System.Data.DataColumn("actuallastyear", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnactuallastyear)
            Me.columnprojectedlastyear = New Global.System.Data.DataColumn("projectedlastyear", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnprojectedlastyear)
            Me.columnactualcurrentyear = New Global.System.Data.DataColumn("actualcurrentyear", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnactualcurrentyear)
            Me.columnprojectedcurrentyear = New Global.System.Data.DataColumn("projectedcurrentyear", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnprojectedcurrentyear)
            Me.columnactualnextyear = New Global.System.Data.DataColumn("actualnextyear", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnactualnextyear)
            Me.columnprojectednextyear = New Global.System.Data.DataColumn("projectednextyear", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnprojectednextyear)
            Me.columnadduserid = New Global.System.Data.DataColumn("adduserid", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnadduserid)
            Me.columnadddatetime = New Global.System.Data.DataColumn("adddatetime", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnadddatetime)
            Me.columnupdateuserid = New Global.System.Data.DataColumn("updateuserid", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnupdateuserid)
            Me.columnupdatedatetime = New Global.System.Data.DataColumn("updatedatetime", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnupdatedatetime)
            Me.columnfreezeflag = New Global.System.Data.DataColumn("freezeflag", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfreezeflag)
            Me.columnfreezeuserid = New Global.System.Data.DataColumn("freezeuserid", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfreezeuserid)
            Me.columnfreezedatetime = New Global.System.Data.DataColumn("freezedatetime", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfreezedatetime)
            Me.columnBSPL = New Global.System.Data.DataColumn("BSPL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBSPL)
            Me.columnFREZEEFLAG = New Global.System.Data.DataColumn("FREZEEFLAG", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFREZEEFLAG)
            Me.columnCATEGORY = New Global.System.Data.DataColumn("CATEGORY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCATEGORY)
            Me.columnDEPPER = New Global.System.Data.DataColumn("DEPPER", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDEPPER)
            Me.columnSUBSUBGROUP = New Global.System.Data.DataColumn("SUBSUBGROUP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSUBSUBGROUP)
            Me.columnSLTYPE = New Global.System.Data.DataColumn("SLTYPE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSLTYPE)
            Me.columnCOST = New Global.System.Data.DataColumn("COST", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOST)
            Me.columnCOSTMASTER = New Global.System.Data.DataColumn("COSTMASTER", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOSTMASTER)
            Me.columnADD_DATE = New Global.System.Data.DataColumn("ADD_DATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnADD_DATE)
            Me.columnADD_USER = New Global.System.Data.DataColumn("ADD_USER", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnADD_USER)
            Me.columnUPD_USER = New Global.System.Data.DataColumn("UPD_USER", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUPD_USER)
            Me.columnUPD_DATE = New Global.System.Data.DataColumn("UPD_DATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUPD_DATE)
            Me.columnVOIDUSER = New Global.System.Data.DataColumn("VOIDUSER", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVOIDUSER)
            Me.columnVOIDDATE = New Global.System.Data.DataColumn("VOIDDATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVOIDDATE)
            Me.columnAUTHORISED = New Global.System.Data.DataColumn("AUTHORISED", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAUTHORISED)
            Me.columnAUTHORISE_LEVEL1 = New Global.System.Data.DataColumn("AUTHORISE_LEVEL1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAUTHORISE_LEVEL1)
            Me.columnAUTHORISE_USER1 = New Global.System.Data.DataColumn("AUTHORISE_USER1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAUTHORISE_USER1)
            Me.columnAUTHORISE_DATE1 = New Global.System.Data.DataColumn("AUTHORISE_DATE1", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAUTHORISE_DATE1)
            Me.columnAUTHORISE_LEVEL2 = New Global.System.Data.DataColumn("AUTHORISE_LEVEL2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAUTHORISE_LEVEL2)
            Me.columnAUTHORISE_USER2 = New Global.System.Data.DataColumn("AUTHORISE_USER2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAUTHORISE_USER2)
            Me.columnAUTHORISE_DATE2 = New Global.System.Data.DataColumn("AUTHORISE_DATE2", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAUTHORISE_DATE2)
            Me.columnAUTHORISE_LEVEL3 = New Global.System.Data.DataColumn("AUTHORISE_LEVEL3", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAUTHORISE_LEVEL3)
            Me.columnAUTHORISE_USER3 = New Global.System.Data.DataColumn("AUTHORISE_USER3", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAUTHORISE_USER3)
            Me.columnAUTHORISE_DATE3 = New Global.System.Data.DataColumn("AUTHORISE_DATE3", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAUTHORISE_DATE3)
            Me.columnaccode.AllowDBNull = false
            Me.columnaccode.MaxLength = 10
            Me.columnacdesc.MaxLength = 100
            Me.columnalias.MaxLength = 30
            Me.columnsubledgerflag.MaxLength = 1
            Me.columngroupname.MaxLength = 100
            Me.columnsubgroup.MaxLength = 30
            Me.columnactype.MaxLength = 30
            Me.columnbudgetflag.MaxLength = 1
            Me.columnbank.MaxLength = 100
            Me.columnbankaddress.MaxLength = 30
            Me.columnadduserid.MaxLength = 30
            Me.columnupdateuserid.MaxLength = 30
            Me.columnfreezeflag.MaxLength = 1
            Me.columnfreezeuserid.MaxLength = 30
            Me.columnBSPL.MaxLength = 1
            Me.columnFREZEEFLAG.MaxLength = 1
            Me.columnCATEGORY.MaxLength = 10
            Me.columnSUBSUBGROUP.MaxLength = 50
            Me.columnSLTYPE.MaxLength = 50
            Me.columnCOST.MaxLength = 10
            Me.columnCOSTMASTER.MaxLength = 10
            Me.columnADD_USER.MaxLength = 50
            Me.columnUPD_USER.MaxLength = 9
            Me.columnVOIDUSER.MaxLength = 9
            Me.columnAUTHORISED.MaxLength = 2
            Me.columnAUTHORISE_LEVEL1.MaxLength = 2
            Me.columnAUTHORISE_USER1.MaxLength = 20
            Me.columnAUTHORISE_LEVEL2.MaxLength = 2
            Me.columnAUTHORISE_USER2.MaxLength = 20
            Me.columnAUTHORISE_LEVEL3.MaxLength = 2
            Me.columnAUTHORISE_USER3.MaxLength = 20
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewaccountsglaccountmasterRow() As accountsglaccountmasterRow
            Return CType(Me.NewRow,accountsglaccountmasterRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New accountsglaccountmasterRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(accountsglaccountmasterRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.accountsglaccountmasterRowChangedEvent) Is Nothing) Then
                RaiseEvent accountsglaccountmasterRowChanged(Me, New accountsglaccountmasterRowChangeEvent(CType(e.Row,accountsglaccountmasterRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.accountsglaccountmasterRowChangingEvent) Is Nothing) Then
                RaiseEvent accountsglaccountmasterRowChanging(Me, New accountsglaccountmasterRowChangeEvent(CType(e.Row,accountsglaccountmasterRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.accountsglaccountmasterRowDeletedEvent) Is Nothing) Then
                RaiseEvent accountsglaccountmasterRowDeleted(Me, New accountsglaccountmasterRowChangeEvent(CType(e.Row,accountsglaccountmasterRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.accountsglaccountmasterRowDeletingEvent) Is Nothing) Then
                RaiseEvent accountsglaccountmasterRowDeleting(Me, New accountsglaccountmasterRowChangeEvent(CType(e.Row,accountsglaccountmasterRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveaccountsglaccountmasterRow(ByVal row As accountsglaccountmasterRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DataSet2 = New DataSet2()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "accountsglaccountmasterDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class GSTSUBSBILLDETAILSDataTable
        Inherits Global.System.Data.TypedTableBase(Of GSTSUBSBILLDETAILSRow)
        
        Private columnbillno As Global.System.Data.DataColumn
        
        Private columnbilldate As Global.System.Data.DataColumn
        
        Private columnmembertype As Global.System.Data.DataColumn
        
        Private columnMNAME As Global.System.Data.DataColumn
        
        Private columnSUBSCODE As Global.System.Data.DataColumn
        
        Private columnsubsdesc As Global.System.Data.DataColumn
        
        Private columnbillingbasis As Global.System.Data.DataColumn
        
        Private columntype As Global.System.Data.DataColumn
        
        Private columnSUBSAMOUNT As Global.System.Data.DataColumn
        
        Private columnSGST As Global.System.Data.DataColumn
        
        Private columnCGST As Global.System.Data.DataColumn
        
        Private columnCESS As Global.System.Data.DataColumn
        
        Private columnTOTAL As Global.System.Data.DataColumn
        
        Private columnTAXCODE As Global.System.Data.DataColumn
        
        Private columnTAXDESC As Global.System.Data.DataColumn
        
        Private columnMCODE As Global.System.Data.DataColumn
        
        Private columnpostingsno As Global.System.Data.DataColumn
        
        Private columnCONTADD1 As Global.System.Data.DataColumn
        
        Private columnCONTADD2 As Global.System.Data.DataColumn
        
        Private columnCONTADD3 As Global.System.Data.DataColumn
        
        Private columnCONTCITY As Global.System.Data.DataColumn
        
        Private columnCONTSTATE As Global.System.Data.DataColumn
        
        Private columnCGSTTAXPER As Global.System.Data.DataColumn
        
        Private columnSGSTTAXPER As Global.System.Data.DataColumn
        
        Private columnCESSTAXPER As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "GSTSUBSBILLDETAILS"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property billnoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnbillno
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property billdateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnbilldate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property membertypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnmembertype
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MNAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMNAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SUBSCODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSUBSCODE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property subsdescColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnsubsdesc
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property billingbasisColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnbillingbasis
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property typeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntype
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SUBSAMOUNTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSUBSAMOUNT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SGSTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSGST
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CGSTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCGST
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CESSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCESS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TOTALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTOTAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TAXCODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTAXCODE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TAXDESCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTAXDESC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MCODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMCODE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property postingsnoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpostingsno
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CONTADD1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCONTADD1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CONTADD2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCONTADD2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CONTADD3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCONTADD3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CONTCITYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCONTCITY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CONTSTATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCONTSTATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CGSTTAXPERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCGSTTAXPER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SGSTTAXPERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSGSTTAXPER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CESSTAXPERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCESSTAXPER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As GSTSUBSBILLDETAILSRow
            Get
                Return CType(Me.Rows(index),GSTSUBSBILLDETAILSRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event GSTSUBSBILLDETAILSRowChanging As GSTSUBSBILLDETAILSRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event GSTSUBSBILLDETAILSRowChanged As GSTSUBSBILLDETAILSRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event GSTSUBSBILLDETAILSRowDeleting As GSTSUBSBILLDETAILSRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event GSTSUBSBILLDETAILSRowDeleted As GSTSUBSBILLDETAILSRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddGSTSUBSBILLDETAILSRow(ByVal row As GSTSUBSBILLDETAILSRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddGSTSUBSBILLDETAILSRow( _
                    ByVal billno As String,  _
                    ByVal billdate As Date,  _
                    ByVal membertype As String,  _
                    ByVal MNAME As String,  _
                    ByVal SUBSCODE As String,  _
                    ByVal subsdesc As String,  _
                    ByVal billingbasis As String,  _
                    ByVal type As String,  _
                    ByVal SUBSAMOUNT As Decimal,  _
                    ByVal SGST As Decimal,  _
                    ByVal CGST As Decimal,  _
                    ByVal CESS As Decimal,  _
                    ByVal TOTAL As Decimal,  _
                    ByVal TAXCODE As String,  _
                    ByVal TAXDESC As String,  _
                    ByVal MCODE As String,  _
                    ByVal postingsno As Decimal,  _
                    ByVal CONTADD1 As String,  _
                    ByVal CONTADD2 As String,  _
                    ByVal CONTADD3 As String,  _
                    ByVal CONTCITY As String,  _
                    ByVal CONTSTATE As String,  _
                    ByVal CGSTTAXPER As Decimal,  _
                    ByVal SGSTTAXPER As Decimal,  _
                    ByVal CESSTAXPER As Decimal) As GSTSUBSBILLDETAILSRow
            Dim rowGSTSUBSBILLDETAILSRow As GSTSUBSBILLDETAILSRow = CType(Me.NewRow,GSTSUBSBILLDETAILSRow)
            Dim columnValuesArray() As Object = New Object() {billno, billdate, membertype, MNAME, SUBSCODE, subsdesc, billingbasis, type, SUBSAMOUNT, SGST, CGST, CESS, TOTAL, TAXCODE, TAXDESC, MCODE, postingsno, CONTADD1, CONTADD2, CONTADD3, CONTCITY, CONTSTATE, CGSTTAXPER, SGSTTAXPER, CESSTAXPER}
            rowGSTSUBSBILLDETAILSRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowGSTSUBSBILLDETAILSRow)
            Return rowGSTSUBSBILLDETAILSRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As GSTSUBSBILLDETAILSDataTable = CType(MyBase.Clone,GSTSUBSBILLDETAILSDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New GSTSUBSBILLDETAILSDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnbillno = MyBase.Columns("billno")
            Me.columnbilldate = MyBase.Columns("billdate")
            Me.columnmembertype = MyBase.Columns("membertype")
            Me.columnMNAME = MyBase.Columns("MNAME")
            Me.columnSUBSCODE = MyBase.Columns("SUBSCODE")
            Me.columnsubsdesc = MyBase.Columns("subsdesc")
            Me.columnbillingbasis = MyBase.Columns("billingbasis")
            Me.columntype = MyBase.Columns("type")
            Me.columnSUBSAMOUNT = MyBase.Columns("SUBSAMOUNT")
            Me.columnSGST = MyBase.Columns("SGST")
            Me.columnCGST = MyBase.Columns("CGST")
            Me.columnCESS = MyBase.Columns("CESS")
            Me.columnTOTAL = MyBase.Columns("TOTAL")
            Me.columnTAXCODE = MyBase.Columns("TAXCODE")
            Me.columnTAXDESC = MyBase.Columns("TAXDESC")
            Me.columnMCODE = MyBase.Columns("MCODE")
            Me.columnpostingsno = MyBase.Columns("postingsno")
            Me.columnCONTADD1 = MyBase.Columns("CONTADD1")
            Me.columnCONTADD2 = MyBase.Columns("CONTADD2")
            Me.columnCONTADD3 = MyBase.Columns("CONTADD3")
            Me.columnCONTCITY = MyBase.Columns("CONTCITY")
            Me.columnCONTSTATE = MyBase.Columns("CONTSTATE")
            Me.columnCGSTTAXPER = MyBase.Columns("CGSTTAXPER")
            Me.columnSGSTTAXPER = MyBase.Columns("SGSTTAXPER")
            Me.columnCESSTAXPER = MyBase.Columns("CESSTAXPER")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnbillno = New Global.System.Data.DataColumn("billno", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnbillno)
            Me.columnbilldate = New Global.System.Data.DataColumn("billdate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnbilldate)
            Me.columnmembertype = New Global.System.Data.DataColumn("membertype", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmembertype)
            Me.columnMNAME = New Global.System.Data.DataColumn("MNAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMNAME)
            Me.columnSUBSCODE = New Global.System.Data.DataColumn("SUBSCODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSUBSCODE)
            Me.columnsubsdesc = New Global.System.Data.DataColumn("subsdesc", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsubsdesc)
            Me.columnbillingbasis = New Global.System.Data.DataColumn("billingbasis", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnbillingbasis)
            Me.columntype = New Global.System.Data.DataColumn("type", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntype)
            Me.columnSUBSAMOUNT = New Global.System.Data.DataColumn("SUBSAMOUNT", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSUBSAMOUNT)
            Me.columnSGST = New Global.System.Data.DataColumn("SGST", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSGST)
            Me.columnCGST = New Global.System.Data.DataColumn("CGST", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCGST)
            Me.columnCESS = New Global.System.Data.DataColumn("CESS", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCESS)
            Me.columnTOTAL = New Global.System.Data.DataColumn("TOTAL", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTOTAL)
            Me.columnTAXCODE = New Global.System.Data.DataColumn("TAXCODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTAXCODE)
            Me.columnTAXDESC = New Global.System.Data.DataColumn("TAXDESC", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTAXDESC)
            Me.columnMCODE = New Global.System.Data.DataColumn("MCODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMCODE)
            Me.columnpostingsno = New Global.System.Data.DataColumn("postingsno", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpostingsno)
            Me.columnCONTADD1 = New Global.System.Data.DataColumn("CONTADD1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCONTADD1)
            Me.columnCONTADD2 = New Global.System.Data.DataColumn("CONTADD2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCONTADD2)
            Me.columnCONTADD3 = New Global.System.Data.DataColumn("CONTADD3", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCONTADD3)
            Me.columnCONTCITY = New Global.System.Data.DataColumn("CONTCITY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCONTCITY)
            Me.columnCONTSTATE = New Global.System.Data.DataColumn("CONTSTATE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCONTSTATE)
            Me.columnCGSTTAXPER = New Global.System.Data.DataColumn("CGSTTAXPER", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCGSTTAXPER)
            Me.columnSGSTTAXPER = New Global.System.Data.DataColumn("SGSTTAXPER", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSGSTTAXPER)
            Me.columnCESSTAXPER = New Global.System.Data.DataColumn("CESSTAXPER", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCESSTAXPER)
            Me.columnbillno.MaxLength = 150
            Me.columnmembertype.MaxLength = 15
            Me.columnMNAME.MaxLength = 150
            Me.columnSUBSCODE.MaxLength = 30
            Me.columnsubsdesc.MaxLength = 100
            Me.columnbillingbasis.MaxLength = 35
            Me.columntype.MaxLength = 10
            Me.columnTOTAL.AllowDBNull = false
            Me.columnTAXCODE.MaxLength = 20
            Me.columnTAXDESC.AllowDBNull = false
            Me.columnTAXDESC.MaxLength = 1
            Me.columnMCODE.MaxLength = 30
            Me.columnCONTADD1.AllowDBNull = false
            Me.columnCONTADD1.MaxLength = 150
            Me.columnCONTADD2.AllowDBNull = false
            Me.columnCONTADD2.MaxLength = 150
            Me.columnCONTADD3.AllowDBNull = false
            Me.columnCONTADD3.MaxLength = 150
            Me.columnCONTCITY.AllowDBNull = false
            Me.columnCONTCITY.MaxLength = 100
            Me.columnCONTSTATE.AllowDBNull = false
            Me.columnCONTSTATE.MaxLength = 100
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewGSTSUBSBILLDETAILSRow() As GSTSUBSBILLDETAILSRow
            Return CType(Me.NewRow,GSTSUBSBILLDETAILSRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New GSTSUBSBILLDETAILSRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(GSTSUBSBILLDETAILSRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.GSTSUBSBILLDETAILSRowChangedEvent) Is Nothing) Then
                RaiseEvent GSTSUBSBILLDETAILSRowChanged(Me, New GSTSUBSBILLDETAILSRowChangeEvent(CType(e.Row,GSTSUBSBILLDETAILSRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.GSTSUBSBILLDETAILSRowChangingEvent) Is Nothing) Then
                RaiseEvent GSTSUBSBILLDETAILSRowChanging(Me, New GSTSUBSBILLDETAILSRowChangeEvent(CType(e.Row,GSTSUBSBILLDETAILSRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.GSTSUBSBILLDETAILSRowDeletedEvent) Is Nothing) Then
                RaiseEvent GSTSUBSBILLDETAILSRowDeleted(Me, New GSTSUBSBILLDETAILSRowChangeEvent(CType(e.Row,GSTSUBSBILLDETAILSRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.GSTSUBSBILLDETAILSRowDeletingEvent) Is Nothing) Then
                RaiseEvent GSTSUBSBILLDETAILSRowDeleting(Me, New GSTSUBSBILLDETAILSRowChangeEvent(CType(e.Row,GSTSUBSBILLDETAILSRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveGSTSUBSBILLDETAILSRow(ByVal row As GSTSUBSBILLDETAILSRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DataSet2 = New DataSet2()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "GSTSUBSBILLDETAILSDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class clubmasterDataTable
        Inherits Global.System.Data.TypedTableBase(Of clubmasterRow)
        
        Private columnCOMPANYNAME As Global.System.Data.DataColumn
        
        Private columnFROMDATE As Global.System.Data.DataColumn
        
        Private columnTODATE As Global.System.Data.DataColumn
        
        Private columnSHORTNAME As Global.System.Data.DataColumn
        
        Private columnADD1 As Global.System.Data.DataColumn
        
        Private columnADD2 As Global.System.Data.DataColumn
        
        Private columnCITY As Global.System.Data.DataColumn
        
        Private columnSTATE As Global.System.Data.DataColumn
        
        Private columnPINCODE As Global.System.Data.DataColumn
        
        Private columnPHONE1 As Global.System.Data.DataColumn
        
        Private columnPHONE2 As Global.System.Data.DataColumn
        
        Private columnFAX As Global.System.Data.DataColumn
        
        Private columnEMAIL As Global.System.Data.DataColumn
        
        Private columnWEBSITE As Global.System.Data.DataColumn
        
        Private columnDATAfile As Global.System.Data.DataColumn
        
        Private columnINDATE As Global.System.Data.DataColumn
        
        Private columnFRONT As Global.System.Data.DataColumn
        
        Private columnFRONTFILE As Global.System.Data.DataColumn
        
        Private columnMAIN As Global.System.Data.DataColumn
        
        Private columnMAINFILE As Global.System.Data.DataColumn
        
        Private columnLOGO As Global.System.Data.DataColumn
        
        Private columnLOGOFILE As Global.System.Data.DataColumn
        
        Private columnCOMP As Global.System.Data.DataColumn
        
        Private columnCOMP1 As Global.System.Data.DataColumn
        
        Private columncomptdacc As Global.System.Data.DataColumn
        
        Private columncomppanno As Global.System.Data.DataColumn
        
        Private columnbranchcode As Global.System.Data.DataColumn
        
        Private columnactflag As Global.System.Data.DataColumn
        
        Private columnSNO As Global.System.Data.DataColumn
        
        Private columnACTIVE As Global.System.Data.DataColumn
        
        Private columnslno As Global.System.Data.DataColumn
        
        Private columnTINNO As Global.System.Data.DataColumn
        
        Private columnPRINTFLAG As Global.System.Data.DataColumn
        
        Private columnexpirydate As Global.System.Data.DataColumn
        
        Private columnServiceTax As Global.System.Data.DataColumn
        
        Private columnHISTORY As Global.System.Data.DataColumn
        
        Private columnGSTINNO As Global.System.Data.DataColumn
        
        Private columnSTATECODE As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "clubmaster"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property COMPANYNAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOMPANYNAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FROMDATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFROMDATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TODATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTODATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SHORTNAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSHORTNAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ADD1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnADD1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ADD2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnADD2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CITYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCITY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property STATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSTATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PINCODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPINCODE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PHONE1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnPHONE1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PHONE2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnPHONE2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FAXColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFAX
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property EMAILColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEMAIL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property WEBSITEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnWEBSITE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DATAfileColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDATAfile
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property INDATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnINDATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FRONTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFRONT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FRONTFILEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFRONTFILE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MAINColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMAIN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MAINFILEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMAINFILE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property LOGOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLOGO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property LOGOFILEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLOGOFILE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property COMPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOMP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property COMP1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOMP1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property comptdaccColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncomptdacc
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property comppannoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncomppanno
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property branchcodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnbranchcode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property actflagColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnactflag
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SNOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSNO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ACTIVEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnACTIVE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property slnoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnslno
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TINNOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTINNO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PRINTFLAGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRINTFLAG
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property expirydateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnexpirydate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ServiceTaxColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnServiceTax
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property HISTORYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHISTORY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GSTINNOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGSTINNO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property STATECODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSTATECODE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As clubmasterRow
            Get
                Return CType(Me.Rows(index),clubmasterRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event clubmasterRowChanging As clubmasterRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event clubmasterRowChanged As clubmasterRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event clubmasterRowDeleting As clubmasterRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event clubmasterRowDeleted As clubmasterRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddclubmasterRow(ByVal row As clubmasterRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddclubmasterRow( _
                    ByVal COMPANYNAME As String,  _
                    ByVal FROMDATE As Date,  _
                    ByVal TODATE As Date,  _
                    ByVal SHORTNAME As String,  _
                    ByVal ADD1 As String,  _
                    ByVal ADD2 As String,  _
                    ByVal CITY As String,  _
                    ByVal STATE As String,  _
                    ByVal PINCODE As String,  _
                    ByVal PHONE1 As String,  _
                    ByVal PHONE2 As String,  _
                    ByVal FAX As String,  _
                    ByVal EMAIL As String,  _
                    ByVal WEBSITE As String,  _
                    ByVal DATAfile As String,  _
                    ByVal INDATE As Date,  _
                    ByVal FRONT As String,  _
                    ByVal FRONTFILE As String,  _
                    ByVal MAIN As String,  _
                    ByVal MAINFILE As String,  _
                    ByVal LOGO As String,  _
                    ByVal LOGOFILE As String,  _
                    ByVal COMP As String,  _
                    ByVal COMP1 As String,  _
                    ByVal comptdacc As String,  _
                    ByVal comppanno As String,  _
                    ByVal branchcode As String,  _
                    ByVal actflag As String,  _
                    ByVal SNO As String,  _
                    ByVal ACTIVE As String,  _
                    ByVal slno As Decimal,  _
                    ByVal TINNO As String,  _
                    ByVal PRINTFLAG As String,  _
                    ByVal expirydate As Date,  _
                    ByVal ServiceTax As String,  _
                    ByVal HISTORY As String,  _
                    ByVal GSTINNO As String,  _
                    ByVal STATECODE As String) As clubmasterRow
            Dim rowclubmasterRow As clubmasterRow = CType(Me.NewRow,clubmasterRow)
            Dim columnValuesArray() As Object = New Object() {COMPANYNAME, FROMDATE, TODATE, SHORTNAME, ADD1, ADD2, CITY, STATE, PINCODE, PHONE1, PHONE2, FAX, EMAIL, WEBSITE, DATAfile, INDATE, FRONT, FRONTFILE, MAIN, MAINFILE, LOGO, LOGOFILE, COMP, COMP1, comptdacc, comppanno, branchcode, actflag, SNO, ACTIVE, slno, TINNO, PRINTFLAG, expirydate, ServiceTax, HISTORY, GSTINNO, STATECODE}
            rowclubmasterRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowclubmasterRow)
            Return rowclubmasterRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As clubmasterDataTable = CType(MyBase.Clone,clubmasterDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New clubmasterDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnCOMPANYNAME = MyBase.Columns("COMPANYNAME")
            Me.columnFROMDATE = MyBase.Columns("FROMDATE")
            Me.columnTODATE = MyBase.Columns("TODATE")
            Me.columnSHORTNAME = MyBase.Columns("SHORTNAME")
            Me.columnADD1 = MyBase.Columns("ADD1")
            Me.columnADD2 = MyBase.Columns("ADD2")
            Me.columnCITY = MyBase.Columns("CITY")
            Me.columnSTATE = MyBase.Columns("STATE")
            Me.columnPINCODE = MyBase.Columns("PINCODE")
            Me.columnPHONE1 = MyBase.Columns("PHONE1")
            Me.columnPHONE2 = MyBase.Columns("PHONE2")
            Me.columnFAX = MyBase.Columns("FAX")
            Me.columnEMAIL = MyBase.Columns("EMAIL")
            Me.columnWEBSITE = MyBase.Columns("WEBSITE")
            Me.columnDATAfile = MyBase.Columns("DATAfile")
            Me.columnINDATE = MyBase.Columns("INDATE")
            Me.columnFRONT = MyBase.Columns("FRONT")
            Me.columnFRONTFILE = MyBase.Columns("FRONTFILE")
            Me.columnMAIN = MyBase.Columns("MAIN")
            Me.columnMAINFILE = MyBase.Columns("MAINFILE")
            Me.columnLOGO = MyBase.Columns("LOGO")
            Me.columnLOGOFILE = MyBase.Columns("LOGOFILE")
            Me.columnCOMP = MyBase.Columns("COMP")
            Me.columnCOMP1 = MyBase.Columns("COMP1")
            Me.columncomptdacc = MyBase.Columns("comptdacc")
            Me.columncomppanno = MyBase.Columns("comppanno")
            Me.columnbranchcode = MyBase.Columns("branchcode")
            Me.columnactflag = MyBase.Columns("actflag")
            Me.columnSNO = MyBase.Columns("SNO")
            Me.columnACTIVE = MyBase.Columns("ACTIVE")
            Me.columnslno = MyBase.Columns("slno")
            Me.columnTINNO = MyBase.Columns("TINNO")
            Me.columnPRINTFLAG = MyBase.Columns("PRINTFLAG")
            Me.columnexpirydate = MyBase.Columns("expirydate")
            Me.columnServiceTax = MyBase.Columns("ServiceTax")
            Me.columnHISTORY = MyBase.Columns("HISTORY")
            Me.columnGSTINNO = MyBase.Columns("GSTINNO")
            Me.columnSTATECODE = MyBase.Columns("STATECODE")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnCOMPANYNAME = New Global.System.Data.DataColumn("COMPANYNAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOMPANYNAME)
            Me.columnFROMDATE = New Global.System.Data.DataColumn("FROMDATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFROMDATE)
            Me.columnTODATE = New Global.System.Data.DataColumn("TODATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTODATE)
            Me.columnSHORTNAME = New Global.System.Data.DataColumn("SHORTNAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSHORTNAME)
            Me.columnADD1 = New Global.System.Data.DataColumn("ADD1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnADD1)
            Me.columnADD2 = New Global.System.Data.DataColumn("ADD2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnADD2)
            Me.columnCITY = New Global.System.Data.DataColumn("CITY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCITY)
            Me.columnSTATE = New Global.System.Data.DataColumn("STATE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSTATE)
            Me.columnPINCODE = New Global.System.Data.DataColumn("PINCODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPINCODE)
            Me.columnPHONE1 = New Global.System.Data.DataColumn("PHONE1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPHONE1)
            Me.columnPHONE2 = New Global.System.Data.DataColumn("PHONE2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPHONE2)
            Me.columnFAX = New Global.System.Data.DataColumn("FAX", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFAX)
            Me.columnEMAIL = New Global.System.Data.DataColumn("EMAIL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEMAIL)
            Me.columnWEBSITE = New Global.System.Data.DataColumn("WEBSITE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWEBSITE)
            Me.columnDATAfile = New Global.System.Data.DataColumn("DATAfile", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDATAfile)
            Me.columnINDATE = New Global.System.Data.DataColumn("INDATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINDATE)
            Me.columnFRONT = New Global.System.Data.DataColumn("FRONT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFRONT)
            Me.columnFRONTFILE = New Global.System.Data.DataColumn("FRONTFILE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFRONTFILE)
            Me.columnMAIN = New Global.System.Data.DataColumn("MAIN", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMAIN)
            Me.columnMAINFILE = New Global.System.Data.DataColumn("MAINFILE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMAINFILE)
            Me.columnLOGO = New Global.System.Data.DataColumn("LOGO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLOGO)
            Me.columnLOGOFILE = New Global.System.Data.DataColumn("LOGOFILE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLOGOFILE)
            Me.columnCOMP = New Global.System.Data.DataColumn("COMP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOMP)
            Me.columnCOMP1 = New Global.System.Data.DataColumn("COMP1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOMP1)
            Me.columncomptdacc = New Global.System.Data.DataColumn("comptdacc", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncomptdacc)
            Me.columncomppanno = New Global.System.Data.DataColumn("comppanno", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncomppanno)
            Me.columnbranchcode = New Global.System.Data.DataColumn("branchcode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnbranchcode)
            Me.columnactflag = New Global.System.Data.DataColumn("actflag", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnactflag)
            Me.columnSNO = New Global.System.Data.DataColumn("SNO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSNO)
            Me.columnACTIVE = New Global.System.Data.DataColumn("ACTIVE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnACTIVE)
            Me.columnslno = New Global.System.Data.DataColumn("slno", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnslno)
            Me.columnTINNO = New Global.System.Data.DataColumn("TINNO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTINNO)
            Me.columnPRINTFLAG = New Global.System.Data.DataColumn("PRINTFLAG", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRINTFLAG)
            Me.columnexpirydate = New Global.System.Data.DataColumn("expirydate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnexpirydate)
            Me.columnServiceTax = New Global.System.Data.DataColumn("ServiceTax", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnServiceTax)
            Me.columnHISTORY = New Global.System.Data.DataColumn("HISTORY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHISTORY)
            Me.columnGSTINNO = New Global.System.Data.DataColumn("GSTINNO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGSTINNO)
            Me.columnSTATECODE = New Global.System.Data.DataColumn("STATECODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSTATECODE)
            Me.columnCOMPANYNAME.MaxLength = 70
            Me.columnSHORTNAME.MaxLength = 10
            Me.columnADD1.MaxLength = 50
            Me.columnADD2.MaxLength = 50
            Me.columnCITY.MaxLength = 50
            Me.columnSTATE.MaxLength = 50
            Me.columnPINCODE.MaxLength = 6
            Me.columnPHONE1.MaxLength = 25
            Me.columnPHONE2.MaxLength = 25
            Me.columnFAX.MaxLength = 25
            Me.columnEMAIL.MaxLength = 100
            Me.columnWEBSITE.MaxLength = 100
            Me.columnDATAfile.MaxLength = 50
            Me.columnFRONT.MaxLength = 1
            Me.columnFRONTFILE.MaxLength = 50
            Me.columnMAIN.MaxLength = 1
            Me.columnMAINFILE.MaxLength = 50
            Me.columnLOGO.MaxLength = 1
            Me.columnLOGOFILE.MaxLength = 50
            Me.columnCOMP.MaxLength = 15
            Me.columnCOMP1.MaxLength = 15
            Me.columncomptdacc.MaxLength = 50
            Me.columncomppanno.MaxLength = 50
            Me.columnbranchcode.MaxLength = 50
            Me.columnactflag.MaxLength = 1
            Me.columnSNO.MaxLength = 2
            Me.columnACTIVE.MaxLength = 1
            Me.columnTINNO.MaxLength = 15
            Me.columnPRINTFLAG.MaxLength = 15
            Me.columnServiceTax.MaxLength = 20
            Me.columnHISTORY.MaxLength = 20
            Me.columnGSTINNO.MaxLength = 50
            Me.columnSTATECODE.MaxLength = 10
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewclubmasterRow() As clubmasterRow
            Return CType(Me.NewRow,clubmasterRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New clubmasterRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(clubmasterRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.clubmasterRowChangedEvent) Is Nothing) Then
                RaiseEvent clubmasterRowChanged(Me, New clubmasterRowChangeEvent(CType(e.Row,clubmasterRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.clubmasterRowChangingEvent) Is Nothing) Then
                RaiseEvent clubmasterRowChanging(Me, New clubmasterRowChangeEvent(CType(e.Row,clubmasterRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.clubmasterRowDeletedEvent) Is Nothing) Then
                RaiseEvent clubmasterRowDeleted(Me, New clubmasterRowChangeEvent(CType(e.Row,clubmasterRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.clubmasterRowDeletingEvent) Is Nothing) Then
                RaiseEvent clubmasterRowDeleting(Me, New clubmasterRowChangeEvent(CType(e.Row,clubmasterRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveclubmasterRow(ByVal row As clubmasterRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DataSet2 = New DataSet2()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "clubmasterDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class membermasterRow
        Inherits Global.System.Data.DataRow
        
        Private tablemembermaster As membermasterDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablemembermaster = CType(Me.Table,membermasterDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SequenceNo() As Decimal
            Get
                Return CType(Me(Me.tablemembermaster.SequenceNoColumn),Decimal)
            End Get
            Set
                Me(Me.tablemembermaster.SequenceNoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TAG() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.TAGColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TAG' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.TAGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MEMBERTYPECODE() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.MEMBERTYPECODEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MEMBERTYPECODE' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.MEMBERTYPECODEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property COMPANY() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.COMPANYColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'COMPANY' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.COMPANYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SUBCD() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.SUBCDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SUBCD' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.SUBCDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MCODE() As String
            Get
                Return CType(Me(Me.tablemembermaster.MCODEColumn),String)
            End Get
            Set
                Me(Me.tablemembermaster.MCODEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MNAME() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.MNAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MNAME' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.MNAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MID() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.MIDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MID' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.MIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DOB() As Date
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.DOBColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DOB' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.DOBColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DOJ() As Date
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.DOJColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DOJ' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.DOJColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SEX() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.SEXColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SEX' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.SEXColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MARITALSTATUS() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.MARITALSTATUSColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MARITALSTATUS' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.MARITALSTATUSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SPOUSE() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.SPOUSEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SPOUSE' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.SPOUSEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BG() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.BGColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BG' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.BGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property OCCUPATION() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.OCCUPATIONColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OCCUPATION' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.OCCUPATIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BANKER() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.BANKERColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BANKER' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.BANKERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BANKACNO() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.BANKACNOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BANKACNO' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.BANKACNOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property HOBBIES() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.HOBBIESColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HOBBIES' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.HOBBIESColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property OTHERINFO() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.OTHERINFOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OTHERINFO' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.OTHERINFOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RESIDENT() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.RESIDENTColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RESIDENT' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.RESIDENTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property EQUALIFICATION() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.EQUALIFICATIONColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EQUALIFICATION' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.EQUALIFICATIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PQUALIFICATION() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.PQUALIFICATIONColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PQUALIFICATION' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.PQUALIFICATIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PROPOSER() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.PROPOSERColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PROPOSER' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.PROPOSERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PROPOSERNAME() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.PROPOSERNAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PROPOSERNAME' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.PROPOSERNAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SECONDER() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.SECONDERColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SECONDER' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.SECONDERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SECONDERNAME() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.SECONDERNAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SECONDERNAME' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.SECONDERNAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PAcopyst() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.PAcopystColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PAcopyst' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.PAcopystColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PADD1() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.PADD1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PADD1' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.PADD1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PADD2() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.PADD2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PADD2' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.PADD2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PADD3() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.PADD3Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PADD3' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.PADD3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PCITY() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.PCITYColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PCITY' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.PCITYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PSTATE() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.PSTATEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PSTATE' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.PSTATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PCOUNTRY() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.PCOUNTRYColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PCOUNTRY' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.PCOUNTRYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PPIN() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.PPINColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PPIN' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.PPINColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PPHONE1() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.PPHONE1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PPHONE1' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.PPHONE1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PPHONE2() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.PPHONE2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PPHONE2' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.PPHONE2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PCELL() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.PCELLColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PCELL' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.PCELLColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PEMAIL() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.PEMAILColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PEMAIL' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.PEMAILColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RAcopyst() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.RAcopystColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RAcopyst' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.RAcopystColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CADD1() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.CADD1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CADD1' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.CADD1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CADD2() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.CADD2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CADD2' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.CADD2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CADD3() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.CADD3Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CADD3' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.CADD3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CCITY() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.CCITYColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CCITY' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.CCITYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CSTATE() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.CSTATEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CSTATE' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.CSTATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CCOUNTRY() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.CCOUNTRYColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CCOUNTRY' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.CCOUNTRYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CPIN() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.CPINColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CPIN' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.CPINColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CPHONE1() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.CPHONE1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CPHONE1' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.CPHONE1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CPHONE2() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.CPHONE2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CPHONE2' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.CPHONE2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CCELL() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.CCELLColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CCELL' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.CCELLColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CEMAIL() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.CEMAILColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CEMAIL' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.CEMAILColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CONTADD1() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.CONTADD1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CONTADD1' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.CONTADD1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CONTADD2() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.CONTADD2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CONTADD2' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.CONTADD2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CONTADD3() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.CONTADD3Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CONTADD3' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.CONTADD3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CONTCITY() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.CONTCITYColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CONTCITY' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.CONTCITYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CONTSTATE() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.CONTSTATEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CONTSTATE' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.CONTSTATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CONTCOUNTRY() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.CONTCOUNTRYColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CONTCOUNTRY' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.CONTCOUNTRYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CONTPIN() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.CONTPINColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CONTPIN' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.CONTPINColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CONTPHONE1() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.CONTPHONE1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CONTPHONE1' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.CONTPHONE1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CONTPHONE2() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.CONTPHONE2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CONTPHONE2' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.CONTPHONE2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CONTCELL() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.CONTCELLColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CONTCELL' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.CONTCELLColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CONTEMAIL() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.CONTEMAILColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CONTEMAIL' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.CONTEMAILColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property EMPTYPE() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.EMPTYPEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EMPTYPE' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.EMPTYPEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BUSINESSNAME() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.BUSINESSNAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BUSINESSNAME' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.BUSINESSNAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BAcopyst() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.BAcopystColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BAcopyst' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.BAcopystColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property OADD1() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.OADD1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OADD1' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.OADD1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property OADD2() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.OADD2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OADD2' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.OADD2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property OADD3() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.OADD3Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OADD3' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.OADD3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property OCITY() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.OCITYColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OCITY' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.OCITYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property OSTATE() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.OSTATEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OSTATE' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.OSTATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property OCOUNTRY() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.OCOUNTRYColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OCOUNTRY' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.OCOUNTRYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property OPIN() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.OPINColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OPIN' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.OPINColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property OPHONE1() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.OPHONE1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OPHONE1' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.OPHONE1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property OPHONE2() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.OPHONE2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OPHONE2' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.OPHONE2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DOEPROFESSION() As Date
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.DOEPROFESSIONColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DOEPROFESSION' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.DOEPROFESSIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BUSINESSNATURE() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.BUSINESSNATUREColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BUSINESSNATURE' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.BUSINESSNATUREColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property POSITIONHELD() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.POSITIONHELDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'POSITIONHELD' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.POSITIONHELDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SERVICENAME() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.SERVICENAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SERVICENAME' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.SERVICENAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SERVICEYEAR() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.SERVICEYEARColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SERVICEYEAR' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.SERVICEYEARColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PANO() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.PANOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PANO' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.PANOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BBANKER() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.BBANKERColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BBANKER' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.BBANKERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CCNO() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.CCNOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CCNO' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.CCNOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ANNUALINCOME() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.ANNUALINCOMEColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ANNUALINCOME' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.ANNUALINCOMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property UPDUSERID() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.UPDUSERIDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'UPDUSERID' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.UPDUSERIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property UPDDATETIME() As Date
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.UPDDATETIMEColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'UPDDATETIME' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.UPDDATETIMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TERMINATION() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.TERMINATIONColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TERMINATION' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.TERMINATIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TRN_CON_DATE() As Date
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.TRN_CON_DATEColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TRN_CON_DATE' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.TRN_CON_DATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CON_MCODE() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.CON_MCODEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CON_MCODE' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.CON_MCODEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PFAX() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.PFAXColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PFAX' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.PFAXColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CFAX() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.CFAXColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CFAX' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.CFAXColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CONTFAX() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.CONTFAXColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CONTFAX' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.CONTFAXColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property REASON() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.REASONColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'REASON' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.REASONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PHOTO() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.PHOTOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PHOTO' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.PHOTOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CREDITLIMIT() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.CREDITLIMITColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CREDITLIMIT' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.CREDITLIMITColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property LIMITAMOUNT() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.LIMITAMOUNTColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LIMITAMOUNT' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.LIMITAMOUNTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property WEBSITE() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.WEBSITEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'WEBSITE' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.WEBSITEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Imagefile() As Byte()
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.ImagefileColumn),Byte())
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Imagefile' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.ImagefileColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property sizefield() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.sizefieldColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'sizefield' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.sizefieldColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Vdate() As Date
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.VdateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Vdate' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.VdateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Vyear() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.VyearColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Vyear' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.VyearColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Validdate() As Date
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.ValiddateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Validdate' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.ValiddateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TempTermination() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.TempTerminationColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TempTermination' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.TempTerminationColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TempTermDate() As Date
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.TempTermDateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TempTermDate' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.TempTermDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TempTermReason() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.TempTermReasonColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TempTermReason' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.TempTermReasonColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Memberid() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.MemberidColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Memberid' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.MemberidColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property EndingDate() As Date
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.EndingDateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EndingDate' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.EndingDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TotalYears() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.TotalYearsColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TotalYears' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.TotalYearsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CardNo() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.CardNoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CardNo' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.CardNoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CardExpDate() As Date
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.CardExpDateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CardExpDate' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.CardExpDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Validity() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.ValidityColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Validity' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.ValidityColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Period() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.PeriodColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Period' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.PeriodColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Creditcardno() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.CreditcardnoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Creditcardno' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.CreditcardnoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CreditExpDt() As Date
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.CreditExpDtColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CreditExpDt' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.CreditExpDtColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Type() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.TypeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Type' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.TypeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property STATUSDATEFROM() As Date
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.STATUSDATEFROMColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'STATUSDATEFROM' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.STATUSDATEFROMColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property STATUSDATETO() As Date
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.STATUSDATETOColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'STATUSDATETO' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.STATUSDATETOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CurentStatus() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.CurentStatusColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CurentStatus' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.CurentStatusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FirstName() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.FirstNameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FirstName' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.FirstNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MiddleName() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.MiddleNameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MiddleName' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.MiddleNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Surname() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.SurnameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Surname' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.SurnameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property _Alias() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.AliasColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Alias' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.AliasColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Prefix() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.PrefixColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Prefix' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.PrefixColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BillType() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.BillTypeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BillType' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.BillTypeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Nationality() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.NationalityColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Nationality' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.NationalityColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NationalityAtbirth() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.NationalityAtbirthColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NationalityAtbirth' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.NationalityAtbirthColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Billbasis() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.BillbasisColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Billbasis' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.BillbasisColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BillHead() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.BillHeadColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BillHead' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.BillHeadColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GDRLocker() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.GDRLockerColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GDRLocker' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.GDRLockerColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property LDRLocker() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.LDRLockerColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LDRLocker' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.LDRLockerColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MembershipTo() As Date
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.MembershipToColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MembershipTo' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.MembershipToColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property salut() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.salutColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'salut' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.salutColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property EntranceFee() As Double
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.EntranceFeeColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EntranceFee' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.EntranceFeeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DevelopmentFee() As Double
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.DevelopmentFeeColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DevelopmentFee' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.DevelopmentFeeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CriditNumber() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.CriditNumberColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CriditNumber' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.CriditNumberColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SecurityDeposit() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.SecurityDepositColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SecurityDeposit' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.SecurityDepositColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PlaceOfBirth() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.PlaceOfBirthColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PlaceOfBirth' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.PlaceOfBirthColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CountryOfBirth() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.CountryOfBirthColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CountryOfBirth' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.CountryOfBirthColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property LastArrivalInCal() As Date
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.LastArrivalInCalColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LastArrivalInCal' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.LastArrivalInCalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PeriodOfStay_year() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.PeriodOfStay_yearColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PeriodOfStay_year' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.PeriodOfStay_yearColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PeriodOfStay_Month() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.PeriodOfStay_MonthColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PeriodOfStay_Month' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.PeriodOfStay_MonthColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PreviouslyProposed() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.PreviouslyProposedColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PreviouslyProposed' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.PreviouslyProposedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NoOfTimesProposed() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.NoOfTimesProposedColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NoOfTimesProposed' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.NoOfTimesProposedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DateOfProposal() As Date
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.DateOfProposalColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DateOfProposal' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.DateOfProposalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ResultOfProposal() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.ResultOfProposalColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ResultOfProposal' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.ResultOfProposalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Elected() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.ElectedColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Elected' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.ElectedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FatherName() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.FatherNameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FatherName' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.FatherNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DOBfather() As Date
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.DOBfatherColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DOBfather' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.DOBfatherColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property WifeDOB() As Date
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.WifeDOBColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'WifeDOB' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.WifeDOBColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MaidenNameWife() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.MaidenNameWifeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MaidenNameWife' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.MaidenNameWifeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NationalityWife() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.NationalityWifeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NationalityWife' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.NationalityWifeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property WifesFatherName() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.WifesFatherNameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'WifesFatherName' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.WifesFatherNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property WifeFatherDOB() As Date
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.WifeFatherDOBColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'WifeFatherDOB' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.WifeFatherDOBColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ApplNo() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.ApplNoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ApplNo' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.ApplNoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ApplDate() As Date
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.ApplDateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ApplDate' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.ApplDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Corporatest() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.CorporatestColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Corporatest' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.CorporatestColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CorporateCode() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.CorporateCodeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CorporateCode' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.CorporateCodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CompName() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.CompNameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CompName' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.CompNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Designation() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.DesignationColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Designation' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.DesignationColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ProfessionInfo() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.ProfessionInfoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ProfessionInfo' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.ProfessionInfoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BuisnessInfo() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.BuisnessInfoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BuisnessInfo' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.BuisnessInfoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Products() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.ProductsColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Products' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.ProductsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AgentsDealers() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.AgentsDealersColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AgentsDealers' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.AgentsDealersColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ESTDdate() As Date
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.ESTDdateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ESTDdate' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.ESTDdateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NoOfEmp() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.NoOfEmpColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NoOfEmp' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.NoOfEmpColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Turnover() As Double
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.TurnoverColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Turnover' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.TurnoverColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Client() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.ClientColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Client' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.ClientColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AppliedBut() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.AppliedButColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AppliedBut' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.AppliedButColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PositionInChamber() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.PositionInChamberColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PositionInChamber' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.PositionInChamberColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Qulificationstatus() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.QulificationstatusColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Qulificationstatus' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.QulificationstatusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Qualification1() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.Qualification1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Qualification1' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.Qualification1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Details1() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.Details1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Details1' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.Details1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property YearOfPassing1() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.YearOfPassing1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'YearOfPassing1' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.YearOfPassing1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Institute1() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.Institute1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Institute1' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.Institute1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Division1() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.Division1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Division1' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.Division1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Qualification2() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.Qualification2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Qualification2' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.Qualification2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Details2() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.Details2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Details2' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.Details2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property YearOfPassing2() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.YearOfPassing2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'YearOfPassing2' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.YearOfPassing2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Institute2() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.Institute2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Institute2' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.Institute2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Division2() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.Division2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Division2' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.Division2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Qualification3() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.Qualification3Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Qualification3' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.Qualification3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Details3() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.Details3Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Details3' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.Details3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property YearOfPassing3() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.YearOfPassing3Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'YearOfPassing3' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.YearOfPassing3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Institute3() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.Institute3Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Institute3' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.Institute3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Division3() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.Division3Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Division3' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.Division3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property sportstatus() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.sportstatusColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'sportstatus' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.sportstatusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GameType1() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.GameType1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GameType1' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.GameType1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NameOfGame1() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.NameOfGame1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NameOfGame1' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.NameOfGame1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Description1() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.Description1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Description1' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.Description1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GameType2() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.GameType2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GameType2' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.GameType2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NameofGame2() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.NameofGame2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NameofGame2' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.NameofGame2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Description2() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.Description2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Description2' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.Description2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GameType3() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.GameType3Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GameType3' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.GameType3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NameOfGame3() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.NameOfGame3Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NameOfGame3' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.NameOfGame3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Description3() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.Description3Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Description3' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.Description3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Childstatus() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.ChildstatusColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Childstatus' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.ChildstatusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ChildName1() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.ChildName1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ChildName1' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.ChildName1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ChildDob1() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.ChildDob1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ChildDob1' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.ChildDob1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ChildSex1() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.ChildSex1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ChildSex1' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.ChildSex1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ChildExpairy1() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.ChildExpairy1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ChildExpairy1' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.ChildExpairy1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ChildName2() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.ChildName2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ChildName2' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.ChildName2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ChildDob2() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.ChildDob2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ChildDob2' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.ChildDob2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ChildSex2() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.ChildSex2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ChildSex2' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.ChildSex2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ChildExpairy2() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.ChildExpairy2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ChildExpairy2' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.ChildExpairy2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ChildName3() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.ChildName3Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ChildName3' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.ChildName3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ChildDob3() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.ChildDob3Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ChildDob3' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.ChildDob3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ChildSex3() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.ChildSex3Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ChildSex3' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.ChildSex3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property childExpairy3() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.childExpairy3Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'childExpairy3' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.childExpairy3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Clubstatus() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.ClubstatusColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Clubstatus' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.ClubstatusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property OtherClubName1() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.OtherClubName1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OtherClubName1' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.OtherClubName1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property OCAddress1() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.OCAddress1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OCAddress1' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.OCAddress1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property OCStatus1() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.OCStatus1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OCStatus1' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.OCStatus1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property OtherClubName2() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.OtherClubName2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OtherClubName2' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.OtherClubName2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property OCAddress2() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.OCAddress2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OCAddress2' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.OCAddress2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property OCStatus2() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.OCStatus2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OCStatus2' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.OCStatus2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property OtherClubname3() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.OtherClubname3Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OtherClubname3' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.OtherClubname3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property OCAddress3() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.OCAddress3Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OCAddress3' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.OCAddress3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property OCStataus() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.OCStatausColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OCStataus' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.OCStatausColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property adduser() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.adduserColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'adduser' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.adduserColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property adddate() As Date
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.adddateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'adddate' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.adddateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property freeze() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.freezeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'freeze' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.freezeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Relativestatus() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.RelativestatusColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Relativestatus' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.RelativestatusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RelativeName1() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.RelativeName1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RelativeName1' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.RelativeName1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Relation1() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.Relation1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Relation1' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.Relation1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property dateofbirth1() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.dateofbirth1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'dateofbirth1' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.dateofbirth1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Relativeage1() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.Relativeage1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Relativeage1' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.Relativeage1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RelativeSex1() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.RelativeSex1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RelativeSex1' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.RelativeSex1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Relativeaddress1() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.Relativeaddress1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Relativeaddress1' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.Relativeaddress1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RelativeName2() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.RelativeName2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RelativeName2' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.RelativeName2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Relation2() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.Relation2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Relation2' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.Relation2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property dateofbirth2() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.dateofbirth2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'dateofbirth2' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.dateofbirth2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Relativeage2() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.Relativeage2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Relativeage2' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.Relativeage2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RelativeSex2() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.RelativeSex2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RelativeSex2' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.RelativeSex2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Relativeaddress2() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.Relativeaddress2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Relativeaddress2' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.Relativeaddress2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RelativeName3() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.RelativeName3Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RelativeName3' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.RelativeName3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Relation3() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.Relation3Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Relation3' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.Relation3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property dateofbirth3() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.dateofbirth3Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'dateofbirth3' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.dateofbirth3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Relativeage3() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.Relativeage3Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Relativeage3' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.Relativeage3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RelativeSex3() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.RelativeSex3Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RelativeSex3' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.RelativeSex3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Relativeaddress3() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.Relativeaddress3Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Relativeaddress3' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.Relativeaddress3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property referentialst() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.referentialstColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'referentialst' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.referentialstColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property mem_code1() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.mem_code1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'mem_code1' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.mem_code1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property mem_name1() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.mem_name1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'mem_name1' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.mem_name1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property refmem_date1() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.refmem_date1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'refmem_date1' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.refmem_date1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property deleted1() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.deleted1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'deleted1' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.deleted1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property mem_code2() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.mem_code2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'mem_code2' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.mem_code2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property mem_name2() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.mem_name2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'mem_name2' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.mem_name2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property refmem_date2() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.refmem_date2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'refmem_date2' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.refmem_date2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property deleted2() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.deleted2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'deleted2' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.deleted2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property mem_code3() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.mem_code3Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'mem_code3' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.mem_code3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property mem_name3() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.mem_name3Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'mem_name3' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.mem_name3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property refmem_date3() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.refmem_date3Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'refmem_date3' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.refmem_date3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property deleted3() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.deleted3Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'deleted3' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.deleted3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property entrancefeest() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.entrancefeestColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'entrancefeest' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.entrancefeestColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property receiptno1() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.receiptno1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'receiptno1' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.receiptno1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property startdate1() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.startdate1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'startdate1' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.startdate1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property amount1() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.amount1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'amount1' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.amount1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property receiptno2() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.receiptno2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'receiptno2' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.receiptno2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property startdate2() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.startdate2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'startdate2' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.startdate2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property amount2() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.amount2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'amount2' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.amount2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property receiptno3() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.receiptno3Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'receiptno3' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.receiptno3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property startdate3() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.startdate3Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'startdate3' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.startdate3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property amount3() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.amount3Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'amount3' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.amount3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property OLD() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.OLDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OLD' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.OLDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CardAmt() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.CardAmtColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CardAmt' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.CardAmtColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MINIMUMUSAGE() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.MINIMUMUSAGEColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MINIMUMUSAGE' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.MINIMUMUSAGEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CREDITNO() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.CREDITNOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CREDITNO' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.CREDITNOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SPOUSEMOBILE() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.SPOUSEMOBILEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SPOUSEMOBILE' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.SPOUSEMOBILEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property P_NO() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.P_NOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'P_NO' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.P_NOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MEM_CODE() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.MEM_CODEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MEM_CODE' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.MEM_CODEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property depnos() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.depnosColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'depnos' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.depnosColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property mb_oprsop() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.mb_oprsopColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'mb_oprsop' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.mb_oprsopColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property m_payroll() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.m_payrollColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'm_payroll' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.m_payrollColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property lib_mem() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.lib_memColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'lib_mem' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.lib_memColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property libbillingbasis() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.libbillingbasisColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'libbillingbasis' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.libbillingbasisColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property mcodec() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.mcodecColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'mcodec' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.mcodecColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property mcoden() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.mcodenColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'mcoden' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.mcodenColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property mcode1() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.mcode1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'mcode1' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.mcode1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property dow() As Date
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.dowColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'dow' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.dowColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property hplocker() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.hplockerColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'hplocker' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.hplockerColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GLCODE() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.GLCODEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GLCODE' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.GLCODEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property termletter() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.termletterColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'termletter' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.termletterColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MEMBERTYPE() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.MEMBERTYPEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MEMBERTYPE' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.MEMBERTYPEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MEMIMAGE() As Byte()
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.MEMIMAGEColumn),Byte())
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MEMIMAGE' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.MEMIMAGEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MEMIMAGESIGN() As Byte()
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.MEMIMAGESIGNColumn),Byte())
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MEMIMAGESIGN' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.MEMIMAGESIGNColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SDOB() As Date
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.SDOBColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SDOB' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.SDOBColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CHILDFDOB1() As Date
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.CHILDFDOB1Column),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CHILDFDOB1' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.CHILDFDOB1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PADD4() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.PADD4Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PADD4' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.PADD4Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CADD4() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.CADD4Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CADD4' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.CADD4Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property EMAIL_FLAG() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.EMAIL_FLAGColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EMAIL_FLAG' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.EMAIL_FLAGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property EBILL() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.EBILLColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EBILL' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.EBILLColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property WEDDING_DATE() As Date
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.WEDDING_DATEColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'WEDDING_DATE' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.WEDDING_DATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TAXFLAG() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.TAXFLAGColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TAXFLAG' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.TAXFLAGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MLEDGERNAME() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.MLEDGERNAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MLEDGERNAME' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.MLEDGERNAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BACOPYST1() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.BACOPYST1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BACOPYST1' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.BACOPYST1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RACOPYST1() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.RACOPYST1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RACOPYST1' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.RACOPYST1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MSORDERNO() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.MSORDERNOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MSORDERNO' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.MSORDERNOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PREFIXMCODE() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.PREFIXMCODEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PREFIXMCODE' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.PREFIXMCODEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PACOPYST1() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.PACOPYST1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PACOPYST1' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.PACOPYST1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property OCELL() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.OCELLColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OCELL' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.OCELLColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property OEMAIL() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.OEMAILColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OEMAIL' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.OEMAILColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ICNO() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.ICNOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ICNO' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.ICNOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property UNITNO() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.UNITNOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'UNITNO' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.UNITNOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DATEOFRELEASE() As Date
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.DATEOFRELEASEColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DATEOFRELEASE' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.DATEOFRELEASEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DATEOFCREATION() As Date
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.DATEOFCREATIONColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DATEOFCREATION' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.DATEOFCREATIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MDESCRIPTION() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.MDESCRIPTIONColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MDESCRIPTION' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.MDESCRIPTIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RIDCARDNO() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.RIDCARDNOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RIDCARDNO' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.RIDCARDNOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ARMSERVICE() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.ARMSERVICEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ARMSERVICE' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.ARMSERVICEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property WO() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.WOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'WO' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.WOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NOOFDEPENDENCIES() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.NOOFDEPENDENCIESColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NOOFDEPENDENCIES' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.NOOFDEPENDENCIESColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RBYMEMBERNO() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.RBYMEMBERNOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RBYMEMBERNO' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.RBYMEMBERNOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RBYMEMBERNO2() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.RBYMEMBERNO2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RBYMEMBERNO2' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.RBYMEMBERNO2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RBYNAME() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.RBYNAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RBYNAME' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.RBYNAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RBYMEMBERNAME2() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.RBYMEMBERNAME2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RBYMEMBERNAME2' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.RBYMEMBERNAME2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RANKNO() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.RANKNOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RANKNO' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.RANKNOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DATEOFCOMMISSION() As Date
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.DATEOFCOMMISSIONColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DATEOFCOMMISSION' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.DATEOFCOMMISSIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NOOFTIMESSECONDED() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.NOOFTIMESSECONDEDColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NOOFTIMESSECONDED' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.NOOFTIMESSECONDEDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DATEOFSECONDED() As Date
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.DATEOFSECONDEDColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DATEOFSECONDED' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.DATEOFSECONDEDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PLOTNO() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.PLOTNOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PLOTNO' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.PLOTNOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SOCIETYNO() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.SOCIETYNOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SOCIETYNO' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.SOCIETYNOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CREDITSTOPFLAG() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.CREDITSTOPFLAGColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CREDITSTOPFLAG' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.CREDITSTOPFLAGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CREDITSTOPDATE() As Date
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.CREDITSTOPDATEColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CREDITSTOPDATE' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.CREDITSTOPDATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BTGROUP() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.BTGROUPColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BTGROUP' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.BTGROUPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ANNIVERSARYDATE() As Date
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.ANNIVERSARYDATEColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ANNIVERSARYDATE' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.ANNIVERSARYDATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ARMYNO() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.ARMYNOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ARMYNO' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.ARMYNOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RANKNAME() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.RANKNAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RANKNAME' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.RANKNAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BARCODENO() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.BARCODENOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BARCODENO' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.BARCODENOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DEPENDENTID() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.DEPENDENTIDColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DEPENDENTID' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.DEPENDENTIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SPOUSEIMAGE() As Byte()
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.SPOUSEIMAGEColumn),Byte())
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SPOUSEIMAGE' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.SPOUSEIMAGEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property F_MCODE() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.F_MCODEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'F_MCODE' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.F_MCODEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NOMINEE() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.NOMINEEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NOMINEE' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.NOMINEEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ENC_SMARTCARDNO() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.ENC_SMARTCARDNOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ENC_SMARTCARDNO' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.ENC_SMARTCARDNOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MTORDERNO() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.MTORDERNOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MTORDERNO' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.MTORDERNOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MARITAL_STATUS() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.MARITAL_STATUSColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MARITAL_STATUS' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.MARITAL_STATUSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property oldmcode() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.oldmcodeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'oldmcode' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.oldmcodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property newmcode() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.newmcodeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'newmcode' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.newmcodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Memberdesigncode() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.MemberdesigncodeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Memberdesigncode' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.MemberdesigncodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Citycode() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.CitycodeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Citycode' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.CitycodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Statecode() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.StatecodeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Statecode' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.StatecodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SaluatationCode() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.SaluatationCodeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SaluatationCode' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.SaluatationCodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ReligionCode() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.ReligionCodeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ReligionCode' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.ReligionCodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Countrycode() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.CountrycodeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Countrycode' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.CountrycodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MemberMaritialcode() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.MemberMaritialcodeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MemberMaritialcode' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.MemberMaritialcodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property spouseprefix() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.spouseprefixColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'spouseprefix' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.spouseprefixColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SpouseFreeze() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.SpouseFreezeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SpouseFreeze' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.SpouseFreezeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MEMLIMIT() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.MEMLIMITColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MEMLIMIT' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.MEMLIMITColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CATLIMIT() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.CATLIMITColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CATLIMIT' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.CATLIMITColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property REPLACEMENT() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.REPLACEMENTColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'REPLACEMENT' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.REPLACEMENTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RNO() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.RNOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RNO' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.RNOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property spouseimagesign() As Byte()
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.spouseimagesignColumn),Byte())
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'spouseimagesign' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.spouseimagesignColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property religion() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.religionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'religion' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.religionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ADD_DATE() As Date
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.ADD_DATEColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ADD_DATE' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.ADD_DATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ADD_USER() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.ADD_USERColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ADD_USER' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.ADD_USERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property UPD_USER() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.UPD_USERColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'UPD_USER' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.UPD_USERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property UPD_DATE() As Date
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.UPD_DATEColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'UPD_DATE' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.UPD_DATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property VOID() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.VOIDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'VOID' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.VOIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property VOIDUSER() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.VOIDUSERColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'VOIDUSER' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.VOIDUSERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property VOIDDATE() As Date
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.VOIDDATEColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'VOIDDATE' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.VOIDDATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AUTHORISED() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.AUTHORISEDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AUTHORISED' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.AUTHORISEDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AUTHORISE_LEVEL1() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.AUTHORISE_LEVEL1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AUTHORISE_LEVEL1' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.AUTHORISE_LEVEL1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AUTHORISE_USER1() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.AUTHORISE_USER1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AUTHORISE_USER1' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.AUTHORISE_USER1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AUTHORISE_DATE1() As Date
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.AUTHORISE_DATE1Column),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AUTHORISE_DATE1' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.AUTHORISE_DATE1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AUTHORISE_LEVEL2() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.AUTHORISE_LEVEL2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AUTHORISE_LEVEL2' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.AUTHORISE_LEVEL2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AUTHORISE_USER2() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.AUTHORISE_USER2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AUTHORISE_USER2' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.AUTHORISE_USER2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AUTHORISE_DATE2() As Date
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.AUTHORISE_DATE2Column),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AUTHORISE_DATE2' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.AUTHORISE_DATE2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AUTHORISE_LEVEL3() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.AUTHORISE_LEVEL3Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AUTHORISE_LEVEL3' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.AUTHORISE_LEVEL3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AUTHORISE_USER3() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.AUTHORISE_USER3Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AUTHORISE_USER3' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.AUTHORISE_USER3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RESIGNED_DATE() As Date
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.RESIGNED_DATEColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RESIGNED_DATE' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.RESIGNED_DATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RESIGNED_FLAG() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.RESIGNED_FLAGColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RESIGNED_FLAG' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.RESIGNED_FLAGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Newstatus() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.NewstatusColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Newstatus' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.NewstatusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SECONDER1() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.SECONDER1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SECONDER1' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.SECONDER1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SECONDERNAME1() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.SECONDERNAME1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SECONDERNAME1' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.SECONDERNAME1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SECONDER2() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.SECONDER2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SECONDER2' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.SECONDER2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SECONDERNAME2() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.SECONDERNAME2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SECONDERNAME2' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.SECONDERNAME2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property spl_info() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.spl_infoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'spl_info' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.spl_infoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PASSPORTNO() As String
            Get
                Try 
                    Return CType(Me(Me.tablemembermaster.PASSPORTNOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PASSPORTNO' in table 'membermaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemembermaster.PASSPORTNOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTAGNull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.TAGColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTAGNull()
            Me(Me.tablemembermaster.TAGColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMEMBERTYPECODENull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.MEMBERTYPECODEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMEMBERTYPECODENull()
            Me(Me.tablemembermaster.MEMBERTYPECODEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCOMPANYNull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.COMPANYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCOMPANYNull()
            Me(Me.tablemembermaster.COMPANYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSUBCDNull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.SUBCDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSUBCDNull()
            Me(Me.tablemembermaster.SUBCDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMNAMENull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.MNAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMNAMENull()
            Me(Me.tablemembermaster.MNAMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMIDNull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.MIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMIDNull()
            Me(Me.tablemembermaster.MIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDOBNull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.DOBColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDOBNull()
            Me(Me.tablemembermaster.DOBColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDOJNull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.DOJColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDOJNull()
            Me(Me.tablemembermaster.DOJColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSEXNull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.SEXColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSEXNull()
            Me(Me.tablemembermaster.SEXColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMARITALSTATUSNull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.MARITALSTATUSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMARITALSTATUSNull()
            Me(Me.tablemembermaster.MARITALSTATUSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSPOUSENull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.SPOUSEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSPOUSENull()
            Me(Me.tablemembermaster.SPOUSEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBGNull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.BGColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBGNull()
            Me(Me.tablemembermaster.BGColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsOCCUPATIONNull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.OCCUPATIONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetOCCUPATIONNull()
            Me(Me.tablemembermaster.OCCUPATIONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBANKERNull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.BANKERColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBANKERNull()
            Me(Me.tablemembermaster.BANKERColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBANKACNONull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.BANKACNOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBANKACNONull()
            Me(Me.tablemembermaster.BANKACNOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsHOBBIESNull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.HOBBIESColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetHOBBIESNull()
            Me(Me.tablemembermaster.HOBBIESColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsOTHERINFONull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.OTHERINFOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetOTHERINFONull()
            Me(Me.tablemembermaster.OTHERINFOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRESIDENTNull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.RESIDENTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRESIDENTNull()
            Me(Me.tablemembermaster.RESIDENTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsEQUALIFICATIONNull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.EQUALIFICATIONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetEQUALIFICATIONNull()
            Me(Me.tablemembermaster.EQUALIFICATIONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPQUALIFICATIONNull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.PQUALIFICATIONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPQUALIFICATIONNull()
            Me(Me.tablemembermaster.PQUALIFICATIONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPROPOSERNull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.PROPOSERColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPROPOSERNull()
            Me(Me.tablemembermaster.PROPOSERColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPROPOSERNAMENull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.PROPOSERNAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPROPOSERNAMENull()
            Me(Me.tablemembermaster.PROPOSERNAMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSECONDERNull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.SECONDERColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSECONDERNull()
            Me(Me.tablemembermaster.SECONDERColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSECONDERNAMENull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.SECONDERNAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSECONDERNAMENull()
            Me(Me.tablemembermaster.SECONDERNAMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPAcopystNull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.PAcopystColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPAcopystNull()
            Me(Me.tablemembermaster.PAcopystColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPADD1Null() As Boolean
            Return Me.IsNull(Me.tablemembermaster.PADD1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPADD1Null()
            Me(Me.tablemembermaster.PADD1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPADD2Null() As Boolean
            Return Me.IsNull(Me.tablemembermaster.PADD2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPADD2Null()
            Me(Me.tablemembermaster.PADD2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPADD3Null() As Boolean
            Return Me.IsNull(Me.tablemembermaster.PADD3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPADD3Null()
            Me(Me.tablemembermaster.PADD3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPCITYNull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.PCITYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPCITYNull()
            Me(Me.tablemembermaster.PCITYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPSTATENull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.PSTATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPSTATENull()
            Me(Me.tablemembermaster.PSTATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPCOUNTRYNull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.PCOUNTRYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPCOUNTRYNull()
            Me(Me.tablemembermaster.PCOUNTRYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPPINNull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.PPINColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPPINNull()
            Me(Me.tablemembermaster.PPINColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPPHONE1Null() As Boolean
            Return Me.IsNull(Me.tablemembermaster.PPHONE1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPPHONE1Null()
            Me(Me.tablemembermaster.PPHONE1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPPHONE2Null() As Boolean
            Return Me.IsNull(Me.tablemembermaster.PPHONE2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPPHONE2Null()
            Me(Me.tablemembermaster.PPHONE2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPCELLNull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.PCELLColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPCELLNull()
            Me(Me.tablemembermaster.PCELLColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPEMAILNull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.PEMAILColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPEMAILNull()
            Me(Me.tablemembermaster.PEMAILColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRAcopystNull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.RAcopystColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRAcopystNull()
            Me(Me.tablemembermaster.RAcopystColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCADD1Null() As Boolean
            Return Me.IsNull(Me.tablemembermaster.CADD1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCADD1Null()
            Me(Me.tablemembermaster.CADD1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCADD2Null() As Boolean
            Return Me.IsNull(Me.tablemembermaster.CADD2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCADD2Null()
            Me(Me.tablemembermaster.CADD2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCADD3Null() As Boolean
            Return Me.IsNull(Me.tablemembermaster.CADD3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCADD3Null()
            Me(Me.tablemembermaster.CADD3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCCITYNull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.CCITYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCCITYNull()
            Me(Me.tablemembermaster.CCITYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCSTATENull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.CSTATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCSTATENull()
            Me(Me.tablemembermaster.CSTATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCCOUNTRYNull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.CCOUNTRYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCCOUNTRYNull()
            Me(Me.tablemembermaster.CCOUNTRYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCPINNull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.CPINColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCPINNull()
            Me(Me.tablemembermaster.CPINColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCPHONE1Null() As Boolean
            Return Me.IsNull(Me.tablemembermaster.CPHONE1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCPHONE1Null()
            Me(Me.tablemembermaster.CPHONE1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCPHONE2Null() As Boolean
            Return Me.IsNull(Me.tablemembermaster.CPHONE2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCPHONE2Null()
            Me(Me.tablemembermaster.CPHONE2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCCELLNull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.CCELLColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCCELLNull()
            Me(Me.tablemembermaster.CCELLColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCEMAILNull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.CEMAILColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCEMAILNull()
            Me(Me.tablemembermaster.CEMAILColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCONTADD1Null() As Boolean
            Return Me.IsNull(Me.tablemembermaster.CONTADD1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCONTADD1Null()
            Me(Me.tablemembermaster.CONTADD1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCONTADD2Null() As Boolean
            Return Me.IsNull(Me.tablemembermaster.CONTADD2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCONTADD2Null()
            Me(Me.tablemembermaster.CONTADD2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCONTADD3Null() As Boolean
            Return Me.IsNull(Me.tablemembermaster.CONTADD3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCONTADD3Null()
            Me(Me.tablemembermaster.CONTADD3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCONTCITYNull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.CONTCITYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCONTCITYNull()
            Me(Me.tablemembermaster.CONTCITYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCONTSTATENull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.CONTSTATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCONTSTATENull()
            Me(Me.tablemembermaster.CONTSTATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCONTCOUNTRYNull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.CONTCOUNTRYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCONTCOUNTRYNull()
            Me(Me.tablemembermaster.CONTCOUNTRYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCONTPINNull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.CONTPINColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCONTPINNull()
            Me(Me.tablemembermaster.CONTPINColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCONTPHONE1Null() As Boolean
            Return Me.IsNull(Me.tablemembermaster.CONTPHONE1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCONTPHONE1Null()
            Me(Me.tablemembermaster.CONTPHONE1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCONTPHONE2Null() As Boolean
            Return Me.IsNull(Me.tablemembermaster.CONTPHONE2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCONTPHONE2Null()
            Me(Me.tablemembermaster.CONTPHONE2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCONTCELLNull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.CONTCELLColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCONTCELLNull()
            Me(Me.tablemembermaster.CONTCELLColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCONTEMAILNull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.CONTEMAILColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCONTEMAILNull()
            Me(Me.tablemembermaster.CONTEMAILColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsEMPTYPENull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.EMPTYPEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetEMPTYPENull()
            Me(Me.tablemembermaster.EMPTYPEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBUSINESSNAMENull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.BUSINESSNAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBUSINESSNAMENull()
            Me(Me.tablemembermaster.BUSINESSNAMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBAcopystNull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.BAcopystColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBAcopystNull()
            Me(Me.tablemembermaster.BAcopystColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsOADD1Null() As Boolean
            Return Me.IsNull(Me.tablemembermaster.OADD1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetOADD1Null()
            Me(Me.tablemembermaster.OADD1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsOADD2Null() As Boolean
            Return Me.IsNull(Me.tablemembermaster.OADD2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetOADD2Null()
            Me(Me.tablemembermaster.OADD2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsOADD3Null() As Boolean
            Return Me.IsNull(Me.tablemembermaster.OADD3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetOADD3Null()
            Me(Me.tablemembermaster.OADD3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsOCITYNull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.OCITYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetOCITYNull()
            Me(Me.tablemembermaster.OCITYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsOSTATENull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.OSTATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetOSTATENull()
            Me(Me.tablemembermaster.OSTATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsOCOUNTRYNull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.OCOUNTRYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetOCOUNTRYNull()
            Me(Me.tablemembermaster.OCOUNTRYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsOPINNull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.OPINColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetOPINNull()
            Me(Me.tablemembermaster.OPINColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsOPHONE1Null() As Boolean
            Return Me.IsNull(Me.tablemembermaster.OPHONE1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetOPHONE1Null()
            Me(Me.tablemembermaster.OPHONE1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsOPHONE2Null() As Boolean
            Return Me.IsNull(Me.tablemembermaster.OPHONE2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetOPHONE2Null()
            Me(Me.tablemembermaster.OPHONE2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDOEPROFESSIONNull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.DOEPROFESSIONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDOEPROFESSIONNull()
            Me(Me.tablemembermaster.DOEPROFESSIONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBUSINESSNATURENull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.BUSINESSNATUREColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBUSINESSNATURENull()
            Me(Me.tablemembermaster.BUSINESSNATUREColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPOSITIONHELDNull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.POSITIONHELDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPOSITIONHELDNull()
            Me(Me.tablemembermaster.POSITIONHELDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSERVICENAMENull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.SERVICENAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSERVICENAMENull()
            Me(Me.tablemembermaster.SERVICENAMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSERVICEYEARNull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.SERVICEYEARColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSERVICEYEARNull()
            Me(Me.tablemembermaster.SERVICEYEARColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPANONull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.PANOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPANONull()
            Me(Me.tablemembermaster.PANOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBBANKERNull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.BBANKERColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBBANKERNull()
            Me(Me.tablemembermaster.BBANKERColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCCNONull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.CCNOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCCNONull()
            Me(Me.tablemembermaster.CCNOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsANNUALINCOMENull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.ANNUALINCOMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetANNUALINCOMENull()
            Me(Me.tablemembermaster.ANNUALINCOMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsUPDUSERIDNull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.UPDUSERIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetUPDUSERIDNull()
            Me(Me.tablemembermaster.UPDUSERIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsUPDDATETIMENull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.UPDDATETIMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetUPDDATETIMENull()
            Me(Me.tablemembermaster.UPDDATETIMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTERMINATIONNull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.TERMINATIONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTERMINATIONNull()
            Me(Me.tablemembermaster.TERMINATIONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTRN_CON_DATENull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.TRN_CON_DATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTRN_CON_DATENull()
            Me(Me.tablemembermaster.TRN_CON_DATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCON_MCODENull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.CON_MCODEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCON_MCODENull()
            Me(Me.tablemembermaster.CON_MCODEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPFAXNull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.PFAXColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPFAXNull()
            Me(Me.tablemembermaster.PFAXColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCFAXNull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.CFAXColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCFAXNull()
            Me(Me.tablemembermaster.CFAXColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCONTFAXNull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.CONTFAXColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCONTFAXNull()
            Me(Me.tablemembermaster.CONTFAXColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsREASONNull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.REASONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetREASONNull()
            Me(Me.tablemembermaster.REASONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPHOTONull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.PHOTOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPHOTONull()
            Me(Me.tablemembermaster.PHOTOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCREDITLIMITNull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.CREDITLIMITColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCREDITLIMITNull()
            Me(Me.tablemembermaster.CREDITLIMITColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsLIMITAMOUNTNull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.LIMITAMOUNTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetLIMITAMOUNTNull()
            Me(Me.tablemembermaster.LIMITAMOUNTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsWEBSITENull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.WEBSITEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetWEBSITENull()
            Me(Me.tablemembermaster.WEBSITEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsImagefileNull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.ImagefileColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetImagefileNull()
            Me(Me.tablemembermaster.ImagefileColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IssizefieldNull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.sizefieldColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetsizefieldNull()
            Me(Me.tablemembermaster.sizefieldColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsVdateNull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.VdateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetVdateNull()
            Me(Me.tablemembermaster.VdateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsVyearNull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.VyearColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetVyearNull()
            Me(Me.tablemembermaster.VyearColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsValiddateNull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.ValiddateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetValiddateNull()
            Me(Me.tablemembermaster.ValiddateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTempTerminationNull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.TempTerminationColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTempTerminationNull()
            Me(Me.tablemembermaster.TempTerminationColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTempTermDateNull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.TempTermDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTempTermDateNull()
            Me(Me.tablemembermaster.TempTermDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTempTermReasonNull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.TempTermReasonColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTempTermReasonNull()
            Me(Me.tablemembermaster.TempTermReasonColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMemberidNull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.MemberidColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMemberidNull()
            Me(Me.tablemembermaster.MemberidColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsEndingDateNull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.EndingDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetEndingDateNull()
            Me(Me.tablemembermaster.EndingDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTotalYearsNull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.TotalYearsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTotalYearsNull()
            Me(Me.tablemembermaster.TotalYearsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCardNoNull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.CardNoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCardNoNull()
            Me(Me.tablemembermaster.CardNoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCardExpDateNull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.CardExpDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCardExpDateNull()
            Me(Me.tablemembermaster.CardExpDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsValidityNull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.ValidityColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetValidityNull()
            Me(Me.tablemembermaster.ValidityColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPeriodNull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.PeriodColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPeriodNull()
            Me(Me.tablemembermaster.PeriodColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCreditcardnoNull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.CreditcardnoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCreditcardnoNull()
            Me(Me.tablemembermaster.CreditcardnoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCreditExpDtNull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.CreditExpDtColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCreditExpDtNull()
            Me(Me.tablemembermaster.CreditExpDtColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTypeNull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.TypeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTypeNull()
            Me(Me.tablemembermaster.TypeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSTATUSDATEFROMNull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.STATUSDATEFROMColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSTATUSDATEFROMNull()
            Me(Me.tablemembermaster.STATUSDATEFROMColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSTATUSDATETONull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.STATUSDATETOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSTATUSDATETONull()
            Me(Me.tablemembermaster.STATUSDATETOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCurentStatusNull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.CurentStatusColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCurentStatusNull()
            Me(Me.tablemembermaster.CurentStatusColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFirstNameNull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.FirstNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFirstNameNull()
            Me(Me.tablemembermaster.FirstNameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMiddleNameNull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.MiddleNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMiddleNameNull()
            Me(Me.tablemembermaster.MiddleNameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSurnameNull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.SurnameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSurnameNull()
            Me(Me.tablemembermaster.SurnameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Is_AliasNull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.AliasColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Set_AliasNull()
            Me(Me.tablemembermaster.AliasColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPrefixNull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.PrefixColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPrefixNull()
            Me(Me.tablemembermaster.PrefixColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBillTypeNull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.BillTypeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBillTypeNull()
            Me(Me.tablemembermaster.BillTypeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNationalityNull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.NationalityColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNationalityNull()
            Me(Me.tablemembermaster.NationalityColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNationalityAtbirthNull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.NationalityAtbirthColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNationalityAtbirthNull()
            Me(Me.tablemembermaster.NationalityAtbirthColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBillbasisNull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.BillbasisColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBillbasisNull()
            Me(Me.tablemembermaster.BillbasisColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBillHeadNull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.BillHeadColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBillHeadNull()
            Me(Me.tablemembermaster.BillHeadColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsGDRLockerNull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.GDRLockerColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetGDRLockerNull()
            Me(Me.tablemembermaster.GDRLockerColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsLDRLockerNull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.LDRLockerColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetLDRLockerNull()
            Me(Me.tablemembermaster.LDRLockerColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMembershipToNull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.MembershipToColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMembershipToNull()
            Me(Me.tablemembermaster.MembershipToColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IssalutNull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.salutColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetsalutNull()
            Me(Me.tablemembermaster.salutColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsEntranceFeeNull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.EntranceFeeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetEntranceFeeNull()
            Me(Me.tablemembermaster.EntranceFeeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDevelopmentFeeNull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.DevelopmentFeeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDevelopmentFeeNull()
            Me(Me.tablemembermaster.DevelopmentFeeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCriditNumberNull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.CriditNumberColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCriditNumberNull()
            Me(Me.tablemembermaster.CriditNumberColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSecurityDepositNull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.SecurityDepositColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSecurityDepositNull()
            Me(Me.tablemembermaster.SecurityDepositColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPlaceOfBirthNull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.PlaceOfBirthColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPlaceOfBirthNull()
            Me(Me.tablemembermaster.PlaceOfBirthColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCountryOfBirthNull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.CountryOfBirthColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCountryOfBirthNull()
            Me(Me.tablemembermaster.CountryOfBirthColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsLastArrivalInCalNull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.LastArrivalInCalColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetLastArrivalInCalNull()
            Me(Me.tablemembermaster.LastArrivalInCalColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPeriodOfStay_yearNull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.PeriodOfStay_yearColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPeriodOfStay_yearNull()
            Me(Me.tablemembermaster.PeriodOfStay_yearColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPeriodOfStay_MonthNull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.PeriodOfStay_MonthColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPeriodOfStay_MonthNull()
            Me(Me.tablemembermaster.PeriodOfStay_MonthColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPreviouslyProposedNull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.PreviouslyProposedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPreviouslyProposedNull()
            Me(Me.tablemembermaster.PreviouslyProposedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNoOfTimesProposedNull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.NoOfTimesProposedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNoOfTimesProposedNull()
            Me(Me.tablemembermaster.NoOfTimesProposedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDateOfProposalNull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.DateOfProposalColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDateOfProposalNull()
            Me(Me.tablemembermaster.DateOfProposalColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsResultOfProposalNull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.ResultOfProposalColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetResultOfProposalNull()
            Me(Me.tablemembermaster.ResultOfProposalColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsElectedNull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.ElectedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetElectedNull()
            Me(Me.tablemembermaster.ElectedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFatherNameNull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.FatherNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFatherNameNull()
            Me(Me.tablemembermaster.FatherNameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDOBfatherNull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.DOBfatherColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDOBfatherNull()
            Me(Me.tablemembermaster.DOBfatherColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsWifeDOBNull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.WifeDOBColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetWifeDOBNull()
            Me(Me.tablemembermaster.WifeDOBColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMaidenNameWifeNull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.MaidenNameWifeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMaidenNameWifeNull()
            Me(Me.tablemembermaster.MaidenNameWifeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNationalityWifeNull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.NationalityWifeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNationalityWifeNull()
            Me(Me.tablemembermaster.NationalityWifeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsWifesFatherNameNull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.WifesFatherNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetWifesFatherNameNull()
            Me(Me.tablemembermaster.WifesFatherNameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsWifeFatherDOBNull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.WifeFatherDOBColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetWifeFatherDOBNull()
            Me(Me.tablemembermaster.WifeFatherDOBColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsApplNoNull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.ApplNoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetApplNoNull()
            Me(Me.tablemembermaster.ApplNoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsApplDateNull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.ApplDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetApplDateNull()
            Me(Me.tablemembermaster.ApplDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCorporatestNull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.CorporatestColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCorporatestNull()
            Me(Me.tablemembermaster.CorporatestColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCorporateCodeNull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.CorporateCodeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCorporateCodeNull()
            Me(Me.tablemembermaster.CorporateCodeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCompNameNull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.CompNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCompNameNull()
            Me(Me.tablemembermaster.CompNameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDesignationNull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.DesignationColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDesignationNull()
            Me(Me.tablemembermaster.DesignationColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsProfessionInfoNull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.ProfessionInfoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetProfessionInfoNull()
            Me(Me.tablemembermaster.ProfessionInfoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBuisnessInfoNull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.BuisnessInfoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBuisnessInfoNull()
            Me(Me.tablemembermaster.BuisnessInfoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsProductsNull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.ProductsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetProductsNull()
            Me(Me.tablemembermaster.ProductsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAgentsDealersNull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.AgentsDealersColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAgentsDealersNull()
            Me(Me.tablemembermaster.AgentsDealersColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsESTDdateNull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.ESTDdateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetESTDdateNull()
            Me(Me.tablemembermaster.ESTDdateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNoOfEmpNull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.NoOfEmpColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNoOfEmpNull()
            Me(Me.tablemembermaster.NoOfEmpColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTurnoverNull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.TurnoverColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTurnoverNull()
            Me(Me.tablemembermaster.TurnoverColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsClientNull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.ClientColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetClientNull()
            Me(Me.tablemembermaster.ClientColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAppliedButNull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.AppliedButColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAppliedButNull()
            Me(Me.tablemembermaster.AppliedButColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPositionInChamberNull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.PositionInChamberColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPositionInChamberNull()
            Me(Me.tablemembermaster.PositionInChamberColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsQulificationstatusNull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.QulificationstatusColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetQulificationstatusNull()
            Me(Me.tablemembermaster.QulificationstatusColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsQualification1Null() As Boolean
            Return Me.IsNull(Me.tablemembermaster.Qualification1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetQualification1Null()
            Me(Me.tablemembermaster.Qualification1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDetails1Null() As Boolean
            Return Me.IsNull(Me.tablemembermaster.Details1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDetails1Null()
            Me(Me.tablemembermaster.Details1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsYearOfPassing1Null() As Boolean
            Return Me.IsNull(Me.tablemembermaster.YearOfPassing1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetYearOfPassing1Null()
            Me(Me.tablemembermaster.YearOfPassing1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsInstitute1Null() As Boolean
            Return Me.IsNull(Me.tablemembermaster.Institute1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetInstitute1Null()
            Me(Me.tablemembermaster.Institute1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDivision1Null() As Boolean
            Return Me.IsNull(Me.tablemembermaster.Division1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDivision1Null()
            Me(Me.tablemembermaster.Division1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsQualification2Null() As Boolean
            Return Me.IsNull(Me.tablemembermaster.Qualification2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetQualification2Null()
            Me(Me.tablemembermaster.Qualification2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDetails2Null() As Boolean
            Return Me.IsNull(Me.tablemembermaster.Details2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDetails2Null()
            Me(Me.tablemembermaster.Details2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsYearOfPassing2Null() As Boolean
            Return Me.IsNull(Me.tablemembermaster.YearOfPassing2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetYearOfPassing2Null()
            Me(Me.tablemembermaster.YearOfPassing2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsInstitute2Null() As Boolean
            Return Me.IsNull(Me.tablemembermaster.Institute2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetInstitute2Null()
            Me(Me.tablemembermaster.Institute2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDivision2Null() As Boolean
            Return Me.IsNull(Me.tablemembermaster.Division2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDivision2Null()
            Me(Me.tablemembermaster.Division2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsQualification3Null() As Boolean
            Return Me.IsNull(Me.tablemembermaster.Qualification3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetQualification3Null()
            Me(Me.tablemembermaster.Qualification3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDetails3Null() As Boolean
            Return Me.IsNull(Me.tablemembermaster.Details3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDetails3Null()
            Me(Me.tablemembermaster.Details3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsYearOfPassing3Null() As Boolean
            Return Me.IsNull(Me.tablemembermaster.YearOfPassing3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetYearOfPassing3Null()
            Me(Me.tablemembermaster.YearOfPassing3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsInstitute3Null() As Boolean
            Return Me.IsNull(Me.tablemembermaster.Institute3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetInstitute3Null()
            Me(Me.tablemembermaster.Institute3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDivision3Null() As Boolean
            Return Me.IsNull(Me.tablemembermaster.Division3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDivision3Null()
            Me(Me.tablemembermaster.Division3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IssportstatusNull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.sportstatusColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetsportstatusNull()
            Me(Me.tablemembermaster.sportstatusColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsGameType1Null() As Boolean
            Return Me.IsNull(Me.tablemembermaster.GameType1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetGameType1Null()
            Me(Me.tablemembermaster.GameType1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNameOfGame1Null() As Boolean
            Return Me.IsNull(Me.tablemembermaster.NameOfGame1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNameOfGame1Null()
            Me(Me.tablemembermaster.NameOfGame1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDescription1Null() As Boolean
            Return Me.IsNull(Me.tablemembermaster.Description1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDescription1Null()
            Me(Me.tablemembermaster.Description1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsGameType2Null() As Boolean
            Return Me.IsNull(Me.tablemembermaster.GameType2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetGameType2Null()
            Me(Me.tablemembermaster.GameType2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNameofGame2Null() As Boolean
            Return Me.IsNull(Me.tablemembermaster.NameofGame2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNameofGame2Null()
            Me(Me.tablemembermaster.NameofGame2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDescription2Null() As Boolean
            Return Me.IsNull(Me.tablemembermaster.Description2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDescription2Null()
            Me(Me.tablemembermaster.Description2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsGameType3Null() As Boolean
            Return Me.IsNull(Me.tablemembermaster.GameType3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetGameType3Null()
            Me(Me.tablemembermaster.GameType3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNameOfGame3Null() As Boolean
            Return Me.IsNull(Me.tablemembermaster.NameOfGame3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNameOfGame3Null()
            Me(Me.tablemembermaster.NameOfGame3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDescription3Null() As Boolean
            Return Me.IsNull(Me.tablemembermaster.Description3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDescription3Null()
            Me(Me.tablemembermaster.Description3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsChildstatusNull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.ChildstatusColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetChildstatusNull()
            Me(Me.tablemembermaster.ChildstatusColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsChildName1Null() As Boolean
            Return Me.IsNull(Me.tablemembermaster.ChildName1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetChildName1Null()
            Me(Me.tablemembermaster.ChildName1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsChildDob1Null() As Boolean
            Return Me.IsNull(Me.tablemembermaster.ChildDob1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetChildDob1Null()
            Me(Me.tablemembermaster.ChildDob1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsChildSex1Null() As Boolean
            Return Me.IsNull(Me.tablemembermaster.ChildSex1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetChildSex1Null()
            Me(Me.tablemembermaster.ChildSex1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsChildExpairy1Null() As Boolean
            Return Me.IsNull(Me.tablemembermaster.ChildExpairy1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetChildExpairy1Null()
            Me(Me.tablemembermaster.ChildExpairy1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsChildName2Null() As Boolean
            Return Me.IsNull(Me.tablemembermaster.ChildName2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetChildName2Null()
            Me(Me.tablemembermaster.ChildName2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsChildDob2Null() As Boolean
            Return Me.IsNull(Me.tablemembermaster.ChildDob2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetChildDob2Null()
            Me(Me.tablemembermaster.ChildDob2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsChildSex2Null() As Boolean
            Return Me.IsNull(Me.tablemembermaster.ChildSex2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetChildSex2Null()
            Me(Me.tablemembermaster.ChildSex2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsChildExpairy2Null() As Boolean
            Return Me.IsNull(Me.tablemembermaster.ChildExpairy2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetChildExpairy2Null()
            Me(Me.tablemembermaster.ChildExpairy2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsChildName3Null() As Boolean
            Return Me.IsNull(Me.tablemembermaster.ChildName3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetChildName3Null()
            Me(Me.tablemembermaster.ChildName3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsChildDob3Null() As Boolean
            Return Me.IsNull(Me.tablemembermaster.ChildDob3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetChildDob3Null()
            Me(Me.tablemembermaster.ChildDob3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsChildSex3Null() As Boolean
            Return Me.IsNull(Me.tablemembermaster.ChildSex3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetChildSex3Null()
            Me(Me.tablemembermaster.ChildSex3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IschildExpairy3Null() As Boolean
            Return Me.IsNull(Me.tablemembermaster.childExpairy3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetchildExpairy3Null()
            Me(Me.tablemembermaster.childExpairy3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsClubstatusNull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.ClubstatusColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetClubstatusNull()
            Me(Me.tablemembermaster.ClubstatusColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsOtherClubName1Null() As Boolean
            Return Me.IsNull(Me.tablemembermaster.OtherClubName1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetOtherClubName1Null()
            Me(Me.tablemembermaster.OtherClubName1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsOCAddress1Null() As Boolean
            Return Me.IsNull(Me.tablemembermaster.OCAddress1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetOCAddress1Null()
            Me(Me.tablemembermaster.OCAddress1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsOCStatus1Null() As Boolean
            Return Me.IsNull(Me.tablemembermaster.OCStatus1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetOCStatus1Null()
            Me(Me.tablemembermaster.OCStatus1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsOtherClubName2Null() As Boolean
            Return Me.IsNull(Me.tablemembermaster.OtherClubName2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetOtherClubName2Null()
            Me(Me.tablemembermaster.OtherClubName2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsOCAddress2Null() As Boolean
            Return Me.IsNull(Me.tablemembermaster.OCAddress2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetOCAddress2Null()
            Me(Me.tablemembermaster.OCAddress2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsOCStatus2Null() As Boolean
            Return Me.IsNull(Me.tablemembermaster.OCStatus2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetOCStatus2Null()
            Me(Me.tablemembermaster.OCStatus2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsOtherClubname3Null() As Boolean
            Return Me.IsNull(Me.tablemembermaster.OtherClubname3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetOtherClubname3Null()
            Me(Me.tablemembermaster.OtherClubname3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsOCAddress3Null() As Boolean
            Return Me.IsNull(Me.tablemembermaster.OCAddress3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetOCAddress3Null()
            Me(Me.tablemembermaster.OCAddress3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsOCStatausNull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.OCStatausColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetOCStatausNull()
            Me(Me.tablemembermaster.OCStatausColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsadduserNull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.adduserColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetadduserNull()
            Me(Me.tablemembermaster.adduserColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsadddateNull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.adddateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetadddateNull()
            Me(Me.tablemembermaster.adddateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsfreezeNull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.freezeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetfreezeNull()
            Me(Me.tablemembermaster.freezeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRelativestatusNull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.RelativestatusColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRelativestatusNull()
            Me(Me.tablemembermaster.RelativestatusColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRelativeName1Null() As Boolean
            Return Me.IsNull(Me.tablemembermaster.RelativeName1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRelativeName1Null()
            Me(Me.tablemembermaster.RelativeName1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRelation1Null() As Boolean
            Return Me.IsNull(Me.tablemembermaster.Relation1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRelation1Null()
            Me(Me.tablemembermaster.Relation1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isdateofbirth1Null() As Boolean
            Return Me.IsNull(Me.tablemembermaster.dateofbirth1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setdateofbirth1Null()
            Me(Me.tablemembermaster.dateofbirth1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRelativeage1Null() As Boolean
            Return Me.IsNull(Me.tablemembermaster.Relativeage1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRelativeage1Null()
            Me(Me.tablemembermaster.Relativeage1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRelativeSex1Null() As Boolean
            Return Me.IsNull(Me.tablemembermaster.RelativeSex1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRelativeSex1Null()
            Me(Me.tablemembermaster.RelativeSex1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRelativeaddress1Null() As Boolean
            Return Me.IsNull(Me.tablemembermaster.Relativeaddress1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRelativeaddress1Null()
            Me(Me.tablemembermaster.Relativeaddress1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRelativeName2Null() As Boolean
            Return Me.IsNull(Me.tablemembermaster.RelativeName2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRelativeName2Null()
            Me(Me.tablemembermaster.RelativeName2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRelation2Null() As Boolean
            Return Me.IsNull(Me.tablemembermaster.Relation2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRelation2Null()
            Me(Me.tablemembermaster.Relation2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isdateofbirth2Null() As Boolean
            Return Me.IsNull(Me.tablemembermaster.dateofbirth2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setdateofbirth2Null()
            Me(Me.tablemembermaster.dateofbirth2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRelativeage2Null() As Boolean
            Return Me.IsNull(Me.tablemembermaster.Relativeage2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRelativeage2Null()
            Me(Me.tablemembermaster.Relativeage2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRelativeSex2Null() As Boolean
            Return Me.IsNull(Me.tablemembermaster.RelativeSex2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRelativeSex2Null()
            Me(Me.tablemembermaster.RelativeSex2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRelativeaddress2Null() As Boolean
            Return Me.IsNull(Me.tablemembermaster.Relativeaddress2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRelativeaddress2Null()
            Me(Me.tablemembermaster.Relativeaddress2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRelativeName3Null() As Boolean
            Return Me.IsNull(Me.tablemembermaster.RelativeName3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRelativeName3Null()
            Me(Me.tablemembermaster.RelativeName3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRelation3Null() As Boolean
            Return Me.IsNull(Me.tablemembermaster.Relation3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRelation3Null()
            Me(Me.tablemembermaster.Relation3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isdateofbirth3Null() As Boolean
            Return Me.IsNull(Me.tablemembermaster.dateofbirth3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setdateofbirth3Null()
            Me(Me.tablemembermaster.dateofbirth3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRelativeage3Null() As Boolean
            Return Me.IsNull(Me.tablemembermaster.Relativeage3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRelativeage3Null()
            Me(Me.tablemembermaster.Relativeage3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRelativeSex3Null() As Boolean
            Return Me.IsNull(Me.tablemembermaster.RelativeSex3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRelativeSex3Null()
            Me(Me.tablemembermaster.RelativeSex3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRelativeaddress3Null() As Boolean
            Return Me.IsNull(Me.tablemembermaster.Relativeaddress3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRelativeaddress3Null()
            Me(Me.tablemembermaster.Relativeaddress3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsreferentialstNull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.referentialstColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetreferentialstNull()
            Me(Me.tablemembermaster.referentialstColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Ismem_code1Null() As Boolean
            Return Me.IsNull(Me.tablemembermaster.mem_code1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setmem_code1Null()
            Me(Me.tablemembermaster.mem_code1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Ismem_name1Null() As Boolean
            Return Me.IsNull(Me.tablemembermaster.mem_name1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setmem_name1Null()
            Me(Me.tablemembermaster.mem_name1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isrefmem_date1Null() As Boolean
            Return Me.IsNull(Me.tablemembermaster.refmem_date1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setrefmem_date1Null()
            Me(Me.tablemembermaster.refmem_date1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isdeleted1Null() As Boolean
            Return Me.IsNull(Me.tablemembermaster.deleted1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setdeleted1Null()
            Me(Me.tablemembermaster.deleted1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Ismem_code2Null() As Boolean
            Return Me.IsNull(Me.tablemembermaster.mem_code2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setmem_code2Null()
            Me(Me.tablemembermaster.mem_code2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Ismem_name2Null() As Boolean
            Return Me.IsNull(Me.tablemembermaster.mem_name2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setmem_name2Null()
            Me(Me.tablemembermaster.mem_name2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isrefmem_date2Null() As Boolean
            Return Me.IsNull(Me.tablemembermaster.refmem_date2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setrefmem_date2Null()
            Me(Me.tablemembermaster.refmem_date2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isdeleted2Null() As Boolean
            Return Me.IsNull(Me.tablemembermaster.deleted2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setdeleted2Null()
            Me(Me.tablemembermaster.deleted2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Ismem_code3Null() As Boolean
            Return Me.IsNull(Me.tablemembermaster.mem_code3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setmem_code3Null()
            Me(Me.tablemembermaster.mem_code3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Ismem_name3Null() As Boolean
            Return Me.IsNull(Me.tablemembermaster.mem_name3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setmem_name3Null()
            Me(Me.tablemembermaster.mem_name3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isrefmem_date3Null() As Boolean
            Return Me.IsNull(Me.tablemembermaster.refmem_date3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setrefmem_date3Null()
            Me(Me.tablemembermaster.refmem_date3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isdeleted3Null() As Boolean
            Return Me.IsNull(Me.tablemembermaster.deleted3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setdeleted3Null()
            Me(Me.tablemembermaster.deleted3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsentrancefeestNull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.entrancefeestColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetentrancefeestNull()
            Me(Me.tablemembermaster.entrancefeestColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isreceiptno1Null() As Boolean
            Return Me.IsNull(Me.tablemembermaster.receiptno1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setreceiptno1Null()
            Me(Me.tablemembermaster.receiptno1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isstartdate1Null() As Boolean
            Return Me.IsNull(Me.tablemembermaster.startdate1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setstartdate1Null()
            Me(Me.tablemembermaster.startdate1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isamount1Null() As Boolean
            Return Me.IsNull(Me.tablemembermaster.amount1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setamount1Null()
            Me(Me.tablemembermaster.amount1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isreceiptno2Null() As Boolean
            Return Me.IsNull(Me.tablemembermaster.receiptno2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setreceiptno2Null()
            Me(Me.tablemembermaster.receiptno2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isstartdate2Null() As Boolean
            Return Me.IsNull(Me.tablemembermaster.startdate2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setstartdate2Null()
            Me(Me.tablemembermaster.startdate2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isamount2Null() As Boolean
            Return Me.IsNull(Me.tablemembermaster.amount2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setamount2Null()
            Me(Me.tablemembermaster.amount2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isreceiptno3Null() As Boolean
            Return Me.IsNull(Me.tablemembermaster.receiptno3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setreceiptno3Null()
            Me(Me.tablemembermaster.receiptno3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isstartdate3Null() As Boolean
            Return Me.IsNull(Me.tablemembermaster.startdate3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setstartdate3Null()
            Me(Me.tablemembermaster.startdate3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isamount3Null() As Boolean
            Return Me.IsNull(Me.tablemembermaster.amount3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setamount3Null()
            Me(Me.tablemembermaster.amount3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsOLDNull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.OLDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetOLDNull()
            Me(Me.tablemembermaster.OLDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCardAmtNull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.CardAmtColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCardAmtNull()
            Me(Me.tablemembermaster.CardAmtColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMINIMUMUSAGENull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.MINIMUMUSAGEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMINIMUMUSAGENull()
            Me(Me.tablemembermaster.MINIMUMUSAGEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCREDITNONull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.CREDITNOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCREDITNONull()
            Me(Me.tablemembermaster.CREDITNOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSPOUSEMOBILENull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.SPOUSEMOBILEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSPOUSEMOBILENull()
            Me(Me.tablemembermaster.SPOUSEMOBILEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsP_NONull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.P_NOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetP_NONull()
            Me(Me.tablemembermaster.P_NOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMEM_CODENull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.MEM_CODEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMEM_CODENull()
            Me(Me.tablemembermaster.MEM_CODEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsdepnosNull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.depnosColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetdepnosNull()
            Me(Me.tablemembermaster.depnosColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Ismb_oprsopNull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.mb_oprsopColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setmb_oprsopNull()
            Me(Me.tablemembermaster.mb_oprsopColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Ism_payrollNull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.m_payrollColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setm_payrollNull()
            Me(Me.tablemembermaster.m_payrollColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Islib_memNull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.lib_memColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setlib_memNull()
            Me(Me.tablemembermaster.lib_memColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IslibbillingbasisNull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.libbillingbasisColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetlibbillingbasisNull()
            Me(Me.tablemembermaster.libbillingbasisColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsmcodecNull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.mcodecColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetmcodecNull()
            Me(Me.tablemembermaster.mcodecColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsmcodenNull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.mcodenColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetmcodenNull()
            Me(Me.tablemembermaster.mcodenColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Ismcode1Null() As Boolean
            Return Me.IsNull(Me.tablemembermaster.mcode1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setmcode1Null()
            Me(Me.tablemembermaster.mcode1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsdowNull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.dowColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetdowNull()
            Me(Me.tablemembermaster.dowColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IshplockerNull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.hplockerColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SethplockerNull()
            Me(Me.tablemembermaster.hplockerColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsGLCODENull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.GLCODEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetGLCODENull()
            Me(Me.tablemembermaster.GLCODEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IstermletterNull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.termletterColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SettermletterNull()
            Me(Me.tablemembermaster.termletterColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMEMBERTYPENull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.MEMBERTYPEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMEMBERTYPENull()
            Me(Me.tablemembermaster.MEMBERTYPEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMEMIMAGENull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.MEMIMAGEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMEMIMAGENull()
            Me(Me.tablemembermaster.MEMIMAGEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMEMIMAGESIGNNull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.MEMIMAGESIGNColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMEMIMAGESIGNNull()
            Me(Me.tablemembermaster.MEMIMAGESIGNColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSDOBNull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.SDOBColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSDOBNull()
            Me(Me.tablemembermaster.SDOBColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCHILDFDOB1Null() As Boolean
            Return Me.IsNull(Me.tablemembermaster.CHILDFDOB1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCHILDFDOB1Null()
            Me(Me.tablemembermaster.CHILDFDOB1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPADD4Null() As Boolean
            Return Me.IsNull(Me.tablemembermaster.PADD4Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPADD4Null()
            Me(Me.tablemembermaster.PADD4Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCADD4Null() As Boolean
            Return Me.IsNull(Me.tablemembermaster.CADD4Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCADD4Null()
            Me(Me.tablemembermaster.CADD4Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsEMAIL_FLAGNull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.EMAIL_FLAGColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetEMAIL_FLAGNull()
            Me(Me.tablemembermaster.EMAIL_FLAGColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsEBILLNull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.EBILLColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetEBILLNull()
            Me(Me.tablemembermaster.EBILLColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsWEDDING_DATENull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.WEDDING_DATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetWEDDING_DATENull()
            Me(Me.tablemembermaster.WEDDING_DATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTAXFLAGNull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.TAXFLAGColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTAXFLAGNull()
            Me(Me.tablemembermaster.TAXFLAGColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMLEDGERNAMENull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.MLEDGERNAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMLEDGERNAMENull()
            Me(Me.tablemembermaster.MLEDGERNAMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBACOPYST1Null() As Boolean
            Return Me.IsNull(Me.tablemembermaster.BACOPYST1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBACOPYST1Null()
            Me(Me.tablemembermaster.BACOPYST1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRACOPYST1Null() As Boolean
            Return Me.IsNull(Me.tablemembermaster.RACOPYST1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRACOPYST1Null()
            Me(Me.tablemembermaster.RACOPYST1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMSORDERNONull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.MSORDERNOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMSORDERNONull()
            Me(Me.tablemembermaster.MSORDERNOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPREFIXMCODENull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.PREFIXMCODEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPREFIXMCODENull()
            Me(Me.tablemembermaster.PREFIXMCODEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPACOPYST1Null() As Boolean
            Return Me.IsNull(Me.tablemembermaster.PACOPYST1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPACOPYST1Null()
            Me(Me.tablemembermaster.PACOPYST1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsOCELLNull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.OCELLColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetOCELLNull()
            Me(Me.tablemembermaster.OCELLColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsOEMAILNull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.OEMAILColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetOEMAILNull()
            Me(Me.tablemembermaster.OEMAILColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsICNONull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.ICNOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetICNONull()
            Me(Me.tablemembermaster.ICNOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsUNITNONull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.UNITNOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetUNITNONull()
            Me(Me.tablemembermaster.UNITNOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDATEOFRELEASENull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.DATEOFRELEASEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDATEOFRELEASENull()
            Me(Me.tablemembermaster.DATEOFRELEASEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDATEOFCREATIONNull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.DATEOFCREATIONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDATEOFCREATIONNull()
            Me(Me.tablemembermaster.DATEOFCREATIONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMDESCRIPTIONNull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.MDESCRIPTIONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMDESCRIPTIONNull()
            Me(Me.tablemembermaster.MDESCRIPTIONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRIDCARDNONull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.RIDCARDNOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRIDCARDNONull()
            Me(Me.tablemembermaster.RIDCARDNOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsARMSERVICENull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.ARMSERVICEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetARMSERVICENull()
            Me(Me.tablemembermaster.ARMSERVICEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsWONull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.WOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetWONull()
            Me(Me.tablemembermaster.WOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNOOFDEPENDENCIESNull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.NOOFDEPENDENCIESColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNOOFDEPENDENCIESNull()
            Me(Me.tablemembermaster.NOOFDEPENDENCIESColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRBYMEMBERNONull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.RBYMEMBERNOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRBYMEMBERNONull()
            Me(Me.tablemembermaster.RBYMEMBERNOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRBYMEMBERNO2Null() As Boolean
            Return Me.IsNull(Me.tablemembermaster.RBYMEMBERNO2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRBYMEMBERNO2Null()
            Me(Me.tablemembermaster.RBYMEMBERNO2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRBYNAMENull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.RBYNAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRBYNAMENull()
            Me(Me.tablemembermaster.RBYNAMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRBYMEMBERNAME2Null() As Boolean
            Return Me.IsNull(Me.tablemembermaster.RBYMEMBERNAME2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRBYMEMBERNAME2Null()
            Me(Me.tablemembermaster.RBYMEMBERNAME2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRANKNONull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.RANKNOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRANKNONull()
            Me(Me.tablemembermaster.RANKNOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDATEOFCOMMISSIONNull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.DATEOFCOMMISSIONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDATEOFCOMMISSIONNull()
            Me(Me.tablemembermaster.DATEOFCOMMISSIONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNOOFTIMESSECONDEDNull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.NOOFTIMESSECONDEDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNOOFTIMESSECONDEDNull()
            Me(Me.tablemembermaster.NOOFTIMESSECONDEDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDATEOFSECONDEDNull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.DATEOFSECONDEDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDATEOFSECONDEDNull()
            Me(Me.tablemembermaster.DATEOFSECONDEDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPLOTNONull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.PLOTNOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPLOTNONull()
            Me(Me.tablemembermaster.PLOTNOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSOCIETYNONull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.SOCIETYNOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSOCIETYNONull()
            Me(Me.tablemembermaster.SOCIETYNOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCREDITSTOPFLAGNull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.CREDITSTOPFLAGColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCREDITSTOPFLAGNull()
            Me(Me.tablemembermaster.CREDITSTOPFLAGColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCREDITSTOPDATENull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.CREDITSTOPDATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCREDITSTOPDATENull()
            Me(Me.tablemembermaster.CREDITSTOPDATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBTGROUPNull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.BTGROUPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBTGROUPNull()
            Me(Me.tablemembermaster.BTGROUPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsANNIVERSARYDATENull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.ANNIVERSARYDATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetANNIVERSARYDATENull()
            Me(Me.tablemembermaster.ANNIVERSARYDATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsARMYNONull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.ARMYNOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetARMYNONull()
            Me(Me.tablemembermaster.ARMYNOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRANKNAMENull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.RANKNAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRANKNAMENull()
            Me(Me.tablemembermaster.RANKNAMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBARCODENONull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.BARCODENOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBARCODENONull()
            Me(Me.tablemembermaster.BARCODENOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDEPENDENTIDNull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.DEPENDENTIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDEPENDENTIDNull()
            Me(Me.tablemembermaster.DEPENDENTIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSPOUSEIMAGENull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.SPOUSEIMAGEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSPOUSEIMAGENull()
            Me(Me.tablemembermaster.SPOUSEIMAGEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsF_MCODENull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.F_MCODEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetF_MCODENull()
            Me(Me.tablemembermaster.F_MCODEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNOMINEENull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.NOMINEEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNOMINEENull()
            Me(Me.tablemembermaster.NOMINEEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsENC_SMARTCARDNONull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.ENC_SMARTCARDNOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetENC_SMARTCARDNONull()
            Me(Me.tablemembermaster.ENC_SMARTCARDNOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMTORDERNONull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.MTORDERNOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMTORDERNONull()
            Me(Me.tablemembermaster.MTORDERNOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMARITAL_STATUSNull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.MARITAL_STATUSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMARITAL_STATUSNull()
            Me(Me.tablemembermaster.MARITAL_STATUSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsoldmcodeNull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.oldmcodeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetoldmcodeNull()
            Me(Me.tablemembermaster.oldmcodeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsnewmcodeNull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.newmcodeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetnewmcodeNull()
            Me(Me.tablemembermaster.newmcodeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMemberdesigncodeNull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.MemberdesigncodeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMemberdesigncodeNull()
            Me(Me.tablemembermaster.MemberdesigncodeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCitycodeNull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.CitycodeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCitycodeNull()
            Me(Me.tablemembermaster.CitycodeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsStatecodeNull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.StatecodeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetStatecodeNull()
            Me(Me.tablemembermaster.StatecodeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSaluatationCodeNull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.SaluatationCodeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSaluatationCodeNull()
            Me(Me.tablemembermaster.SaluatationCodeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsReligionCodeNull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.ReligionCodeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetReligionCodeNull()
            Me(Me.tablemembermaster.ReligionCodeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCountrycodeNull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.CountrycodeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCountrycodeNull()
            Me(Me.tablemembermaster.CountrycodeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMemberMaritialcodeNull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.MemberMaritialcodeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMemberMaritialcodeNull()
            Me(Me.tablemembermaster.MemberMaritialcodeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsspouseprefixNull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.spouseprefixColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetspouseprefixNull()
            Me(Me.tablemembermaster.spouseprefixColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSpouseFreezeNull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.SpouseFreezeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSpouseFreezeNull()
            Me(Me.tablemembermaster.SpouseFreezeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMEMLIMITNull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.MEMLIMITColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMEMLIMITNull()
            Me(Me.tablemembermaster.MEMLIMITColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCATLIMITNull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.CATLIMITColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCATLIMITNull()
            Me(Me.tablemembermaster.CATLIMITColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsREPLACEMENTNull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.REPLACEMENTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetREPLACEMENTNull()
            Me(Me.tablemembermaster.REPLACEMENTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRNONull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.RNOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRNONull()
            Me(Me.tablemembermaster.RNOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsspouseimagesignNull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.spouseimagesignColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetspouseimagesignNull()
            Me(Me.tablemembermaster.spouseimagesignColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsreligionNull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.religionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetreligionNull()
            Me(Me.tablemembermaster.religionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsADD_DATENull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.ADD_DATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetADD_DATENull()
            Me(Me.tablemembermaster.ADD_DATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsADD_USERNull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.ADD_USERColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetADD_USERNull()
            Me(Me.tablemembermaster.ADD_USERColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsUPD_USERNull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.UPD_USERColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetUPD_USERNull()
            Me(Me.tablemembermaster.UPD_USERColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsUPD_DATENull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.UPD_DATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetUPD_DATENull()
            Me(Me.tablemembermaster.UPD_DATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsVOIDNull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.VOIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetVOIDNull()
            Me(Me.tablemembermaster.VOIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsVOIDUSERNull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.VOIDUSERColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetVOIDUSERNull()
            Me(Me.tablemembermaster.VOIDUSERColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsVOIDDATENull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.VOIDDATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetVOIDDATENull()
            Me(Me.tablemembermaster.VOIDDATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAUTHORISEDNull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.AUTHORISEDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAUTHORISEDNull()
            Me(Me.tablemembermaster.AUTHORISEDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAUTHORISE_LEVEL1Null() As Boolean
            Return Me.IsNull(Me.tablemembermaster.AUTHORISE_LEVEL1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAUTHORISE_LEVEL1Null()
            Me(Me.tablemembermaster.AUTHORISE_LEVEL1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAUTHORISE_USER1Null() As Boolean
            Return Me.IsNull(Me.tablemembermaster.AUTHORISE_USER1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAUTHORISE_USER1Null()
            Me(Me.tablemembermaster.AUTHORISE_USER1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAUTHORISE_DATE1Null() As Boolean
            Return Me.IsNull(Me.tablemembermaster.AUTHORISE_DATE1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAUTHORISE_DATE1Null()
            Me(Me.tablemembermaster.AUTHORISE_DATE1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAUTHORISE_LEVEL2Null() As Boolean
            Return Me.IsNull(Me.tablemembermaster.AUTHORISE_LEVEL2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAUTHORISE_LEVEL2Null()
            Me(Me.tablemembermaster.AUTHORISE_LEVEL2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAUTHORISE_USER2Null() As Boolean
            Return Me.IsNull(Me.tablemembermaster.AUTHORISE_USER2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAUTHORISE_USER2Null()
            Me(Me.tablemembermaster.AUTHORISE_USER2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAUTHORISE_DATE2Null() As Boolean
            Return Me.IsNull(Me.tablemembermaster.AUTHORISE_DATE2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAUTHORISE_DATE2Null()
            Me(Me.tablemembermaster.AUTHORISE_DATE2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAUTHORISE_LEVEL3Null() As Boolean
            Return Me.IsNull(Me.tablemembermaster.AUTHORISE_LEVEL3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAUTHORISE_LEVEL3Null()
            Me(Me.tablemembermaster.AUTHORISE_LEVEL3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAUTHORISE_USER3Null() As Boolean
            Return Me.IsNull(Me.tablemembermaster.AUTHORISE_USER3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAUTHORISE_USER3Null()
            Me(Me.tablemembermaster.AUTHORISE_USER3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRESIGNED_DATENull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.RESIGNED_DATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRESIGNED_DATENull()
            Me(Me.tablemembermaster.RESIGNED_DATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRESIGNED_FLAGNull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.RESIGNED_FLAGColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRESIGNED_FLAGNull()
            Me(Me.tablemembermaster.RESIGNED_FLAGColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNewstatusNull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.NewstatusColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNewstatusNull()
            Me(Me.tablemembermaster.NewstatusColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSECONDER1Null() As Boolean
            Return Me.IsNull(Me.tablemembermaster.SECONDER1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSECONDER1Null()
            Me(Me.tablemembermaster.SECONDER1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSECONDERNAME1Null() As Boolean
            Return Me.IsNull(Me.tablemembermaster.SECONDERNAME1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSECONDERNAME1Null()
            Me(Me.tablemembermaster.SECONDERNAME1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSECONDER2Null() As Boolean
            Return Me.IsNull(Me.tablemembermaster.SECONDER2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSECONDER2Null()
            Me(Me.tablemembermaster.SECONDER2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSECONDERNAME2Null() As Boolean
            Return Me.IsNull(Me.tablemembermaster.SECONDERNAME2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSECONDERNAME2Null()
            Me(Me.tablemembermaster.SECONDERNAME2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isspl_infoNull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.spl_infoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setspl_infoNull()
            Me(Me.tablemembermaster.spl_infoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPASSPORTNONull() As Boolean
            Return Me.IsNull(Me.tablemembermaster.PASSPORTNOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPASSPORTNONull()
            Me(Me.tablemembermaster.PASSPORTNOColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class View_DRCR_SUMRow
        Inherits Global.System.Data.DataRow
        
        Private tableView_DRCR_SUM As View_DRCR_SUMDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableView_DRCR_SUM = CType(Me.Table,View_DRCR_SUMDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property billno() As String
            Get
                Return CType(Me(Me.tableView_DRCR_SUM.billnoColumn),String)
            End Get
            Set
                Me(Me.tableView_DRCR_SUM.billnoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property billdate() As Date
            Get
                Return CType(Me(Me.tableView_DRCR_SUM.billdateColumn),Date)
            End Get
            Set
                Me(Me.tableView_DRCR_SUM.billdateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MCODE() As String
            Get
                Return CType(Me(Me.tableView_DRCR_SUM.MCODEColumn),String)
            End Get
            Set
                Me(Me.tableView_DRCR_SUM.MCODEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BRAMOUNT() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_DRCR_SUM.BRAMOUNTColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BRAMOUNT' in table 'View_DRCR_SUM' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_DRCR_SUM.BRAMOUNTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CRAMOUNT() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_DRCR_SUM.CRAMOUNTColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CRAMOUNT' in table 'View_DRCR_SUM' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_DRCR_SUM.CRAMOUNTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CCRAMOUNT() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_DRCR_SUM.CCRAMOUNTColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CCRAMOUNT' in table 'View_DRCR_SUM' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_DRCR_SUM.CCRAMOUNTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CCNAMOUNT() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_DRCR_SUM.CCNAMOUNTColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CCNAMOUNT' in table 'View_DRCR_SUM' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_DRCR_SUM.CCNAMOUNTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CDNAMOUNT() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_DRCR_SUM.CDNAMOUNTColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CDNAMOUNT' in table 'View_DRCR_SUM' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_DRCR_SUM.CDNAMOUNTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBRAMOUNTNull() As Boolean
            Return Me.IsNull(Me.tableView_DRCR_SUM.BRAMOUNTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBRAMOUNTNull()
            Me(Me.tableView_DRCR_SUM.BRAMOUNTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCRAMOUNTNull() As Boolean
            Return Me.IsNull(Me.tableView_DRCR_SUM.CRAMOUNTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCRAMOUNTNull()
            Me(Me.tableView_DRCR_SUM.CRAMOUNTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCCRAMOUNTNull() As Boolean
            Return Me.IsNull(Me.tableView_DRCR_SUM.CCRAMOUNTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCCRAMOUNTNull()
            Me(Me.tableView_DRCR_SUM.CCRAMOUNTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCCNAMOUNTNull() As Boolean
            Return Me.IsNull(Me.tableView_DRCR_SUM.CCNAMOUNTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCCNAMOUNTNull()
            Me(Me.tableView_DRCR_SUM.CCNAMOUNTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCDNAMOUNTNull() As Boolean
            Return Me.IsNull(Me.tableView_DRCR_SUM.CDNAMOUNTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCDNAMOUNTNull()
            Me(Me.tableView_DRCR_SUM.CDNAMOUNTColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class MEM_POS_DETRow
        Inherits Global.System.Data.DataRow
        
        Private tableMEM_POS_DET As MEM_POS_DETDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableMEM_POS_DET = CType(Me.Table,MEM_POS_DETDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property poscode() As String
            Get
                Return CType(Me(Me.tableMEM_POS_DET.poscodeColumn),String)
            End Get
            Set
                Me(Me.tableMEM_POS_DET.poscodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property posdesc() As String
            Get
                Try 
                    Return CType(Me(Me.tableMEM_POS_DET.posdescColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'posdesc' in table 'MEM_POS_DET' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMEM_POS_DET.posdescColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsposdescNull() As Boolean
            Return Me.IsNull(Me.tableMEM_POS_DET.posdescColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetposdescNull()
            Me(Me.tableMEM_POS_DET.posdescColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class VIEW_WBSTRow
        Inherits Global.System.Data.DataRow
        
        Private tableVIEW_WBST As VIEW_WBSTDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableVIEW_WBST = CType(Me.Table,VIEW_WBSTDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BILLDETAILS() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_WBST.BILLDETAILSColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BILLDETAILS' in table 'VIEW_WBST' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_WBST.BILLDETAILSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property WBST() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_WBST.WBSTColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'WBST' in table 'VIEW_WBST' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_WBST.WBSTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property mcode() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_WBST.mcodeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'mcode' in table 'VIEW_WBST' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_WBST.mcodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property KOTDATE() As Date
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_WBST.KOTDATEColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'KOTDATE' in table 'VIEW_WBST' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_WBST.KOTDATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TAXCODE() As String
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_WBST.TAXCODEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TAXCODE' in table 'VIEW_WBST' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_WBST.TAXCODEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TAXPERCENT() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableVIEW_WBST.TAXPERCENTColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TAXPERCENT' in table 'VIEW_WBST' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVIEW_WBST.TAXPERCENTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBILLDETAILSNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_WBST.BILLDETAILSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBILLDETAILSNull()
            Me(Me.tableVIEW_WBST.BILLDETAILSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsWBSTNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_WBST.WBSTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetWBSTNull()
            Me(Me.tableVIEW_WBST.WBSTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsmcodeNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_WBST.mcodeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetmcodeNull()
            Me(Me.tableVIEW_WBST.mcodeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsKOTDATENull() As Boolean
            Return Me.IsNull(Me.tableVIEW_WBST.KOTDATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetKOTDATENull()
            Me(Me.tableVIEW_WBST.KOTDATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTAXCODENull() As Boolean
            Return Me.IsNull(Me.tableVIEW_WBST.TAXCODEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTAXCODENull()
            Me(Me.tableVIEW_WBST.TAXCODEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTAXPERCENTNull() As Boolean
            Return Me.IsNull(Me.tableVIEW_WBST.TAXPERCENTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTAXPERCENTNull()
            Me(Me.tableVIEW_WBST.TAXPERCENTColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class View_Recipt_DetCCLRow
        Inherits Global.System.Data.DataRow
        
        Private tableView_Recipt_DetCCL As View_Recipt_DetCCLDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableView_Recipt_DetCCL = CType(Me.Table,View_Recipt_DetCCLDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property billno() As String
            Get
                Return CType(Me(Me.tableView_Recipt_DetCCL.billnoColumn),String)
            End Get
            Set
                Me(Me.tableView_Recipt_DetCCL.billnoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property billdate() As Date
            Get
                Return CType(Me(Me.tableView_Recipt_DetCCL.billdateColumn),Date)
            End Get
            Set
                Me(Me.tableView_Recipt_DetCCL.billdateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MCODE() As String
            Get
                Return CType(Me(Me.tableView_Recipt_DetCCL.MCODEColumn),String)
            End Get
            Set
                Me(Me.tableView_Recipt_DetCCL.MCODEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Dramount() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_Recipt_DetCCL.DramountColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Dramount' in table 'View_Recipt_DetCCL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Recipt_DetCCL.DramountColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Cramount() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_Recipt_DetCCL.CramountColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Cramount' in table 'View_Recipt_DetCCL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_Recipt_DetCCL.CramountColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property locdesc() As String
            Get
                Return CType(Me(Me.tableView_Recipt_DetCCL.locdescColumn),String)
            End Get
            Set
                Me(Me.tableView_Recipt_DetCCL.locdescColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property loccode() As String
            Get
                Return CType(Me(Me.tableView_Recipt_DetCCL.loccodeColumn),String)
            End Get
            Set
                Me(Me.tableView_Recipt_DetCCL.loccodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property InstrumentType() As String
            Get
                Return CType(Me(Me.tableView_Recipt_DetCCL.InstrumentTypeColumn),String)
            End Get
            Set
                Me(Me.tableView_Recipt_DetCCL.InstrumentTypeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Description() As String
            Get
                Return CType(Me(Me.tableView_Recipt_DetCCL.DescriptionColumn),String)
            End Get
            Set
                Me(Me.tableView_Recipt_DetCCL.DescriptionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Instrumentno() As String
            Get
                Return CType(Me(Me.tableView_Recipt_DetCCL.InstrumentnoColumn),String)
            End Get
            Set
                Me(Me.tableView_Recipt_DetCCL.InstrumentnoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CREDITDEBIT() As String
            Get
                Return CType(Me(Me.tableView_Recipt_DetCCL.CREDITDEBITColumn),String)
            End Get
            Set
                Me(Me.tableView_Recipt_DetCCL.CREDITDEBITColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDramountNull() As Boolean
            Return Me.IsNull(Me.tableView_Recipt_DetCCL.DramountColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDramountNull()
            Me(Me.tableView_Recipt_DetCCL.DramountColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCramountNull() As Boolean
            Return Me.IsNull(Me.tableView_Recipt_DetCCL.CramountColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCramountNull()
            Me(Me.tableView_Recipt_DetCCL.CramountColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class MEMBER_CONSUMPTION_OUTLETRow
        Inherits Global.System.Data.DataRow
        
        Private tableMEMBER_CONSUMPTION_OUTLET As MEMBER_CONSUMPTION_OUTLETDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableMEMBER_CONSUMPTION_OUTLET = CType(Me.Table,MEMBER_CONSUMPTION_OUTLETDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BILLDETAILS() As String
            Get
                Try 
                    Return CType(Me(Me.tableMEMBER_CONSUMPTION_OUTLET.BILLDETAILSColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BILLDETAILS' in table 'MEMBER_CONSUMPTION_OUTLET' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableMEMBER_CONSUMPTION_OUTLET.BILLDETAILSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property POSCODE() As String
            Get
                Try 
                    Return CType(Me(Me.tableMEMBER_CONSUMPTION_OUTLET.POSCODEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'POSCODE' in table 'MEMBER_CONSUMPTION_OUTLET' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMEMBER_CONSUMPTION_OUTLET.POSCODEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property POSDESC() As String
            Get
                Try 
                    Return CType(Me(Me.tableMEMBER_CONSUMPTION_OUTLET.POSDESCColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'POSDESC' in table 'MEMBER_CONSUMPTION_OUTLET' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMEMBER_CONSUMPTION_OUTLET.POSDESCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property KOTDATE() As Date
            Get
                Try 
                    Return CType(Me(Me.tableMEMBER_CONSUMPTION_OUTLET.KOTDATEColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'KOTDATE' in table 'MEMBER_CONSUMPTION_OUTLET' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMEMBER_CONSUMPTION_OUTLET.KOTDATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MCODE() As String
            Get
                Try 
                    Return CType(Me(Me.tableMEMBER_CONSUMPTION_OUTLET.MCODEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MCODE' in table 'MEMBER_CONSUMPTION_OUTLET' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMEMBER_CONSUMPTION_OUTLET.MCODEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AMOUNT() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableMEMBER_CONSUMPTION_OUTLET.AMOUNTColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AMOUNT' in table 'MEMBER_CONSUMPTION_OUTLET' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMEMBER_CONSUMPTION_OUTLET.AMOUNTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property VAT14() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableMEMBER_CONSUMPTION_OUTLET.VAT14Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'VAT14' in table 'MEMBER_CONSUMPTION_OUTLET' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMEMBER_CONSUMPTION_OUTLET.VAT14Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property VAT25() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableMEMBER_CONSUMPTION_OUTLET.VAT25Column),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'VAT25' in table 'MEMBER_CONSUMPTION_OUTLET' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMEMBER_CONSUMPTION_OUTLET.VAT25Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property VAT35() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableMEMBER_CONSUMPTION_OUTLET.VAT35Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'VAT35' in table 'MEMBER_CONSUMPTION_OUTLET' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMEMBER_CONSUMPTION_OUTLET.VAT35Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property VAT7() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableMEMBER_CONSUMPTION_OUTLET.VAT7Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'VAT7' in table 'MEMBER_CONSUMPTION_OUTLET' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMEMBER_CONSUMPTION_OUTLET.VAT7Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property VAT5() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableMEMBER_CONSUMPTION_OUTLET.VAT5Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'VAT5' in table 'MEMBER_CONSUMPTION_OUTLET' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMEMBER_CONSUMPTION_OUTLET.VAT5Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SERTAX4() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableMEMBER_CONSUMPTION_OUTLET.SERTAX4Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SERTAX4' in table 'MEMBER_CONSUMPTION_OUTLET' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMEMBER_CONSUMPTION_OUTLET.SERTAX4Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SERTAX12() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableMEMBER_CONSUMPTION_OUTLET.SERTAX12Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SERTAX12' in table 'MEMBER_CONSUMPTION_OUTLET' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMEMBER_CONSUMPTION_OUTLET.SERTAX12Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SCharge() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableMEMBER_CONSUMPTION_OUTLET.SChargeColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SCharge' in table 'MEMBER_CONSUMPTION_OUTLET' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMEMBER_CONSUMPTION_OUTLET.SChargeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SERVICE_CHARGE() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableMEMBER_CONSUMPTION_OUTLET.SERVICE_CHARGEColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SERVICE_CHARGE' in table 'MEMBER_CONSUMPTION_OUTLET' is DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMEMBER_CONSUMPTION_OUTLET.SERVICE_CHARGEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SNO() As String
            Get
                Return CType(Me(Me.tableMEMBER_CONSUMPTION_OUTLET.SNOColumn),String)
            End Get
            Set
                Me(Me.tableMEMBER_CONSUMPTION_OUTLET.SNOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBILLDETAILSNull() As Boolean
            Return Me.IsNull(Me.tableMEMBER_CONSUMPTION_OUTLET.BILLDETAILSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBILLDETAILSNull()
            Me(Me.tableMEMBER_CONSUMPTION_OUTLET.BILLDETAILSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPOSCODENull() As Boolean
            Return Me.IsNull(Me.tableMEMBER_CONSUMPTION_OUTLET.POSCODEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPOSCODENull()
            Me(Me.tableMEMBER_CONSUMPTION_OUTLET.POSCODEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPOSDESCNull() As Boolean
            Return Me.IsNull(Me.tableMEMBER_CONSUMPTION_OUTLET.POSDESCColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPOSDESCNull()
            Me(Me.tableMEMBER_CONSUMPTION_OUTLET.POSDESCColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsKOTDATENull() As Boolean
            Return Me.IsNull(Me.tableMEMBER_CONSUMPTION_OUTLET.KOTDATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetKOTDATENull()
            Me(Me.tableMEMBER_CONSUMPTION_OUTLET.KOTDATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMCODENull() As Boolean
            Return Me.IsNull(Me.tableMEMBER_CONSUMPTION_OUTLET.MCODEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMCODENull()
            Me(Me.tableMEMBER_CONSUMPTION_OUTLET.MCODEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAMOUNTNull() As Boolean
            Return Me.IsNull(Me.tableMEMBER_CONSUMPTION_OUTLET.AMOUNTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAMOUNTNull()
            Me(Me.tableMEMBER_CONSUMPTION_OUTLET.AMOUNTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsVAT14Null() As Boolean
            Return Me.IsNull(Me.tableMEMBER_CONSUMPTION_OUTLET.VAT14Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetVAT14Null()
            Me(Me.tableMEMBER_CONSUMPTION_OUTLET.VAT14Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsVAT25Null() As Boolean
            Return Me.IsNull(Me.tableMEMBER_CONSUMPTION_OUTLET.VAT25Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetVAT25Null()
            Me(Me.tableMEMBER_CONSUMPTION_OUTLET.VAT25Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsVAT35Null() As Boolean
            Return Me.IsNull(Me.tableMEMBER_CONSUMPTION_OUTLET.VAT35Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetVAT35Null()
            Me(Me.tableMEMBER_CONSUMPTION_OUTLET.VAT35Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsVAT7Null() As Boolean
            Return Me.IsNull(Me.tableMEMBER_CONSUMPTION_OUTLET.VAT7Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetVAT7Null()
            Me(Me.tableMEMBER_CONSUMPTION_OUTLET.VAT7Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsVAT5Null() As Boolean
            Return Me.IsNull(Me.tableMEMBER_CONSUMPTION_OUTLET.VAT5Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetVAT5Null()
            Me(Me.tableMEMBER_CONSUMPTION_OUTLET.VAT5Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSERTAX4Null() As Boolean
            Return Me.IsNull(Me.tableMEMBER_CONSUMPTION_OUTLET.SERTAX4Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSERTAX4Null()
            Me(Me.tableMEMBER_CONSUMPTION_OUTLET.SERTAX4Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSERTAX12Null() As Boolean
            Return Me.IsNull(Me.tableMEMBER_CONSUMPTION_OUTLET.SERTAX12Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSERTAX12Null()
            Me(Me.tableMEMBER_CONSUMPTION_OUTLET.SERTAX12Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSChargeNull() As Boolean
            Return Me.IsNull(Me.tableMEMBER_CONSUMPTION_OUTLET.SChargeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSChargeNull()
            Me(Me.tableMEMBER_CONSUMPTION_OUTLET.SChargeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSERVICE_CHARGENull() As Boolean
            Return Me.IsNull(Me.tableMEMBER_CONSUMPTION_OUTLET.SERVICE_CHARGEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSERVICE_CHARGENull()
            Me(Me.tableMEMBER_CONSUMPTION_OUTLET.SERVICE_CHARGEColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class VW_CommitteeTransactionRow
        Inherits Global.System.Data.DataRow
        
        Private tableVW_CommitteeTransaction As VW_CommitteeTransactionDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableVW_CommitteeTransaction = CType(Me.Table,VW_CommitteeTransactionDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MCODE() As String
            Get
                Try 
                    Return CType(Me(Me.tableVW_CommitteeTransaction.MCODEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MCODE' in table 'VW_CommitteeTransaction' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_CommitteeTransaction.MCODEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MNAME() As String
            Get
                Try 
                    Return CType(Me(Me.tableVW_CommitteeTransaction.MNAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MNAME' in table 'VW_CommitteeTransaction' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_CommitteeTransaction.MNAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DesignationCode() As String
            Get
                Try 
                    Return CType(Me(Me.tableVW_CommitteeTransaction.DesignationCodeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DesignationCode' in table 'VW_CommitteeTransaction' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_CommitteeTransaction.DesignationCodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Designation() As String
            Get
                Try 
                    Return CType(Me(Me.tableVW_CommitteeTransaction.DesignationColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Designation' in table 'VW_CommitteeTransaction' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_CommitteeTransaction.DesignationColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CEMAIL() As String
            Get
                Try 
                    Return CType(Me(Me.tableVW_CommitteeTransaction.CEMAILColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CEMAIL' in table 'VW_CommitteeTransaction' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_CommitteeTransaction.CEMAILColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CCELL() As String
            Get
                Try 
                    Return CType(Me(Me.tableVW_CommitteeTransaction.CCELLColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CCELL' in table 'VW_CommitteeTransaction' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_CommitteeTransaction.CCELLColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MEMIMAGE() As Byte()
            Get
                Try 
                    Return CType(Me(Me.tableVW_CommitteeTransaction.MEMIMAGEColumn),Byte())
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MEMIMAGE' in table 'VW_CommitteeTransaction' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_CommitteeTransaction.MEMIMAGEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CurentStatus() As String
            Get
                Try 
                    Return CType(Me(Me.tableVW_CommitteeTransaction.CurentStatusColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CurentStatus' in table 'VW_CommitteeTransaction' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_CommitteeTransaction.CurentStatusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Fromdate() As Date
            Get
                Try 
                    Return CType(Me(Me.tableVW_CommitteeTransaction.FromdateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Fromdate' in table 'VW_CommitteeTransaction' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_CommitteeTransaction.FromdateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Todate() As Date
            Get
                Try 
                    Return CType(Me(Me.tableVW_CommitteeTransaction.TodateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Todate' in table 'VW_CommitteeTransaction' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVW_CommitteeTransaction.TodateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMCODENull() As Boolean
            Return Me.IsNull(Me.tableVW_CommitteeTransaction.MCODEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMCODENull()
            Me(Me.tableVW_CommitteeTransaction.MCODEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMNAMENull() As Boolean
            Return Me.IsNull(Me.tableVW_CommitteeTransaction.MNAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMNAMENull()
            Me(Me.tableVW_CommitteeTransaction.MNAMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDesignationCodeNull() As Boolean
            Return Me.IsNull(Me.tableVW_CommitteeTransaction.DesignationCodeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDesignationCodeNull()
            Me(Me.tableVW_CommitteeTransaction.DesignationCodeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDesignationNull() As Boolean
            Return Me.IsNull(Me.tableVW_CommitteeTransaction.DesignationColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDesignationNull()
            Me(Me.tableVW_CommitteeTransaction.DesignationColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCEMAILNull() As Boolean
            Return Me.IsNull(Me.tableVW_CommitteeTransaction.CEMAILColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCEMAILNull()
            Me(Me.tableVW_CommitteeTransaction.CEMAILColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCCELLNull() As Boolean
            Return Me.IsNull(Me.tableVW_CommitteeTransaction.CCELLColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCCELLNull()
            Me(Me.tableVW_CommitteeTransaction.CCELLColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMEMIMAGENull() As Boolean
            Return Me.IsNull(Me.tableVW_CommitteeTransaction.MEMIMAGEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMEMIMAGENull()
            Me(Me.tableVW_CommitteeTransaction.MEMIMAGEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCurentStatusNull() As Boolean
            Return Me.IsNull(Me.tableVW_CommitteeTransaction.CurentStatusColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCurentStatusNull()
            Me(Me.tableVW_CommitteeTransaction.CurentStatusColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFromdateNull() As Boolean
            Return Me.IsNull(Me.tableVW_CommitteeTransaction.FromdateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFromdateNull()
            Me(Me.tableVW_CommitteeTransaction.FromdateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTodateNull() As Boolean
            Return Me.IsNull(Me.tableVW_CommitteeTransaction.TodateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTodateNull()
            Me(Me.tableVW_CommitteeTransaction.TodateColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class accountsglaccountmasterRow
        Inherits Global.System.Data.DataRow
        
        Private tableaccountsglaccountmaster As accountsglaccountmasterDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableaccountsglaccountmaster = CType(Me.Table,accountsglaccountmasterDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property accode() As String
            Get
                Return CType(Me(Me.tableaccountsglaccountmaster.accodeColumn),String)
            End Get
            Set
                Me(Me.tableaccountsglaccountmaster.accodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property acdesc() As String
            Get
                Try 
                    Return CType(Me(Me.tableaccountsglaccountmaster.acdescColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'acdesc' in table 'accountsglaccountmaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableaccountsglaccountmaster.acdescColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property _alias() As String
            Get
                Try 
                    Return CType(Me(Me.tableaccountsglaccountmaster.aliasColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'alias' in table 'accountsglaccountmaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableaccountsglaccountmaster.aliasColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property subledgerflag() As String
            Get
                Try 
                    Return CType(Me(Me.tableaccountsglaccountmaster.subledgerflagColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'subledgerflag' in table 'accountsglaccountmaster' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableaccountsglaccountmaster.subledgerflagColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property groupname() As String
            Get
                Try 
                    Return CType(Me(Me.tableaccountsglaccountmaster.groupnameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'groupname' in table 'accountsglaccountmaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableaccountsglaccountmaster.groupnameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property subgroup() As String
            Get
                Try 
                    Return CType(Me(Me.tableaccountsglaccountmaster.subgroupColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'subgroup' in table 'accountsglaccountmaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableaccountsglaccountmaster.subgroupColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property actype() As String
            Get
                Try 
                    Return CType(Me(Me.tableaccountsglaccountmaster.actypeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'actype' in table 'accountsglaccountmaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableaccountsglaccountmaster.actypeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property budgetflag() As String
            Get
                Try 
                    Return CType(Me(Me.tableaccountsglaccountmaster.budgetflagColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'budgetflag' in table 'accountsglaccountmaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableaccountsglaccountmaster.budgetflagColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property bank() As String
            Get
                Try 
                    Return CType(Me(Me.tableaccountsglaccountmaster.bankColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'bank' in table 'accountsglaccountmaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableaccountsglaccountmaster.bankColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property bankaddress() As String
            Get
                Try 
                    Return CType(Me(Me.tableaccountsglaccountmaster.bankaddressColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'bankaddress' in table 'accountsglaccountmaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableaccountsglaccountmaster.bankaddressColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property opdebits() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableaccountsglaccountmaster.opdebitsColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'opdebits' in table 'accountsglaccountmaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableaccountsglaccountmaster.opdebitsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property opcredits() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableaccountsglaccountmaster.opcreditsColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'opcredits' in table 'accountsglaccountmaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableaccountsglaccountmaster.opcreditsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property cldebits() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableaccountsglaccountmaster.cldebitsColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'cldebits' in table 'accountsglaccountmaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableaccountsglaccountmaster.cldebitsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property clcredits() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableaccountsglaccountmaster.clcreditsColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'clcredits' in table 'accountsglaccountmaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableaccountsglaccountmaster.clcreditsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property aprdebits() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableaccountsglaccountmaster.aprdebitsColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'aprdebits' in table 'accountsglaccountmaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableaccountsglaccountmaster.aprdebitsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property aprcredits() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableaccountsglaccountmaster.aprcreditsColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'aprcredits' in table 'accountsglaccountmaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableaccountsglaccountmaster.aprcreditsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property maydebits() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableaccountsglaccountmaster.maydebitsColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'maydebits' in table 'accountsglaccountmaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableaccountsglaccountmaster.maydebitsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property maycredits() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableaccountsglaccountmaster.maycreditsColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'maycredits' in table 'accountsglaccountmaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableaccountsglaccountmaster.maycreditsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property jundebits() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableaccountsglaccountmaster.jundebitsColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'jundebits' in table 'accountsglaccountmaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableaccountsglaccountmaster.jundebitsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property juncredits() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableaccountsglaccountmaster.juncreditsColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'juncredits' in table 'accountsglaccountmaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableaccountsglaccountmaster.juncreditsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property juldebits() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableaccountsglaccountmaster.juldebitsColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'juldebits' in table 'accountsglaccountmaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableaccountsglaccountmaster.juldebitsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property julcredits() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableaccountsglaccountmaster.julcreditsColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'julcredits' in table 'accountsglaccountmaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableaccountsglaccountmaster.julcreditsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property augdebits() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableaccountsglaccountmaster.augdebitsColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'augdebits' in table 'accountsglaccountmaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableaccountsglaccountmaster.augdebitsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property augcredits() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableaccountsglaccountmaster.augcreditsColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'augcredits' in table 'accountsglaccountmaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableaccountsglaccountmaster.augcreditsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property sepdebits() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableaccountsglaccountmaster.sepdebitsColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'sepdebits' in table 'accountsglaccountmaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableaccountsglaccountmaster.sepdebitsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property sepcredits() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableaccountsglaccountmaster.sepcreditsColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'sepcredits' in table 'accountsglaccountmaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableaccountsglaccountmaster.sepcreditsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property octdebits() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableaccountsglaccountmaster.octdebitsColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'octdebits' in table 'accountsglaccountmaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableaccountsglaccountmaster.octdebitsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property octcredits() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableaccountsglaccountmaster.octcreditsColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'octcredits' in table 'accountsglaccountmaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableaccountsglaccountmaster.octcreditsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property novdebits() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableaccountsglaccountmaster.novdebitsColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'novdebits' in table 'accountsglaccountmaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableaccountsglaccountmaster.novdebitsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property novcredits() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableaccountsglaccountmaster.novcreditsColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'novcredits' in table 'accountsglaccountmaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableaccountsglaccountmaster.novcreditsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property decdebits() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableaccountsglaccountmaster.decdebitsColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'decdebits' in table 'accountsglaccountmaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableaccountsglaccountmaster.decdebitsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property deccredits() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableaccountsglaccountmaster.deccreditsColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'deccredits' in table 'accountsglaccountmaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableaccountsglaccountmaster.deccreditsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property jandebits() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableaccountsglaccountmaster.jandebitsColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'jandebits' in table 'accountsglaccountmaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableaccountsglaccountmaster.jandebitsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property jancredits() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableaccountsglaccountmaster.jancreditsColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'jancredits' in table 'accountsglaccountmaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableaccountsglaccountmaster.jancreditsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property febdebits() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableaccountsglaccountmaster.febdebitsColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'febdebits' in table 'accountsglaccountmaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableaccountsglaccountmaster.febdebitsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property febcredits() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableaccountsglaccountmaster.febcreditsColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'febcredits' in table 'accountsglaccountmaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableaccountsglaccountmaster.febcreditsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property mardebits() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableaccountsglaccountmaster.mardebitsColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'mardebits' in table 'accountsglaccountmaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableaccountsglaccountmaster.mardebitsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property marcredits() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableaccountsglaccountmaster.marcreditsColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'marcredits' in table 'accountsglaccountmaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableaccountsglaccountmaster.marcreditsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property actuallastyear() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableaccountsglaccountmaster.actuallastyearColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'actuallastyear' in table 'accountsglaccountmaster' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableaccountsglaccountmaster.actuallastyearColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property projectedlastyear() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableaccountsglaccountmaster.projectedlastyearColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'projectedlastyear' in table 'accountsglaccountmaster' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableaccountsglaccountmaster.projectedlastyearColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property actualcurrentyear() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableaccountsglaccountmaster.actualcurrentyearColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'actualcurrentyear' in table 'accountsglaccountmaster' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableaccountsglaccountmaster.actualcurrentyearColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property projectedcurrentyear() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableaccountsglaccountmaster.projectedcurrentyearColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'projectedcurrentyear' in table 'accountsglaccountmaster' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableaccountsglaccountmaster.projectedcurrentyearColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property actualnextyear() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableaccountsglaccountmaster.actualnextyearColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'actualnextyear' in table 'accountsglaccountmaster' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableaccountsglaccountmaster.actualnextyearColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property projectednextyear() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableaccountsglaccountmaster.projectednextyearColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'projectednextyear' in table 'accountsglaccountmaster' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableaccountsglaccountmaster.projectednextyearColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property adduserid() As String
            Get
                Try 
                    Return CType(Me(Me.tableaccountsglaccountmaster.adduseridColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'adduserid' in table 'accountsglaccountmaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableaccountsglaccountmaster.adduseridColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property adddatetime() As Date
            Get
                Try 
                    Return CType(Me(Me.tableaccountsglaccountmaster.adddatetimeColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'adddatetime' in table 'accountsglaccountmaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableaccountsglaccountmaster.adddatetimeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property updateuserid() As String
            Get
                Try 
                    Return CType(Me(Me.tableaccountsglaccountmaster.updateuseridColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'updateuserid' in table 'accountsglaccountmaster' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableaccountsglaccountmaster.updateuseridColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property updatedatetime() As Date
            Get
                Try 
                    Return CType(Me(Me.tableaccountsglaccountmaster.updatedatetimeColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'updatedatetime' in table 'accountsglaccountmaster' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableaccountsglaccountmaster.updatedatetimeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property freezeflag() As String
            Get
                Try 
                    Return CType(Me(Me.tableaccountsglaccountmaster.freezeflagColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'freezeflag' in table 'accountsglaccountmaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableaccountsglaccountmaster.freezeflagColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property freezeuserid() As String
            Get
                Try 
                    Return CType(Me(Me.tableaccountsglaccountmaster.freezeuseridColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'freezeuserid' in table 'accountsglaccountmaster' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableaccountsglaccountmaster.freezeuseridColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property freezedatetime() As Date
            Get
                Try 
                    Return CType(Me(Me.tableaccountsglaccountmaster.freezedatetimeColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'freezedatetime' in table 'accountsglaccountmaster' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableaccountsglaccountmaster.freezedatetimeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BSPL() As String
            Get
                Try 
                    Return CType(Me(Me.tableaccountsglaccountmaster.BSPLColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BSPL' in table 'accountsglaccountmaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableaccountsglaccountmaster.BSPLColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FREZEEFLAG() As String
            Get
                Try 
                    Return CType(Me(Me.tableaccountsglaccountmaster.FREZEEFLAGColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FREZEEFLAG' in table 'accountsglaccountmaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableaccountsglaccountmaster.FREZEEFLAGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CATEGORY() As String
            Get
                Try 
                    Return CType(Me(Me.tableaccountsglaccountmaster.CATEGORYColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CATEGORY' in table 'accountsglaccountmaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableaccountsglaccountmaster.CATEGORYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DEPPER() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableaccountsglaccountmaster.DEPPERColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DEPPER' in table 'accountsglaccountmaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableaccountsglaccountmaster.DEPPERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SUBSUBGROUP() As String
            Get
                Try 
                    Return CType(Me(Me.tableaccountsglaccountmaster.SUBSUBGROUPColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SUBSUBGROUP' in table 'accountsglaccountmaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableaccountsglaccountmaster.SUBSUBGROUPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SLTYPE() As String
            Get
                Try 
                    Return CType(Me(Me.tableaccountsglaccountmaster.SLTYPEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SLTYPE' in table 'accountsglaccountmaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableaccountsglaccountmaster.SLTYPEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property COST() As String
            Get
                Try 
                    Return CType(Me(Me.tableaccountsglaccountmaster.COSTColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'COST' in table 'accountsglaccountmaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableaccountsglaccountmaster.COSTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property COSTMASTER() As String
            Get
                Try 
                    Return CType(Me(Me.tableaccountsglaccountmaster.COSTMASTERColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'COSTMASTER' in table 'accountsglaccountmaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableaccountsglaccountmaster.COSTMASTERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ADD_DATE() As Date
            Get
                Try 
                    Return CType(Me(Me.tableaccountsglaccountmaster.ADD_DATEColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ADD_DATE' in table 'accountsglaccountmaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableaccountsglaccountmaster.ADD_DATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ADD_USER() As String
            Get
                Try 
                    Return CType(Me(Me.tableaccountsglaccountmaster.ADD_USERColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ADD_USER' in table 'accountsglaccountmaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableaccountsglaccountmaster.ADD_USERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property UPD_USER() As String
            Get
                Try 
                    Return CType(Me(Me.tableaccountsglaccountmaster.UPD_USERColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'UPD_USER' in table 'accountsglaccountmaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableaccountsglaccountmaster.UPD_USERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property UPD_DATE() As Date
            Get
                Try 
                    Return CType(Me(Me.tableaccountsglaccountmaster.UPD_DATEColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'UPD_DATE' in table 'accountsglaccountmaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableaccountsglaccountmaster.UPD_DATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property VOIDUSER() As String
            Get
                Try 
                    Return CType(Me(Me.tableaccountsglaccountmaster.VOIDUSERColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'VOIDUSER' in table 'accountsglaccountmaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableaccountsglaccountmaster.VOIDUSERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property VOIDDATE() As Date
            Get
                Try 
                    Return CType(Me(Me.tableaccountsglaccountmaster.VOIDDATEColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'VOIDDATE' in table 'accountsglaccountmaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableaccountsglaccountmaster.VOIDDATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AUTHORISED() As String
            Get
                Try 
                    Return CType(Me(Me.tableaccountsglaccountmaster.AUTHORISEDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AUTHORISED' in table 'accountsglaccountmaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableaccountsglaccountmaster.AUTHORISEDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AUTHORISE_LEVEL1() As String
            Get
                Try 
                    Return CType(Me(Me.tableaccountsglaccountmaster.AUTHORISE_LEVEL1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AUTHORISE_LEVEL1' in table 'accountsglaccountmaster' is DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tableaccountsglaccountmaster.AUTHORISE_LEVEL1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AUTHORISE_USER1() As String
            Get
                Try 
                    Return CType(Me(Me.tableaccountsglaccountmaster.AUTHORISE_USER1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AUTHORISE_USER1' in table 'accountsglaccountmaster' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableaccountsglaccountmaster.AUTHORISE_USER1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AUTHORISE_DATE1() As Date
            Get
                Try 
                    Return CType(Me(Me.tableaccountsglaccountmaster.AUTHORISE_DATE1Column),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AUTHORISE_DATE1' in table 'accountsglaccountmaster' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableaccountsglaccountmaster.AUTHORISE_DATE1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AUTHORISE_LEVEL2() As String
            Get
                Try 
                    Return CType(Me(Me.tableaccountsglaccountmaster.AUTHORISE_LEVEL2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AUTHORISE_LEVEL2' in table 'accountsglaccountmaster' is DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tableaccountsglaccountmaster.AUTHORISE_LEVEL2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AUTHORISE_USER2() As String
            Get
                Try 
                    Return CType(Me(Me.tableaccountsglaccountmaster.AUTHORISE_USER2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AUTHORISE_USER2' in table 'accountsglaccountmaster' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableaccountsglaccountmaster.AUTHORISE_USER2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AUTHORISE_DATE2() As Date
            Get
                Try 
                    Return CType(Me(Me.tableaccountsglaccountmaster.AUTHORISE_DATE2Column),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AUTHORISE_DATE2' in table 'accountsglaccountmaster' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableaccountsglaccountmaster.AUTHORISE_DATE2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AUTHORISE_LEVEL3() As String
            Get
                Try 
                    Return CType(Me(Me.tableaccountsglaccountmaster.AUTHORISE_LEVEL3Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AUTHORISE_LEVEL3' in table 'accountsglaccountmaster' is DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tableaccountsglaccountmaster.AUTHORISE_LEVEL3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AUTHORISE_USER3() As String
            Get
                Try 
                    Return CType(Me(Me.tableaccountsglaccountmaster.AUTHORISE_USER3Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AUTHORISE_USER3' in table 'accountsglaccountmaster' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableaccountsglaccountmaster.AUTHORISE_USER3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AUTHORISE_DATE3() As Date
            Get
                Try 
                    Return CType(Me(Me.tableaccountsglaccountmaster.AUTHORISE_DATE3Column),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AUTHORISE_DATE3' in table 'accountsglaccountmaster' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableaccountsglaccountmaster.AUTHORISE_DATE3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsacdescNull() As Boolean
            Return Me.IsNull(Me.tableaccountsglaccountmaster.acdescColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetacdescNull()
            Me(Me.tableaccountsglaccountmaster.acdescColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Is_aliasNull() As Boolean
            Return Me.IsNull(Me.tableaccountsglaccountmaster.aliasColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Set_aliasNull()
            Me(Me.tableaccountsglaccountmaster.aliasColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IssubledgerflagNull() As Boolean
            Return Me.IsNull(Me.tableaccountsglaccountmaster.subledgerflagColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetsubledgerflagNull()
            Me(Me.tableaccountsglaccountmaster.subledgerflagColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsgroupnameNull() As Boolean
            Return Me.IsNull(Me.tableaccountsglaccountmaster.groupnameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetgroupnameNull()
            Me(Me.tableaccountsglaccountmaster.groupnameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IssubgroupNull() As Boolean
            Return Me.IsNull(Me.tableaccountsglaccountmaster.subgroupColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetsubgroupNull()
            Me(Me.tableaccountsglaccountmaster.subgroupColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsactypeNull() As Boolean
            Return Me.IsNull(Me.tableaccountsglaccountmaster.actypeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetactypeNull()
            Me(Me.tableaccountsglaccountmaster.actypeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsbudgetflagNull() As Boolean
            Return Me.IsNull(Me.tableaccountsglaccountmaster.budgetflagColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetbudgetflagNull()
            Me(Me.tableaccountsglaccountmaster.budgetflagColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsbankNull() As Boolean
            Return Me.IsNull(Me.tableaccountsglaccountmaster.bankColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetbankNull()
            Me(Me.tableaccountsglaccountmaster.bankColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsbankaddressNull() As Boolean
            Return Me.IsNull(Me.tableaccountsglaccountmaster.bankaddressColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetbankaddressNull()
            Me(Me.tableaccountsglaccountmaster.bankaddressColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsopdebitsNull() As Boolean
            Return Me.IsNull(Me.tableaccountsglaccountmaster.opdebitsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetopdebitsNull()
            Me(Me.tableaccountsglaccountmaster.opdebitsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsopcreditsNull() As Boolean
            Return Me.IsNull(Me.tableaccountsglaccountmaster.opcreditsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetopcreditsNull()
            Me(Me.tableaccountsglaccountmaster.opcreditsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IscldebitsNull() As Boolean
            Return Me.IsNull(Me.tableaccountsglaccountmaster.cldebitsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetcldebitsNull()
            Me(Me.tableaccountsglaccountmaster.cldebitsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsclcreditsNull() As Boolean
            Return Me.IsNull(Me.tableaccountsglaccountmaster.clcreditsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetclcreditsNull()
            Me(Me.tableaccountsglaccountmaster.clcreditsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsaprdebitsNull() As Boolean
            Return Me.IsNull(Me.tableaccountsglaccountmaster.aprdebitsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetaprdebitsNull()
            Me(Me.tableaccountsglaccountmaster.aprdebitsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsaprcreditsNull() As Boolean
            Return Me.IsNull(Me.tableaccountsglaccountmaster.aprcreditsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetaprcreditsNull()
            Me(Me.tableaccountsglaccountmaster.aprcreditsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsmaydebitsNull() As Boolean
            Return Me.IsNull(Me.tableaccountsglaccountmaster.maydebitsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetmaydebitsNull()
            Me(Me.tableaccountsglaccountmaster.maydebitsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsmaycreditsNull() As Boolean
            Return Me.IsNull(Me.tableaccountsglaccountmaster.maycreditsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetmaycreditsNull()
            Me(Me.tableaccountsglaccountmaster.maycreditsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsjundebitsNull() As Boolean
            Return Me.IsNull(Me.tableaccountsglaccountmaster.jundebitsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetjundebitsNull()
            Me(Me.tableaccountsglaccountmaster.jundebitsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsjuncreditsNull() As Boolean
            Return Me.IsNull(Me.tableaccountsglaccountmaster.juncreditsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetjuncreditsNull()
            Me(Me.tableaccountsglaccountmaster.juncreditsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsjuldebitsNull() As Boolean
            Return Me.IsNull(Me.tableaccountsglaccountmaster.juldebitsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetjuldebitsNull()
            Me(Me.tableaccountsglaccountmaster.juldebitsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsjulcreditsNull() As Boolean
            Return Me.IsNull(Me.tableaccountsglaccountmaster.julcreditsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetjulcreditsNull()
            Me(Me.tableaccountsglaccountmaster.julcreditsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsaugdebitsNull() As Boolean
            Return Me.IsNull(Me.tableaccountsglaccountmaster.augdebitsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetaugdebitsNull()
            Me(Me.tableaccountsglaccountmaster.augdebitsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsaugcreditsNull() As Boolean
            Return Me.IsNull(Me.tableaccountsglaccountmaster.augcreditsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetaugcreditsNull()
            Me(Me.tableaccountsglaccountmaster.augcreditsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IssepdebitsNull() As Boolean
            Return Me.IsNull(Me.tableaccountsglaccountmaster.sepdebitsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetsepdebitsNull()
            Me(Me.tableaccountsglaccountmaster.sepdebitsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IssepcreditsNull() As Boolean
            Return Me.IsNull(Me.tableaccountsglaccountmaster.sepcreditsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetsepcreditsNull()
            Me(Me.tableaccountsglaccountmaster.sepcreditsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsoctdebitsNull() As Boolean
            Return Me.IsNull(Me.tableaccountsglaccountmaster.octdebitsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetoctdebitsNull()
            Me(Me.tableaccountsglaccountmaster.octdebitsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsoctcreditsNull() As Boolean
            Return Me.IsNull(Me.tableaccountsglaccountmaster.octcreditsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetoctcreditsNull()
            Me(Me.tableaccountsglaccountmaster.octcreditsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsnovdebitsNull() As Boolean
            Return Me.IsNull(Me.tableaccountsglaccountmaster.novdebitsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetnovdebitsNull()
            Me(Me.tableaccountsglaccountmaster.novdebitsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsnovcreditsNull() As Boolean
            Return Me.IsNull(Me.tableaccountsglaccountmaster.novcreditsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetnovcreditsNull()
            Me(Me.tableaccountsglaccountmaster.novcreditsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsdecdebitsNull() As Boolean
            Return Me.IsNull(Me.tableaccountsglaccountmaster.decdebitsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetdecdebitsNull()
            Me(Me.tableaccountsglaccountmaster.decdebitsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsdeccreditsNull() As Boolean
            Return Me.IsNull(Me.tableaccountsglaccountmaster.deccreditsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetdeccreditsNull()
            Me(Me.tableaccountsglaccountmaster.deccreditsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsjandebitsNull() As Boolean
            Return Me.IsNull(Me.tableaccountsglaccountmaster.jandebitsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetjandebitsNull()
            Me(Me.tableaccountsglaccountmaster.jandebitsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsjancreditsNull() As Boolean
            Return Me.IsNull(Me.tableaccountsglaccountmaster.jancreditsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetjancreditsNull()
            Me(Me.tableaccountsglaccountmaster.jancreditsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsfebdebitsNull() As Boolean
            Return Me.IsNull(Me.tableaccountsglaccountmaster.febdebitsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetfebdebitsNull()
            Me(Me.tableaccountsglaccountmaster.febdebitsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsfebcreditsNull() As Boolean
            Return Me.IsNull(Me.tableaccountsglaccountmaster.febcreditsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetfebcreditsNull()
            Me(Me.tableaccountsglaccountmaster.febcreditsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsmardebitsNull() As Boolean
            Return Me.IsNull(Me.tableaccountsglaccountmaster.mardebitsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetmardebitsNull()
            Me(Me.tableaccountsglaccountmaster.mardebitsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsmarcreditsNull() As Boolean
            Return Me.IsNull(Me.tableaccountsglaccountmaster.marcreditsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetmarcreditsNull()
            Me(Me.tableaccountsglaccountmaster.marcreditsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsactuallastyearNull() As Boolean
            Return Me.IsNull(Me.tableaccountsglaccountmaster.actuallastyearColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetactuallastyearNull()
            Me(Me.tableaccountsglaccountmaster.actuallastyearColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsprojectedlastyearNull() As Boolean
            Return Me.IsNull(Me.tableaccountsglaccountmaster.projectedlastyearColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetprojectedlastyearNull()
            Me(Me.tableaccountsglaccountmaster.projectedlastyearColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsactualcurrentyearNull() As Boolean
            Return Me.IsNull(Me.tableaccountsglaccountmaster.actualcurrentyearColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetactualcurrentyearNull()
            Me(Me.tableaccountsglaccountmaster.actualcurrentyearColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsprojectedcurrentyearNull() As Boolean
            Return Me.IsNull(Me.tableaccountsglaccountmaster.projectedcurrentyearColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetprojectedcurrentyearNull()
            Me(Me.tableaccountsglaccountmaster.projectedcurrentyearColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsactualnextyearNull() As Boolean
            Return Me.IsNull(Me.tableaccountsglaccountmaster.actualnextyearColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetactualnextyearNull()
            Me(Me.tableaccountsglaccountmaster.actualnextyearColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsprojectednextyearNull() As Boolean
            Return Me.IsNull(Me.tableaccountsglaccountmaster.projectednextyearColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetprojectednextyearNull()
            Me(Me.tableaccountsglaccountmaster.projectednextyearColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsadduseridNull() As Boolean
            Return Me.IsNull(Me.tableaccountsglaccountmaster.adduseridColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetadduseridNull()
            Me(Me.tableaccountsglaccountmaster.adduseridColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsadddatetimeNull() As Boolean
            Return Me.IsNull(Me.tableaccountsglaccountmaster.adddatetimeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetadddatetimeNull()
            Me(Me.tableaccountsglaccountmaster.adddatetimeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsupdateuseridNull() As Boolean
            Return Me.IsNull(Me.tableaccountsglaccountmaster.updateuseridColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetupdateuseridNull()
            Me(Me.tableaccountsglaccountmaster.updateuseridColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsupdatedatetimeNull() As Boolean
            Return Me.IsNull(Me.tableaccountsglaccountmaster.updatedatetimeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetupdatedatetimeNull()
            Me(Me.tableaccountsglaccountmaster.updatedatetimeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsfreezeflagNull() As Boolean
            Return Me.IsNull(Me.tableaccountsglaccountmaster.freezeflagColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetfreezeflagNull()
            Me(Me.tableaccountsglaccountmaster.freezeflagColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsfreezeuseridNull() As Boolean
            Return Me.IsNull(Me.tableaccountsglaccountmaster.freezeuseridColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetfreezeuseridNull()
            Me(Me.tableaccountsglaccountmaster.freezeuseridColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsfreezedatetimeNull() As Boolean
            Return Me.IsNull(Me.tableaccountsglaccountmaster.freezedatetimeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetfreezedatetimeNull()
            Me(Me.tableaccountsglaccountmaster.freezedatetimeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBSPLNull() As Boolean
            Return Me.IsNull(Me.tableaccountsglaccountmaster.BSPLColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBSPLNull()
            Me(Me.tableaccountsglaccountmaster.BSPLColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFREZEEFLAGNull() As Boolean
            Return Me.IsNull(Me.tableaccountsglaccountmaster.FREZEEFLAGColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFREZEEFLAGNull()
            Me(Me.tableaccountsglaccountmaster.FREZEEFLAGColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCATEGORYNull() As Boolean
            Return Me.IsNull(Me.tableaccountsglaccountmaster.CATEGORYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCATEGORYNull()
            Me(Me.tableaccountsglaccountmaster.CATEGORYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDEPPERNull() As Boolean
            Return Me.IsNull(Me.tableaccountsglaccountmaster.DEPPERColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDEPPERNull()
            Me(Me.tableaccountsglaccountmaster.DEPPERColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSUBSUBGROUPNull() As Boolean
            Return Me.IsNull(Me.tableaccountsglaccountmaster.SUBSUBGROUPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSUBSUBGROUPNull()
            Me(Me.tableaccountsglaccountmaster.SUBSUBGROUPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSLTYPENull() As Boolean
            Return Me.IsNull(Me.tableaccountsglaccountmaster.SLTYPEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSLTYPENull()
            Me(Me.tableaccountsglaccountmaster.SLTYPEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCOSTNull() As Boolean
            Return Me.IsNull(Me.tableaccountsglaccountmaster.COSTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCOSTNull()
            Me(Me.tableaccountsglaccountmaster.COSTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCOSTMASTERNull() As Boolean
            Return Me.IsNull(Me.tableaccountsglaccountmaster.COSTMASTERColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCOSTMASTERNull()
            Me(Me.tableaccountsglaccountmaster.COSTMASTERColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsADD_DATENull() As Boolean
            Return Me.IsNull(Me.tableaccountsglaccountmaster.ADD_DATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetADD_DATENull()
            Me(Me.tableaccountsglaccountmaster.ADD_DATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsADD_USERNull() As Boolean
            Return Me.IsNull(Me.tableaccountsglaccountmaster.ADD_USERColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetADD_USERNull()
            Me(Me.tableaccountsglaccountmaster.ADD_USERColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsUPD_USERNull() As Boolean
            Return Me.IsNull(Me.tableaccountsglaccountmaster.UPD_USERColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetUPD_USERNull()
            Me(Me.tableaccountsglaccountmaster.UPD_USERColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsUPD_DATENull() As Boolean
            Return Me.IsNull(Me.tableaccountsglaccountmaster.UPD_DATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetUPD_DATENull()
            Me(Me.tableaccountsglaccountmaster.UPD_DATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsVOIDUSERNull() As Boolean
            Return Me.IsNull(Me.tableaccountsglaccountmaster.VOIDUSERColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetVOIDUSERNull()
            Me(Me.tableaccountsglaccountmaster.VOIDUSERColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsVOIDDATENull() As Boolean
            Return Me.IsNull(Me.tableaccountsglaccountmaster.VOIDDATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetVOIDDATENull()
            Me(Me.tableaccountsglaccountmaster.VOIDDATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAUTHORISEDNull() As Boolean
            Return Me.IsNull(Me.tableaccountsglaccountmaster.AUTHORISEDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAUTHORISEDNull()
            Me(Me.tableaccountsglaccountmaster.AUTHORISEDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAUTHORISE_LEVEL1Null() As Boolean
            Return Me.IsNull(Me.tableaccountsglaccountmaster.AUTHORISE_LEVEL1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAUTHORISE_LEVEL1Null()
            Me(Me.tableaccountsglaccountmaster.AUTHORISE_LEVEL1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAUTHORISE_USER1Null() As Boolean
            Return Me.IsNull(Me.tableaccountsglaccountmaster.AUTHORISE_USER1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAUTHORISE_USER1Null()
            Me(Me.tableaccountsglaccountmaster.AUTHORISE_USER1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAUTHORISE_DATE1Null() As Boolean
            Return Me.IsNull(Me.tableaccountsglaccountmaster.AUTHORISE_DATE1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAUTHORISE_DATE1Null()
            Me(Me.tableaccountsglaccountmaster.AUTHORISE_DATE1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAUTHORISE_LEVEL2Null() As Boolean
            Return Me.IsNull(Me.tableaccountsglaccountmaster.AUTHORISE_LEVEL2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAUTHORISE_LEVEL2Null()
            Me(Me.tableaccountsglaccountmaster.AUTHORISE_LEVEL2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAUTHORISE_USER2Null() As Boolean
            Return Me.IsNull(Me.tableaccountsglaccountmaster.AUTHORISE_USER2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAUTHORISE_USER2Null()
            Me(Me.tableaccountsglaccountmaster.AUTHORISE_USER2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAUTHORISE_DATE2Null() As Boolean
            Return Me.IsNull(Me.tableaccountsglaccountmaster.AUTHORISE_DATE2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAUTHORISE_DATE2Null()
            Me(Me.tableaccountsglaccountmaster.AUTHORISE_DATE2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAUTHORISE_LEVEL3Null() As Boolean
            Return Me.IsNull(Me.tableaccountsglaccountmaster.AUTHORISE_LEVEL3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAUTHORISE_LEVEL3Null()
            Me(Me.tableaccountsglaccountmaster.AUTHORISE_LEVEL3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAUTHORISE_USER3Null() As Boolean
            Return Me.IsNull(Me.tableaccountsglaccountmaster.AUTHORISE_USER3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAUTHORISE_USER3Null()
            Me(Me.tableaccountsglaccountmaster.AUTHORISE_USER3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAUTHORISE_DATE3Null() As Boolean
            Return Me.IsNull(Me.tableaccountsglaccountmaster.AUTHORISE_DATE3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAUTHORISE_DATE3Null()
            Me(Me.tableaccountsglaccountmaster.AUTHORISE_DATE3Column) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class GSTSUBSBILLDETAILSRow
        Inherits Global.System.Data.DataRow
        
        Private tableGSTSUBSBILLDETAILS As GSTSUBSBILLDETAILSDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableGSTSUBSBILLDETAILS = CType(Me.Table,GSTSUBSBILLDETAILSDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property billno() As String
            Get
                Try 
                    Return CType(Me(Me.tableGSTSUBSBILLDETAILS.billnoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'billno' in table 'GSTSUBSBILLDETAILS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGSTSUBSBILLDETAILS.billnoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property billdate() As Date
            Get
                Try 
                    Return CType(Me(Me.tableGSTSUBSBILLDETAILS.billdateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'billdate' in table 'GSTSUBSBILLDETAILS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGSTSUBSBILLDETAILS.billdateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property membertype() As String
            Get
                Try 
                    Return CType(Me(Me.tableGSTSUBSBILLDETAILS.membertypeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'membertype' in table 'GSTSUBSBILLDETAILS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGSTSUBSBILLDETAILS.membertypeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MNAME() As String
            Get
                Try 
                    Return CType(Me(Me.tableGSTSUBSBILLDETAILS.MNAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MNAME' in table 'GSTSUBSBILLDETAILS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGSTSUBSBILLDETAILS.MNAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SUBSCODE() As String
            Get
                Try 
                    Return CType(Me(Me.tableGSTSUBSBILLDETAILS.SUBSCODEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SUBSCODE' in table 'GSTSUBSBILLDETAILS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGSTSUBSBILLDETAILS.SUBSCODEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property subsdesc() As String
            Get
                Try 
                    Return CType(Me(Me.tableGSTSUBSBILLDETAILS.subsdescColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'subsdesc' in table 'GSTSUBSBILLDETAILS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGSTSUBSBILLDETAILS.subsdescColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property billingbasis() As String
            Get
                Try 
                    Return CType(Me(Me.tableGSTSUBSBILLDETAILS.billingbasisColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'billingbasis' in table 'GSTSUBSBILLDETAILS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGSTSUBSBILLDETAILS.billingbasisColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property type() As String
            Get
                Try 
                    Return CType(Me(Me.tableGSTSUBSBILLDETAILS.typeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'type' in table 'GSTSUBSBILLDETAILS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGSTSUBSBILLDETAILS.typeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SUBSAMOUNT() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableGSTSUBSBILLDETAILS.SUBSAMOUNTColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SUBSAMOUNT' in table 'GSTSUBSBILLDETAILS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGSTSUBSBILLDETAILS.SUBSAMOUNTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SGST() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableGSTSUBSBILLDETAILS.SGSTColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SGST' in table 'GSTSUBSBILLDETAILS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGSTSUBSBILLDETAILS.SGSTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CGST() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableGSTSUBSBILLDETAILS.CGSTColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CGST' in table 'GSTSUBSBILLDETAILS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGSTSUBSBILLDETAILS.CGSTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CESS() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableGSTSUBSBILLDETAILS.CESSColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CESS' in table 'GSTSUBSBILLDETAILS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGSTSUBSBILLDETAILS.CESSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TOTAL() As Decimal
            Get
                Return CType(Me(Me.tableGSTSUBSBILLDETAILS.TOTALColumn),Decimal)
            End Get
            Set
                Me(Me.tableGSTSUBSBILLDETAILS.TOTALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TAXCODE() As String
            Get
                Try 
                    Return CType(Me(Me.tableGSTSUBSBILLDETAILS.TAXCODEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TAXCODE' in table 'GSTSUBSBILLDETAILS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGSTSUBSBILLDETAILS.TAXCODEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TAXDESC() As String
            Get
                Return CType(Me(Me.tableGSTSUBSBILLDETAILS.TAXDESCColumn),String)
            End Get
            Set
                Me(Me.tableGSTSUBSBILLDETAILS.TAXDESCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MCODE() As String
            Get
                Try 
                    Return CType(Me(Me.tableGSTSUBSBILLDETAILS.MCODEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MCODE' in table 'GSTSUBSBILLDETAILS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGSTSUBSBILLDETAILS.MCODEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property postingsno() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableGSTSUBSBILLDETAILS.postingsnoColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'postingsno' in table 'GSTSUBSBILLDETAILS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGSTSUBSBILLDETAILS.postingsnoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CONTADD1() As String
            Get
                Return CType(Me(Me.tableGSTSUBSBILLDETAILS.CONTADD1Column),String)
            End Get
            Set
                Me(Me.tableGSTSUBSBILLDETAILS.CONTADD1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CONTADD2() As String
            Get
                Return CType(Me(Me.tableGSTSUBSBILLDETAILS.CONTADD2Column),String)
            End Get
            Set
                Me(Me.tableGSTSUBSBILLDETAILS.CONTADD2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CONTADD3() As String
            Get
                Return CType(Me(Me.tableGSTSUBSBILLDETAILS.CONTADD3Column),String)
            End Get
            Set
                Me(Me.tableGSTSUBSBILLDETAILS.CONTADD3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CONTCITY() As String
            Get
                Return CType(Me(Me.tableGSTSUBSBILLDETAILS.CONTCITYColumn),String)
            End Get
            Set
                Me(Me.tableGSTSUBSBILLDETAILS.CONTCITYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CONTSTATE() As String
            Get
                Return CType(Me(Me.tableGSTSUBSBILLDETAILS.CONTSTATEColumn),String)
            End Get
            Set
                Me(Me.tableGSTSUBSBILLDETAILS.CONTSTATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CGSTTAXPER() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableGSTSUBSBILLDETAILS.CGSTTAXPERColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CGSTTAXPER' in table 'GSTSUBSBILLDETAILS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGSTSUBSBILLDETAILS.CGSTTAXPERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SGSTTAXPER() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableGSTSUBSBILLDETAILS.SGSTTAXPERColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SGSTTAXPER' in table 'GSTSUBSBILLDETAILS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGSTSUBSBILLDETAILS.SGSTTAXPERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CESSTAXPER() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableGSTSUBSBILLDETAILS.CESSTAXPERColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CESSTAXPER' in table 'GSTSUBSBILLDETAILS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableGSTSUBSBILLDETAILS.CESSTAXPERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsbillnoNull() As Boolean
            Return Me.IsNull(Me.tableGSTSUBSBILLDETAILS.billnoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetbillnoNull()
            Me(Me.tableGSTSUBSBILLDETAILS.billnoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsbilldateNull() As Boolean
            Return Me.IsNull(Me.tableGSTSUBSBILLDETAILS.billdateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetbilldateNull()
            Me(Me.tableGSTSUBSBILLDETAILS.billdateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsmembertypeNull() As Boolean
            Return Me.IsNull(Me.tableGSTSUBSBILLDETAILS.membertypeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetmembertypeNull()
            Me(Me.tableGSTSUBSBILLDETAILS.membertypeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMNAMENull() As Boolean
            Return Me.IsNull(Me.tableGSTSUBSBILLDETAILS.MNAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMNAMENull()
            Me(Me.tableGSTSUBSBILLDETAILS.MNAMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSUBSCODENull() As Boolean
            Return Me.IsNull(Me.tableGSTSUBSBILLDETAILS.SUBSCODEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSUBSCODENull()
            Me(Me.tableGSTSUBSBILLDETAILS.SUBSCODEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IssubsdescNull() As Boolean
            Return Me.IsNull(Me.tableGSTSUBSBILLDETAILS.subsdescColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetsubsdescNull()
            Me(Me.tableGSTSUBSBILLDETAILS.subsdescColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsbillingbasisNull() As Boolean
            Return Me.IsNull(Me.tableGSTSUBSBILLDETAILS.billingbasisColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetbillingbasisNull()
            Me(Me.tableGSTSUBSBILLDETAILS.billingbasisColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IstypeNull() As Boolean
            Return Me.IsNull(Me.tableGSTSUBSBILLDETAILS.typeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SettypeNull()
            Me(Me.tableGSTSUBSBILLDETAILS.typeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSUBSAMOUNTNull() As Boolean
            Return Me.IsNull(Me.tableGSTSUBSBILLDETAILS.SUBSAMOUNTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSUBSAMOUNTNull()
            Me(Me.tableGSTSUBSBILLDETAILS.SUBSAMOUNTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSGSTNull() As Boolean
            Return Me.IsNull(Me.tableGSTSUBSBILLDETAILS.SGSTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSGSTNull()
            Me(Me.tableGSTSUBSBILLDETAILS.SGSTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCGSTNull() As Boolean
            Return Me.IsNull(Me.tableGSTSUBSBILLDETAILS.CGSTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCGSTNull()
            Me(Me.tableGSTSUBSBILLDETAILS.CGSTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCESSNull() As Boolean
            Return Me.IsNull(Me.tableGSTSUBSBILLDETAILS.CESSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCESSNull()
            Me(Me.tableGSTSUBSBILLDETAILS.CESSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTAXCODENull() As Boolean
            Return Me.IsNull(Me.tableGSTSUBSBILLDETAILS.TAXCODEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTAXCODENull()
            Me(Me.tableGSTSUBSBILLDETAILS.TAXCODEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMCODENull() As Boolean
            Return Me.IsNull(Me.tableGSTSUBSBILLDETAILS.MCODEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMCODENull()
            Me(Me.tableGSTSUBSBILLDETAILS.MCODEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IspostingsnoNull() As Boolean
            Return Me.IsNull(Me.tableGSTSUBSBILLDETAILS.postingsnoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetpostingsnoNull()
            Me(Me.tableGSTSUBSBILLDETAILS.postingsnoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCGSTTAXPERNull() As Boolean
            Return Me.IsNull(Me.tableGSTSUBSBILLDETAILS.CGSTTAXPERColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCGSTTAXPERNull()
            Me(Me.tableGSTSUBSBILLDETAILS.CGSTTAXPERColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSGSTTAXPERNull() As Boolean
            Return Me.IsNull(Me.tableGSTSUBSBILLDETAILS.SGSTTAXPERColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSGSTTAXPERNull()
            Me(Me.tableGSTSUBSBILLDETAILS.SGSTTAXPERColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCESSTAXPERNull() As Boolean
            Return Me.IsNull(Me.tableGSTSUBSBILLDETAILS.CESSTAXPERColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCESSTAXPERNull()
            Me(Me.tableGSTSUBSBILLDETAILS.CESSTAXPERColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class clubmasterRow
        Inherits Global.System.Data.DataRow
        
        Private tableclubmaster As clubmasterDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableclubmaster = CType(Me.Table,clubmasterDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property COMPANYNAME() As String
            Get
                Try 
                    Return CType(Me(Me.tableclubmaster.COMPANYNAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'COMPANYNAME' in table 'clubmaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableclubmaster.COMPANYNAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FROMDATE() As Date
            Get
                Try 
                    Return CType(Me(Me.tableclubmaster.FROMDATEColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FROMDATE' in table 'clubmaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableclubmaster.FROMDATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TODATE() As Date
            Get
                Try 
                    Return CType(Me(Me.tableclubmaster.TODATEColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TODATE' in table 'clubmaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableclubmaster.TODATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SHORTNAME() As String
            Get
                Try 
                    Return CType(Me(Me.tableclubmaster.SHORTNAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SHORTNAME' in table 'clubmaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableclubmaster.SHORTNAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ADD1() As String
            Get
                Try 
                    Return CType(Me(Me.tableclubmaster.ADD1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ADD1' in table 'clubmaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableclubmaster.ADD1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ADD2() As String
            Get
                Try 
                    Return CType(Me(Me.tableclubmaster.ADD2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ADD2' in table 'clubmaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableclubmaster.ADD2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CITY() As String
            Get
                Try 
                    Return CType(Me(Me.tableclubmaster.CITYColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CITY' in table 'clubmaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableclubmaster.CITYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property STATE() As String
            Get
                Try 
                    Return CType(Me(Me.tableclubmaster.STATEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'STATE' in table 'clubmaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableclubmaster.STATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PINCODE() As String
            Get
                Try 
                    Return CType(Me(Me.tableclubmaster.PINCODEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PINCODE' in table 'clubmaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableclubmaster.PINCODEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PHONE1() As String
            Get
                Try 
                    Return CType(Me(Me.tableclubmaster.PHONE1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PHONE1' in table 'clubmaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableclubmaster.PHONE1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PHONE2() As String
            Get
                Try 
                    Return CType(Me(Me.tableclubmaster.PHONE2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PHONE2' in table 'clubmaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableclubmaster.PHONE2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FAX() As String
            Get
                Try 
                    Return CType(Me(Me.tableclubmaster.FAXColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FAX' in table 'clubmaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableclubmaster.FAXColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property EMAIL() As String
            Get
                Try 
                    Return CType(Me(Me.tableclubmaster.EMAILColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EMAIL' in table 'clubmaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableclubmaster.EMAILColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property WEBSITE() As String
            Get
                Try 
                    Return CType(Me(Me.tableclubmaster.WEBSITEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'WEBSITE' in table 'clubmaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableclubmaster.WEBSITEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DATAfile() As String
            Get
                Try 
                    Return CType(Me(Me.tableclubmaster.DATAfileColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DATAfile' in table 'clubmaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableclubmaster.DATAfileColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property INDATE() As Date
            Get
                Try 
                    Return CType(Me(Me.tableclubmaster.INDATEColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'INDATE' in table 'clubmaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableclubmaster.INDATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FRONT() As String
            Get
                Try 
                    Return CType(Me(Me.tableclubmaster.FRONTColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FRONT' in table 'clubmaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableclubmaster.FRONTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FRONTFILE() As String
            Get
                Try 
                    Return CType(Me(Me.tableclubmaster.FRONTFILEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FRONTFILE' in table 'clubmaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableclubmaster.FRONTFILEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MAIN() As String
            Get
                Try 
                    Return CType(Me(Me.tableclubmaster.MAINColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MAIN' in table 'clubmaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableclubmaster.MAINColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MAINFILE() As String
            Get
                Try 
                    Return CType(Me(Me.tableclubmaster.MAINFILEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MAINFILE' in table 'clubmaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableclubmaster.MAINFILEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property LOGO() As String
            Get
                Try 
                    Return CType(Me(Me.tableclubmaster.LOGOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LOGO' in table 'clubmaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableclubmaster.LOGOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property LOGOFILE() As String
            Get
                Try 
                    Return CType(Me(Me.tableclubmaster.LOGOFILEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LOGOFILE' in table 'clubmaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableclubmaster.LOGOFILEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property COMP() As String
            Get
                Try 
                    Return CType(Me(Me.tableclubmaster.COMPColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'COMP' in table 'clubmaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableclubmaster.COMPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property COMP1() As String
            Get
                Try 
                    Return CType(Me(Me.tableclubmaster.COMP1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'COMP1' in table 'clubmaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableclubmaster.COMP1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property comptdacc() As String
            Get
                Try 
                    Return CType(Me(Me.tableclubmaster.comptdaccColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'comptdacc' in table 'clubmaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableclubmaster.comptdaccColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property comppanno() As String
            Get
                Try 
                    Return CType(Me(Me.tableclubmaster.comppannoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'comppanno' in table 'clubmaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableclubmaster.comppannoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property branchcode() As String
            Get
                Try 
                    Return CType(Me(Me.tableclubmaster.branchcodeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'branchcode' in table 'clubmaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableclubmaster.branchcodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property actflag() As String
            Get
                Try 
                    Return CType(Me(Me.tableclubmaster.actflagColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'actflag' in table 'clubmaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableclubmaster.actflagColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SNO() As String
            Get
                Try 
                    Return CType(Me(Me.tableclubmaster.SNOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SNO' in table 'clubmaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableclubmaster.SNOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ACTIVE() As String
            Get
                Try 
                    Return CType(Me(Me.tableclubmaster.ACTIVEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ACTIVE' in table 'clubmaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableclubmaster.ACTIVEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property slno() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableclubmaster.slnoColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'slno' in table 'clubmaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableclubmaster.slnoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TINNO() As String
            Get
                Try 
                    Return CType(Me(Me.tableclubmaster.TINNOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TINNO' in table 'clubmaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableclubmaster.TINNOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PRINTFLAG() As String
            Get
                Try 
                    Return CType(Me(Me.tableclubmaster.PRINTFLAGColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PRINTFLAG' in table 'clubmaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableclubmaster.PRINTFLAGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property expirydate() As Date
            Get
                Try 
                    Return CType(Me(Me.tableclubmaster.expirydateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'expirydate' in table 'clubmaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableclubmaster.expirydateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ServiceTax() As String
            Get
                Try 
                    Return CType(Me(Me.tableclubmaster.ServiceTaxColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ServiceTax' in table 'clubmaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableclubmaster.ServiceTaxColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property HISTORY() As String
            Get
                Try 
                    Return CType(Me(Me.tableclubmaster.HISTORYColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HISTORY' in table 'clubmaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableclubmaster.HISTORYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GSTINNO() As String
            Get
                Try 
                    Return CType(Me(Me.tableclubmaster.GSTINNOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GSTINNO' in table 'clubmaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableclubmaster.GSTINNOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property STATECODE() As String
            Get
                Try 
                    Return CType(Me(Me.tableclubmaster.STATECODEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'STATECODE' in table 'clubmaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableclubmaster.STATECODEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCOMPANYNAMENull() As Boolean
            Return Me.IsNull(Me.tableclubmaster.COMPANYNAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCOMPANYNAMENull()
            Me(Me.tableclubmaster.COMPANYNAMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFROMDATENull() As Boolean
            Return Me.IsNull(Me.tableclubmaster.FROMDATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFROMDATENull()
            Me(Me.tableclubmaster.FROMDATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTODATENull() As Boolean
            Return Me.IsNull(Me.tableclubmaster.TODATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTODATENull()
            Me(Me.tableclubmaster.TODATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSHORTNAMENull() As Boolean
            Return Me.IsNull(Me.tableclubmaster.SHORTNAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSHORTNAMENull()
            Me(Me.tableclubmaster.SHORTNAMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsADD1Null() As Boolean
            Return Me.IsNull(Me.tableclubmaster.ADD1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetADD1Null()
            Me(Me.tableclubmaster.ADD1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsADD2Null() As Boolean
            Return Me.IsNull(Me.tableclubmaster.ADD2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetADD2Null()
            Me(Me.tableclubmaster.ADD2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCITYNull() As Boolean
            Return Me.IsNull(Me.tableclubmaster.CITYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCITYNull()
            Me(Me.tableclubmaster.CITYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSTATENull() As Boolean
            Return Me.IsNull(Me.tableclubmaster.STATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSTATENull()
            Me(Me.tableclubmaster.STATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPINCODENull() As Boolean
            Return Me.IsNull(Me.tableclubmaster.PINCODEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPINCODENull()
            Me(Me.tableclubmaster.PINCODEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPHONE1Null() As Boolean
            Return Me.IsNull(Me.tableclubmaster.PHONE1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPHONE1Null()
            Me(Me.tableclubmaster.PHONE1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPHONE2Null() As Boolean
            Return Me.IsNull(Me.tableclubmaster.PHONE2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPHONE2Null()
            Me(Me.tableclubmaster.PHONE2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFAXNull() As Boolean
            Return Me.IsNull(Me.tableclubmaster.FAXColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFAXNull()
            Me(Me.tableclubmaster.FAXColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsEMAILNull() As Boolean
            Return Me.IsNull(Me.tableclubmaster.EMAILColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetEMAILNull()
            Me(Me.tableclubmaster.EMAILColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsWEBSITENull() As Boolean
            Return Me.IsNull(Me.tableclubmaster.WEBSITEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetWEBSITENull()
            Me(Me.tableclubmaster.WEBSITEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDATAfileNull() As Boolean
            Return Me.IsNull(Me.tableclubmaster.DATAfileColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDATAfileNull()
            Me(Me.tableclubmaster.DATAfileColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsINDATENull() As Boolean
            Return Me.IsNull(Me.tableclubmaster.INDATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetINDATENull()
            Me(Me.tableclubmaster.INDATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFRONTNull() As Boolean
            Return Me.IsNull(Me.tableclubmaster.FRONTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFRONTNull()
            Me(Me.tableclubmaster.FRONTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFRONTFILENull() As Boolean
            Return Me.IsNull(Me.tableclubmaster.FRONTFILEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFRONTFILENull()
            Me(Me.tableclubmaster.FRONTFILEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMAINNull() As Boolean
            Return Me.IsNull(Me.tableclubmaster.MAINColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMAINNull()
            Me(Me.tableclubmaster.MAINColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMAINFILENull() As Boolean
            Return Me.IsNull(Me.tableclubmaster.MAINFILEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMAINFILENull()
            Me(Me.tableclubmaster.MAINFILEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsLOGONull() As Boolean
            Return Me.IsNull(Me.tableclubmaster.LOGOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetLOGONull()
            Me(Me.tableclubmaster.LOGOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsLOGOFILENull() As Boolean
            Return Me.IsNull(Me.tableclubmaster.LOGOFILEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetLOGOFILENull()
            Me(Me.tableclubmaster.LOGOFILEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCOMPNull() As Boolean
            Return Me.IsNull(Me.tableclubmaster.COMPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCOMPNull()
            Me(Me.tableclubmaster.COMPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCOMP1Null() As Boolean
            Return Me.IsNull(Me.tableclubmaster.COMP1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCOMP1Null()
            Me(Me.tableclubmaster.COMP1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IscomptdaccNull() As Boolean
            Return Me.IsNull(Me.tableclubmaster.comptdaccColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetcomptdaccNull()
            Me(Me.tableclubmaster.comptdaccColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IscomppannoNull() As Boolean
            Return Me.IsNull(Me.tableclubmaster.comppannoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetcomppannoNull()
            Me(Me.tableclubmaster.comppannoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsbranchcodeNull() As Boolean
            Return Me.IsNull(Me.tableclubmaster.branchcodeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetbranchcodeNull()
            Me(Me.tableclubmaster.branchcodeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsactflagNull() As Boolean
            Return Me.IsNull(Me.tableclubmaster.actflagColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetactflagNull()
            Me(Me.tableclubmaster.actflagColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSNONull() As Boolean
            Return Me.IsNull(Me.tableclubmaster.SNOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSNONull()
            Me(Me.tableclubmaster.SNOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsACTIVENull() As Boolean
            Return Me.IsNull(Me.tableclubmaster.ACTIVEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetACTIVENull()
            Me(Me.tableclubmaster.ACTIVEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsslnoNull() As Boolean
            Return Me.IsNull(Me.tableclubmaster.slnoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetslnoNull()
            Me(Me.tableclubmaster.slnoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTINNONull() As Boolean
            Return Me.IsNull(Me.tableclubmaster.TINNOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTINNONull()
            Me(Me.tableclubmaster.TINNOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPRINTFLAGNull() As Boolean
            Return Me.IsNull(Me.tableclubmaster.PRINTFLAGColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPRINTFLAGNull()
            Me(Me.tableclubmaster.PRINTFLAGColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsexpirydateNull() As Boolean
            Return Me.IsNull(Me.tableclubmaster.expirydateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetexpirydateNull()
            Me(Me.tableclubmaster.expirydateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsServiceTaxNull() As Boolean
            Return Me.IsNull(Me.tableclubmaster.ServiceTaxColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetServiceTaxNull()
            Me(Me.tableclubmaster.ServiceTaxColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsHISTORYNull() As Boolean
            Return Me.IsNull(Me.tableclubmaster.HISTORYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetHISTORYNull()
            Me(Me.tableclubmaster.HISTORYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsGSTINNONull() As Boolean
            Return Me.IsNull(Me.tableclubmaster.GSTINNOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetGSTINNONull()
            Me(Me.tableclubmaster.GSTINNOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSTATECODENull() As Boolean
            Return Me.IsNull(Me.tableclubmaster.STATECODEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSTATECODENull()
            Me(Me.tableclubmaster.STATECODEColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class membermasterRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As membermasterRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As membermasterRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As membermasterRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class View_DRCR_SUMRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As View_DRCR_SUMRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As View_DRCR_SUMRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As View_DRCR_SUMRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class MEM_POS_DETRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As MEM_POS_DETRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As MEM_POS_DETRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As MEM_POS_DETRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class VIEW_WBSTRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As VIEW_WBSTRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As VIEW_WBSTRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As VIEW_WBSTRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class View_Recipt_DetCCLRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As View_Recipt_DetCCLRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As View_Recipt_DetCCLRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As View_Recipt_DetCCLRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class MEMBER_CONSUMPTION_OUTLETRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As MEMBER_CONSUMPTION_OUTLETRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As MEMBER_CONSUMPTION_OUTLETRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As MEMBER_CONSUMPTION_OUTLETRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class VW_CommitteeTransactionRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As VW_CommitteeTransactionRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As VW_CommitteeTransactionRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As VW_CommitteeTransactionRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class accountsglaccountmasterRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As accountsglaccountmasterRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As accountsglaccountmasterRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As accountsglaccountmasterRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class GSTSUBSBILLDETAILSRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As GSTSUBSBILLDETAILSRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As GSTSUBSBILLDETAILSRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As GSTSUBSBILLDETAILSRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class clubmasterRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As clubmasterRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As clubmasterRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As clubmasterRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class

Namespace DataSet2TableAdapters
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class membermasterTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "membermaster"
            tableMapping.ColumnMappings.Add("SequenceNo", "SequenceNo")
            tableMapping.ColumnMappings.Add("TAG", "TAG")
            tableMapping.ColumnMappings.Add("MEMBERTYPECODE", "MEMBERTYPECODE")
            tableMapping.ColumnMappings.Add("COMPANY", "COMPANY")
            tableMapping.ColumnMappings.Add("SUBCD", "SUBCD")
            tableMapping.ColumnMappings.Add("MCODE", "MCODE")
            tableMapping.ColumnMappings.Add("MNAME", "MNAME")
            tableMapping.ColumnMappings.Add("MID", "MID")
            tableMapping.ColumnMappings.Add("DOB", "DOB")
            tableMapping.ColumnMappings.Add("DOJ", "DOJ")
            tableMapping.ColumnMappings.Add("SEX", "SEX")
            tableMapping.ColumnMappings.Add("MARITALSTATUS", "MARITALSTATUS")
            tableMapping.ColumnMappings.Add("SPOUSE", "SPOUSE")
            tableMapping.ColumnMappings.Add("BG", "BG")
            tableMapping.ColumnMappings.Add("OCCUPATION", "OCCUPATION")
            tableMapping.ColumnMappings.Add("BANKER", "BANKER")
            tableMapping.ColumnMappings.Add("BANKACNO", "BANKACNO")
            tableMapping.ColumnMappings.Add("HOBBIES", "HOBBIES")
            tableMapping.ColumnMappings.Add("OTHERINFO", "OTHERINFO")
            tableMapping.ColumnMappings.Add("RESIDENT", "RESIDENT")
            tableMapping.ColumnMappings.Add("EQUALIFICATION", "EQUALIFICATION")
            tableMapping.ColumnMappings.Add("PQUALIFICATION", "PQUALIFICATION")
            tableMapping.ColumnMappings.Add("PROPOSER", "PROPOSER")
            tableMapping.ColumnMappings.Add("PROPOSERNAME", "PROPOSERNAME")
            tableMapping.ColumnMappings.Add("SECONDER", "SECONDER")
            tableMapping.ColumnMappings.Add("SECONDERNAME", "SECONDERNAME")
            tableMapping.ColumnMappings.Add("PAcopyst", "PAcopyst")
            tableMapping.ColumnMappings.Add("PADD1", "PADD1")
            tableMapping.ColumnMappings.Add("PADD2", "PADD2")
            tableMapping.ColumnMappings.Add("PADD3", "PADD3")
            tableMapping.ColumnMappings.Add("PCITY", "PCITY")
            tableMapping.ColumnMappings.Add("PSTATE", "PSTATE")
            tableMapping.ColumnMappings.Add("PCOUNTRY", "PCOUNTRY")
            tableMapping.ColumnMappings.Add("PPIN", "PPIN")
            tableMapping.ColumnMappings.Add("PPHONE1", "PPHONE1")
            tableMapping.ColumnMappings.Add("PPHONE2", "PPHONE2")
            tableMapping.ColumnMappings.Add("PCELL", "PCELL")
            tableMapping.ColumnMappings.Add("PEMAIL", "PEMAIL")
            tableMapping.ColumnMappings.Add("RAcopyst", "RAcopyst")
            tableMapping.ColumnMappings.Add("CADD1", "CADD1")
            tableMapping.ColumnMappings.Add("CADD2", "CADD2")
            tableMapping.ColumnMappings.Add("CADD3", "CADD3")
            tableMapping.ColumnMappings.Add("CCITY", "CCITY")
            tableMapping.ColumnMappings.Add("CSTATE", "CSTATE")
            tableMapping.ColumnMappings.Add("CCOUNTRY", "CCOUNTRY")
            tableMapping.ColumnMappings.Add("CPIN", "CPIN")
            tableMapping.ColumnMappings.Add("CPHONE1", "CPHONE1")
            tableMapping.ColumnMappings.Add("CPHONE2", "CPHONE2")
            tableMapping.ColumnMappings.Add("CCELL", "CCELL")
            tableMapping.ColumnMappings.Add("CEMAIL", "CEMAIL")
            tableMapping.ColumnMappings.Add("CONTADD1", "CONTADD1")
            tableMapping.ColumnMappings.Add("CONTADD2", "CONTADD2")
            tableMapping.ColumnMappings.Add("CONTADD3", "CONTADD3")
            tableMapping.ColumnMappings.Add("CONTCITY", "CONTCITY")
            tableMapping.ColumnMappings.Add("CONTSTATE", "CONTSTATE")
            tableMapping.ColumnMappings.Add("CONTCOUNTRY", "CONTCOUNTRY")
            tableMapping.ColumnMappings.Add("CONTPIN", "CONTPIN")
            tableMapping.ColumnMappings.Add("CONTPHONE1", "CONTPHONE1")
            tableMapping.ColumnMappings.Add("CONTPHONE2", "CONTPHONE2")
            tableMapping.ColumnMappings.Add("CONTCELL", "CONTCELL")
            tableMapping.ColumnMappings.Add("CONTEMAIL", "CONTEMAIL")
            tableMapping.ColumnMappings.Add("EMPTYPE", "EMPTYPE")
            tableMapping.ColumnMappings.Add("BUSINESSNAME", "BUSINESSNAME")
            tableMapping.ColumnMappings.Add("BAcopyst", "BAcopyst")
            tableMapping.ColumnMappings.Add("OADD1", "OADD1")
            tableMapping.ColumnMappings.Add("OADD2", "OADD2")
            tableMapping.ColumnMappings.Add("OADD3", "OADD3")
            tableMapping.ColumnMappings.Add("OCITY", "OCITY")
            tableMapping.ColumnMappings.Add("OSTATE", "OSTATE")
            tableMapping.ColumnMappings.Add("OCOUNTRY", "OCOUNTRY")
            tableMapping.ColumnMappings.Add("OPIN", "OPIN")
            tableMapping.ColumnMappings.Add("OPHONE1", "OPHONE1")
            tableMapping.ColumnMappings.Add("OPHONE2", "OPHONE2")
            tableMapping.ColumnMappings.Add("DOEPROFESSION", "DOEPROFESSION")
            tableMapping.ColumnMappings.Add("BUSINESSNATURE", "BUSINESSNATURE")
            tableMapping.ColumnMappings.Add("POSITIONHELD", "POSITIONHELD")
            tableMapping.ColumnMappings.Add("SERVICENAME", "SERVICENAME")
            tableMapping.ColumnMappings.Add("SERVICEYEAR", "SERVICEYEAR")
            tableMapping.ColumnMappings.Add("PANO", "PANO")
            tableMapping.ColumnMappings.Add("BBANKER", "BBANKER")
            tableMapping.ColumnMappings.Add("CCNO", "CCNO")
            tableMapping.ColumnMappings.Add("ANNUALINCOME", "ANNUALINCOME")
            tableMapping.ColumnMappings.Add("UPDUSERID", "UPDUSERID")
            tableMapping.ColumnMappings.Add("UPDDATETIME", "UPDDATETIME")
            tableMapping.ColumnMappings.Add("TERMINATION", "TERMINATION")
            tableMapping.ColumnMappings.Add("TRN_CON_DATE", "TRN_CON_DATE")
            tableMapping.ColumnMappings.Add("CON_MCODE", "CON_MCODE")
            tableMapping.ColumnMappings.Add("PFAX", "PFAX")
            tableMapping.ColumnMappings.Add("CFAX", "CFAX")
            tableMapping.ColumnMappings.Add("CONTFAX", "CONTFAX")
            tableMapping.ColumnMappings.Add("REASON", "REASON")
            tableMapping.ColumnMappings.Add("PHOTO", "PHOTO")
            tableMapping.ColumnMappings.Add("CREDITLIMIT", "CREDITLIMIT")
            tableMapping.ColumnMappings.Add("LIMITAMOUNT", "LIMITAMOUNT")
            tableMapping.ColumnMappings.Add("WEBSITE", "WEBSITE")
            tableMapping.ColumnMappings.Add("Imagefile", "Imagefile")
            tableMapping.ColumnMappings.Add("sizefield", "sizefield")
            tableMapping.ColumnMappings.Add("Vdate", "Vdate")
            tableMapping.ColumnMappings.Add("Vyear", "Vyear")
            tableMapping.ColumnMappings.Add("Validdate", "Validdate")
            tableMapping.ColumnMappings.Add("TempTermination", "TempTermination")
            tableMapping.ColumnMappings.Add("TempTermDate", "TempTermDate")
            tableMapping.ColumnMappings.Add("TempTermReason", "TempTermReason")
            tableMapping.ColumnMappings.Add("Memberid", "Memberid")
            tableMapping.ColumnMappings.Add("EndingDate", "EndingDate")
            tableMapping.ColumnMappings.Add("TotalYears", "TotalYears")
            tableMapping.ColumnMappings.Add("CardNo", "CardNo")
            tableMapping.ColumnMappings.Add("CardExpDate", "CardExpDate")
            tableMapping.ColumnMappings.Add("Validity", "Validity")
            tableMapping.ColumnMappings.Add("Period", "Period")
            tableMapping.ColumnMappings.Add("Creditcardno", "Creditcardno")
            tableMapping.ColumnMappings.Add("CreditExpDt", "CreditExpDt")
            tableMapping.ColumnMappings.Add("Type", "Type")
            tableMapping.ColumnMappings.Add("STATUSDATEFROM", "STATUSDATEFROM")
            tableMapping.ColumnMappings.Add("STATUSDATETO", "STATUSDATETO")
            tableMapping.ColumnMappings.Add("CurentStatus", "CurentStatus")
            tableMapping.ColumnMappings.Add("FirstName", "FirstName")
            tableMapping.ColumnMappings.Add("MiddleName", "MiddleName")
            tableMapping.ColumnMappings.Add("Surname", "Surname")
            tableMapping.ColumnMappings.Add("Alias", "Alias")
            tableMapping.ColumnMappings.Add("Prefix", "Prefix")
            tableMapping.ColumnMappings.Add("BillType", "BillType")
            tableMapping.ColumnMappings.Add("Nationality", "Nationality")
            tableMapping.ColumnMappings.Add("NationalityAtbirth", "NationalityAtbirth")
            tableMapping.ColumnMappings.Add("Billbasis", "Billbasis")
            tableMapping.ColumnMappings.Add("BillHead", "BillHead")
            tableMapping.ColumnMappings.Add("GDRLocker", "GDRLocker")
            tableMapping.ColumnMappings.Add("LDRLocker", "LDRLocker")
            tableMapping.ColumnMappings.Add("MembershipTo", "MembershipTo")
            tableMapping.ColumnMappings.Add("salut", "salut")
            tableMapping.ColumnMappings.Add("EntranceFee", "EntranceFee")
            tableMapping.ColumnMappings.Add("DevelopmentFee", "DevelopmentFee")
            tableMapping.ColumnMappings.Add("CriditNumber", "CriditNumber")
            tableMapping.ColumnMappings.Add("SecurityDeposit", "SecurityDeposit")
            tableMapping.ColumnMappings.Add("PlaceOfBirth", "PlaceOfBirth")
            tableMapping.ColumnMappings.Add("CountryOfBirth", "CountryOfBirth")
            tableMapping.ColumnMappings.Add("LastArrivalInCal", "LastArrivalInCal")
            tableMapping.ColumnMappings.Add("PeriodOfStay_year", "PeriodOfStay_year")
            tableMapping.ColumnMappings.Add("PeriodOfStay_Month", "PeriodOfStay_Month")
            tableMapping.ColumnMappings.Add("PreviouslyProposed", "PreviouslyProposed")
            tableMapping.ColumnMappings.Add("NoOfTimesProposed", "NoOfTimesProposed")
            tableMapping.ColumnMappings.Add("DateOfProposal", "DateOfProposal")
            tableMapping.ColumnMappings.Add("ResultOfProposal", "ResultOfProposal")
            tableMapping.ColumnMappings.Add("Elected", "Elected")
            tableMapping.ColumnMappings.Add("FatherName", "FatherName")
            tableMapping.ColumnMappings.Add("DOBfather", "DOBfather")
            tableMapping.ColumnMappings.Add("WifeDOB", "WifeDOB")
            tableMapping.ColumnMappings.Add("MaidenNameWife", "MaidenNameWife")
            tableMapping.ColumnMappings.Add("NationalityWife", "NationalityWife")
            tableMapping.ColumnMappings.Add("WifesFatherName", "WifesFatherName")
            tableMapping.ColumnMappings.Add("WifeFatherDOB", "WifeFatherDOB")
            tableMapping.ColumnMappings.Add("ApplNo", "ApplNo")
            tableMapping.ColumnMappings.Add("ApplDate", "ApplDate")
            tableMapping.ColumnMappings.Add("Corporatest", "Corporatest")
            tableMapping.ColumnMappings.Add("CorporateCode", "CorporateCode")
            tableMapping.ColumnMappings.Add("CompName", "CompName")
            tableMapping.ColumnMappings.Add("Designation", "Designation")
            tableMapping.ColumnMappings.Add("ProfessionInfo", "ProfessionInfo")
            tableMapping.ColumnMappings.Add("BuisnessInfo", "BuisnessInfo")
            tableMapping.ColumnMappings.Add("Products", "Products")
            tableMapping.ColumnMappings.Add("AgentsDealers", "AgentsDealers")
            tableMapping.ColumnMappings.Add("ESTDdate", "ESTDdate")
            tableMapping.ColumnMappings.Add("NoOfEmp", "NoOfEmp")
            tableMapping.ColumnMappings.Add("Turnover", "Turnover")
            tableMapping.ColumnMappings.Add("Client", "Client")
            tableMapping.ColumnMappings.Add("AppliedBut", "AppliedBut")
            tableMapping.ColumnMappings.Add("PositionInChamber", "PositionInChamber")
            tableMapping.ColumnMappings.Add("Qulificationstatus", "Qulificationstatus")
            tableMapping.ColumnMappings.Add("Qualification1", "Qualification1")
            tableMapping.ColumnMappings.Add("Details1", "Details1")
            tableMapping.ColumnMappings.Add("YearOfPassing1", "YearOfPassing1")
            tableMapping.ColumnMappings.Add("Institute1", "Institute1")
            tableMapping.ColumnMappings.Add("Division1", "Division1")
            tableMapping.ColumnMappings.Add("Qualification2", "Qualification2")
            tableMapping.ColumnMappings.Add("Details2", "Details2")
            tableMapping.ColumnMappings.Add("YearOfPassing2", "YearOfPassing2")
            tableMapping.ColumnMappings.Add("Institute2", "Institute2")
            tableMapping.ColumnMappings.Add("Division2", "Division2")
            tableMapping.ColumnMappings.Add("Qualification3", "Qualification3")
            tableMapping.ColumnMappings.Add("Details3", "Details3")
            tableMapping.ColumnMappings.Add("YearOfPassing3", "YearOfPassing3")
            tableMapping.ColumnMappings.Add("Institute3", "Institute3")
            tableMapping.ColumnMappings.Add("Division3", "Division3")
            tableMapping.ColumnMappings.Add("sportstatus", "sportstatus")
            tableMapping.ColumnMappings.Add("GameType1", "GameType1")
            tableMapping.ColumnMappings.Add("NameOfGame1", "NameOfGame1")
            tableMapping.ColumnMappings.Add("Description1", "Description1")
            tableMapping.ColumnMappings.Add("GameType2", "GameType2")
            tableMapping.ColumnMappings.Add("NameofGame2", "NameofGame2")
            tableMapping.ColumnMappings.Add("Description2", "Description2")
            tableMapping.ColumnMappings.Add("GameType3", "GameType3")
            tableMapping.ColumnMappings.Add("NameOfGame3", "NameOfGame3")
            tableMapping.ColumnMappings.Add("Description3", "Description3")
            tableMapping.ColumnMappings.Add("Childstatus", "Childstatus")
            tableMapping.ColumnMappings.Add("ChildName1", "ChildName1")
            tableMapping.ColumnMappings.Add("ChildDob1", "ChildDob1")
            tableMapping.ColumnMappings.Add("ChildSex1", "ChildSex1")
            tableMapping.ColumnMappings.Add("ChildExpairy1", "ChildExpairy1")
            tableMapping.ColumnMappings.Add("ChildName2", "ChildName2")
            tableMapping.ColumnMappings.Add("ChildDob2", "ChildDob2")
            tableMapping.ColumnMappings.Add("ChildSex2", "ChildSex2")
            tableMapping.ColumnMappings.Add("ChildExpairy2", "ChildExpairy2")
            tableMapping.ColumnMappings.Add("ChildName3", "ChildName3")
            tableMapping.ColumnMappings.Add("ChildDob3", "ChildDob3")
            tableMapping.ColumnMappings.Add("ChildSex3", "ChildSex3")
            tableMapping.ColumnMappings.Add("childExpairy3", "childExpairy3")
            tableMapping.ColumnMappings.Add("Clubstatus", "Clubstatus")
            tableMapping.ColumnMappings.Add("OtherClubName1", "OtherClubName1")
            tableMapping.ColumnMappings.Add("OCAddress1", "OCAddress1")
            tableMapping.ColumnMappings.Add("OCStatus1", "OCStatus1")
            tableMapping.ColumnMappings.Add("OtherClubName2", "OtherClubName2")
            tableMapping.ColumnMappings.Add("OCAddress2", "OCAddress2")
            tableMapping.ColumnMappings.Add("OCStatus2", "OCStatus2")
            tableMapping.ColumnMappings.Add("OtherClubname3", "OtherClubname3")
            tableMapping.ColumnMappings.Add("OCAddress3", "OCAddress3")
            tableMapping.ColumnMappings.Add("OCStataus", "OCStataus")
            tableMapping.ColumnMappings.Add("adduser", "adduser")
            tableMapping.ColumnMappings.Add("adddate", "adddate")
            tableMapping.ColumnMappings.Add("freeze", "freeze")
            tableMapping.ColumnMappings.Add("Relativestatus", "Relativestatus")
            tableMapping.ColumnMappings.Add("RelativeName1", "RelativeName1")
            tableMapping.ColumnMappings.Add("Relation1", "Relation1")
            tableMapping.ColumnMappings.Add("dateofbirth1", "dateofbirth1")
            tableMapping.ColumnMappings.Add("Relativeage1", "Relativeage1")
            tableMapping.ColumnMappings.Add("RelativeSex1", "RelativeSex1")
            tableMapping.ColumnMappings.Add("Relativeaddress1", "Relativeaddress1")
            tableMapping.ColumnMappings.Add("RelativeName2", "RelativeName2")
            tableMapping.ColumnMappings.Add("Relation2", "Relation2")
            tableMapping.ColumnMappings.Add("dateofbirth2", "dateofbirth2")
            tableMapping.ColumnMappings.Add("Relativeage2", "Relativeage2")
            tableMapping.ColumnMappings.Add("RelativeSex2", "RelativeSex2")
            tableMapping.ColumnMappings.Add("Relativeaddress2", "Relativeaddress2")
            tableMapping.ColumnMappings.Add("RelativeName3", "RelativeName3")
            tableMapping.ColumnMappings.Add("Relation3", "Relation3")
            tableMapping.ColumnMappings.Add("dateofbirth3", "dateofbirth3")
            tableMapping.ColumnMappings.Add("Relativeage3", "Relativeage3")
            tableMapping.ColumnMappings.Add("RelativeSex3", "RelativeSex3")
            tableMapping.ColumnMappings.Add("Relativeaddress3", "Relativeaddress3")
            tableMapping.ColumnMappings.Add("referentialst", "referentialst")
            tableMapping.ColumnMappings.Add("mem_code1", "mem_code1")
            tableMapping.ColumnMappings.Add("mem_name1", "mem_name1")
            tableMapping.ColumnMappings.Add("refmem_date1", "refmem_date1")
            tableMapping.ColumnMappings.Add("deleted1", "deleted1")
            tableMapping.ColumnMappings.Add("mem_code2", "mem_code2")
            tableMapping.ColumnMappings.Add("mem_name2", "mem_name2")
            tableMapping.ColumnMappings.Add("refmem_date2", "refmem_date2")
            tableMapping.ColumnMappings.Add("deleted2", "deleted2")
            tableMapping.ColumnMappings.Add("mem_code3", "mem_code3")
            tableMapping.ColumnMappings.Add("mem_name3", "mem_name3")
            tableMapping.ColumnMappings.Add("refmem_date3", "refmem_date3")
            tableMapping.ColumnMappings.Add("deleted3", "deleted3")
            tableMapping.ColumnMappings.Add("entrancefeest", "entrancefeest")
            tableMapping.ColumnMappings.Add("receiptno1", "receiptno1")
            tableMapping.ColumnMappings.Add("startdate1", "startdate1")
            tableMapping.ColumnMappings.Add("amount1", "amount1")
            tableMapping.ColumnMappings.Add("receiptno2", "receiptno2")
            tableMapping.ColumnMappings.Add("startdate2", "startdate2")
            tableMapping.ColumnMappings.Add("amount2", "amount2")
            tableMapping.ColumnMappings.Add("receiptno3", "receiptno3")
            tableMapping.ColumnMappings.Add("startdate3", "startdate3")
            tableMapping.ColumnMappings.Add("amount3", "amount3")
            tableMapping.ColumnMappings.Add("OLD", "OLD")
            tableMapping.ColumnMappings.Add("CardAmt", "CardAmt")
            tableMapping.ColumnMappings.Add("MINIMUMUSAGE", "MINIMUMUSAGE")
            tableMapping.ColumnMappings.Add("CREDITNO", "CREDITNO")
            tableMapping.ColumnMappings.Add("SPOUSEMOBILE", "SPOUSEMOBILE")
            tableMapping.ColumnMappings.Add("P_NO", "P_NO")
            tableMapping.ColumnMappings.Add("MEM_CODE", "MEM_CODE")
            tableMapping.ColumnMappings.Add("depnos", "depnos")
            tableMapping.ColumnMappings.Add("mb_oprsop", "mb_oprsop")
            tableMapping.ColumnMappings.Add("m_payroll", "m_payroll")
            tableMapping.ColumnMappings.Add("lib_mem", "lib_mem")
            tableMapping.ColumnMappings.Add("libbillingbasis", "libbillingbasis")
            tableMapping.ColumnMappings.Add("mcodec", "mcodec")
            tableMapping.ColumnMappings.Add("mcoden", "mcoden")
            tableMapping.ColumnMappings.Add("mcode1", "mcode1")
            tableMapping.ColumnMappings.Add("dow", "dow")
            tableMapping.ColumnMappings.Add("hplocker", "hplocker")
            tableMapping.ColumnMappings.Add("GLCODE", "GLCODE")
            tableMapping.ColumnMappings.Add("termletter", "termletter")
            tableMapping.ColumnMappings.Add("MEMBERTYPE", "MEMBERTYPE")
            tableMapping.ColumnMappings.Add("MEMIMAGE", "MEMIMAGE")
            tableMapping.ColumnMappings.Add("MEMIMAGESIGN", "MEMIMAGESIGN")
            tableMapping.ColumnMappings.Add("SDOB", "SDOB")
            tableMapping.ColumnMappings.Add("CHILDFDOB1", "CHILDFDOB1")
            tableMapping.ColumnMappings.Add("PADD4", "PADD4")
            tableMapping.ColumnMappings.Add("CADD4", "CADD4")
            tableMapping.ColumnMappings.Add("EMAIL_FLAG", "EMAIL_FLAG")
            tableMapping.ColumnMappings.Add("EBILL", "EBILL")
            tableMapping.ColumnMappings.Add("WEDDING_DATE", "WEDDING_DATE")
            tableMapping.ColumnMappings.Add("TAXFLAG", "TAXFLAG")
            tableMapping.ColumnMappings.Add("MLEDGERNAME", "MLEDGERNAME")
            tableMapping.ColumnMappings.Add("BACOPYST1", "BACOPYST1")
            tableMapping.ColumnMappings.Add("RACOPYST1", "RACOPYST1")
            tableMapping.ColumnMappings.Add("MSORDERNO", "MSORDERNO")
            tableMapping.ColumnMappings.Add("PREFIXMCODE", "PREFIXMCODE")
            tableMapping.ColumnMappings.Add("PACOPYST1", "PACOPYST1")
            tableMapping.ColumnMappings.Add("OCELL", "OCELL")
            tableMapping.ColumnMappings.Add("OEMAIL", "OEMAIL")
            tableMapping.ColumnMappings.Add("ICNO", "ICNO")
            tableMapping.ColumnMappings.Add("UNITNO", "UNITNO")
            tableMapping.ColumnMappings.Add("DATEOFRELEASE", "DATEOFRELEASE")
            tableMapping.ColumnMappings.Add("DATEOFCREATION", "DATEOFCREATION")
            tableMapping.ColumnMappings.Add("MDESCRIPTION", "MDESCRIPTION")
            tableMapping.ColumnMappings.Add("RIDCARDNO", "RIDCARDNO")
            tableMapping.ColumnMappings.Add("ARMSERVICE", "ARMSERVICE")
            tableMapping.ColumnMappings.Add("WO", "WO")
            tableMapping.ColumnMappings.Add("NOOFDEPENDENCIES", "NOOFDEPENDENCIES")
            tableMapping.ColumnMappings.Add("RBYMEMBERNO", "RBYMEMBERNO")
            tableMapping.ColumnMappings.Add("RBYMEMBERNO2", "RBYMEMBERNO2")
            tableMapping.ColumnMappings.Add("RBYNAME", "RBYNAME")
            tableMapping.ColumnMappings.Add("RBYMEMBERNAME2", "RBYMEMBERNAME2")
            tableMapping.ColumnMappings.Add("RANKNO", "RANKNO")
            tableMapping.ColumnMappings.Add("DATEOFCOMMISSION", "DATEOFCOMMISSION")
            tableMapping.ColumnMappings.Add("NOOFTIMESSECONDED", "NOOFTIMESSECONDED")
            tableMapping.ColumnMappings.Add("DATEOFSECONDED", "DATEOFSECONDED")
            tableMapping.ColumnMappings.Add("PLOTNO", "PLOTNO")
            tableMapping.ColumnMappings.Add("SOCIETYNO", "SOCIETYNO")
            tableMapping.ColumnMappings.Add("CREDITSTOPFLAG", "CREDITSTOPFLAG")
            tableMapping.ColumnMappings.Add("CREDITSTOPDATE", "CREDITSTOPDATE")
            tableMapping.ColumnMappings.Add("BTGROUP", "BTGROUP")
            tableMapping.ColumnMappings.Add("ANNIVERSARYDATE", "ANNIVERSARYDATE")
            tableMapping.ColumnMappings.Add("ARMYNO", "ARMYNO")
            tableMapping.ColumnMappings.Add("RANKNAME", "RANKNAME")
            tableMapping.ColumnMappings.Add("BARCODENO", "BARCODENO")
            tableMapping.ColumnMappings.Add("DEPENDENTID", "DEPENDENTID")
            tableMapping.ColumnMappings.Add("SPOUSEIMAGE", "SPOUSEIMAGE")
            tableMapping.ColumnMappings.Add("F_MCODE", "F_MCODE")
            tableMapping.ColumnMappings.Add("NOMINEE", "NOMINEE")
            tableMapping.ColumnMappings.Add("ENC_SMARTCARDNO", "ENC_SMARTCARDNO")
            tableMapping.ColumnMappings.Add("MTORDERNO", "MTORDERNO")
            tableMapping.ColumnMappings.Add("MARITAL_STATUS", "MARITAL_STATUS")
            tableMapping.ColumnMappings.Add("oldmcode", "oldmcode")
            tableMapping.ColumnMappings.Add("newmcode", "newmcode")
            tableMapping.ColumnMappings.Add("Memberdesigncode", "Memberdesigncode")
            tableMapping.ColumnMappings.Add("Citycode", "Citycode")
            tableMapping.ColumnMappings.Add("Statecode", "Statecode")
            tableMapping.ColumnMappings.Add("SaluatationCode", "SaluatationCode")
            tableMapping.ColumnMappings.Add("ReligionCode", "ReligionCode")
            tableMapping.ColumnMappings.Add("Countrycode", "Countrycode")
            tableMapping.ColumnMappings.Add("MemberMaritialcode", "MemberMaritialcode")
            tableMapping.ColumnMappings.Add("spouseprefix", "spouseprefix")
            tableMapping.ColumnMappings.Add("SpouseFreeze", "SpouseFreeze")
            tableMapping.ColumnMappings.Add("MEMLIMIT", "MEMLIMIT")
            tableMapping.ColumnMappings.Add("CATLIMIT", "CATLIMIT")
            tableMapping.ColumnMappings.Add("REPLACEMENT", "REPLACEMENT")
            tableMapping.ColumnMappings.Add("RNO", "RNO")
            tableMapping.ColumnMappings.Add("spouseimagesign", "spouseimagesign")
            tableMapping.ColumnMappings.Add("religion", "religion")
            tableMapping.ColumnMappings.Add("ADD_DATE", "ADD_DATE")
            tableMapping.ColumnMappings.Add("ADD_USER", "ADD_USER")
            tableMapping.ColumnMappings.Add("UPD_USER", "UPD_USER")
            tableMapping.ColumnMappings.Add("UPD_DATE", "UPD_DATE")
            tableMapping.ColumnMappings.Add("VOID", "VOID")
            tableMapping.ColumnMappings.Add("VOIDUSER", "VOIDUSER")
            tableMapping.ColumnMappings.Add("VOIDDATE", "VOIDDATE")
            tableMapping.ColumnMappings.Add("AUTHORISED", "AUTHORISED")
            tableMapping.ColumnMappings.Add("AUTHORISE_LEVEL1", "AUTHORISE_LEVEL1")
            tableMapping.ColumnMappings.Add("AUTHORISE_USER1", "AUTHORISE_USER1")
            tableMapping.ColumnMappings.Add("AUTHORISE_DATE1", "AUTHORISE_DATE1")
            tableMapping.ColumnMappings.Add("AUTHORISE_LEVEL2", "AUTHORISE_LEVEL2")
            tableMapping.ColumnMappings.Add("AUTHORISE_USER2", "AUTHORISE_USER2")
            tableMapping.ColumnMappings.Add("AUTHORISE_DATE2", "AUTHORISE_DATE2")
            tableMapping.ColumnMappings.Add("AUTHORISE_LEVEL3", "AUTHORISE_LEVEL3")
            tableMapping.ColumnMappings.Add("AUTHORISE_USER3", "AUTHORISE_USER3")
            tableMapping.ColumnMappings.Add("RESIGNED_DATE", "RESIGNED_DATE")
            tableMapping.ColumnMappings.Add("RESIGNED_FLAG", "RESIGNED_FLAG")
            tableMapping.ColumnMappings.Add("Newstatus", "Newstatus")
            tableMapping.ColumnMappings.Add("SECONDER1", "SECONDER1")
            tableMapping.ColumnMappings.Add("SECONDERNAME1", "SECONDERNAME1")
            tableMapping.ColumnMappings.Add("SECONDER2", "SECONDER2")
            tableMapping.ColumnMappings.Add("SECONDERNAME2", "SECONDERNAME2")
            tableMapping.ColumnMappings.Add("spl_info", "spl_info")
            tableMapping.ColumnMappings.Add("PASSPORTNO", "PASSPORTNO")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[membermaster] ([TAG], [MEMBERTYPECODE], [COMPANY], [SUBCD], [M"& _ 
                "CODE], [MNAME], [MID], [DOB], [DOJ], [SEX], [MARITALSTATUS], [SPOUSE], [BG], [OC"& _ 
                "CUPATION], [BANKER], [BANKACNO], [HOBBIES], [OTHERINFO], [RESIDENT], [EQUALIFICA"& _ 
                "TION], [PQUALIFICATION], [PROPOSER], [PROPOSERNAME], [SECONDER], [SECONDERNAME],"& _ 
                " [PAcopyst], [PADD1], [PADD2], [PADD3], [PCITY], [PSTATE], [PCOUNTRY], [PPIN], ["& _ 
                "PPHONE1], [PPHONE2], [PCELL], [PEMAIL], [RAcopyst], [CADD1], [CADD2], [CADD3], ["& _ 
                "CCITY], [CSTATE], [CCOUNTRY], [CPIN], [CPHONE1], [CPHONE2], [CCELL], [CEMAIL], ["& _ 
                "CONTADD1], [CONTADD2], [CONTADD3], [CONTCITY], [CONTSTATE], [CONTCOUNTRY], [CONT"& _ 
                "PIN], [CONTPHONE1], [CONTPHONE2], [CONTCELL], [CONTEMAIL], [EMPTYPE], [BUSINESSN"& _ 
                "AME], [BAcopyst], [OADD1], [OADD2], [OADD3], [OCITY], [OSTATE], [OCOUNTRY], [OPI"& _ 
                "N], [OPHONE1], [OPHONE2], [DOEPROFESSION], [BUSINESSNATURE], [POSITIONHELD], [SE"& _ 
                "RVICENAME], [SERVICEYEAR], [PANO], [BBANKER], [CCNO], [ANNUALINCOME], [UPDUSERID"& _ 
                "], [UPDDATETIME], [TERMINATION], [TRN_CON_DATE], [CON_MCODE], [PFAX], [CFAX], [C"& _ 
                "ONTFAX], [REASON], [PHOTO], [CREDITLIMIT], [LIMITAMOUNT], [WEBSITE], [Imagefile]"& _ 
                ", [sizefield], [Vdate], [Vyear], [Validdate], [TempTermination], [TempTermDate],"& _ 
                " [TempTermReason], [Memberid], [EndingDate], [TotalYears], [CardNo], [CardExpDat"& _ 
                "e], [Validity], [Period], [Creditcardno], [CreditExpDt], [Type], [STATUSDATEFROM"& _ 
                "], [STATUSDATETO], [CurentStatus], [FirstName], [MiddleName], [Surname], [Alias]"& _ 
                ", [Prefix], [BillType], [Nationality], [NationalityAtbirth], [Billbasis], [BillH"& _ 
                "ead], [GDRLocker], [LDRLocker], [MembershipTo], [salut], [EntranceFee], [Develop"& _ 
                "mentFee], [CriditNumber], [SecurityDeposit], [PlaceOfBirth], [CountryOfBirth], ["& _ 
                "LastArrivalInCal], [PeriodOfStay_year], [PeriodOfStay_Month], [PreviouslyPropose"& _ 
                "d], [NoOfTimesProposed], [DateOfProposal], [ResultOfProposal], [Elected], [Fathe"& _ 
                "rName], [DOBfather], [WifeDOB], [MaidenNameWife], [NationalityWife], [WifesFathe"& _ 
                "rName], [WifeFatherDOB], [ApplNo], [ApplDate], [Corporatest], [CorporateCode], ["& _ 
                "CompName], [Designation], [ProfessionInfo], [BuisnessInfo], [Products], [AgentsD"& _ 
                "ealers], [ESTDdate], [NoOfEmp], [Turnover], [Client], [AppliedBut], [PositionInC"& _ 
                "hamber], [Qulificationstatus], [Qualification1], [Details1], [YearOfPassing1], ["& _ 
                "Institute1], [Division1], [Qualification2], [Details2], [YearOfPassing2], [Insti"& _ 
                "tute2], [Division2], [Qualification3], [Details3], [YearOfPassing3], [Institute3"& _ 
                "], [Division3], [sportstatus], [GameType1], [NameOfGame1], [Description1], [Game"& _ 
                "Type2], [NameofGame2], [Description2], [GameType3], [NameOfGame3], [Description3"& _ 
                "], [Childstatus], [ChildName1], [ChildDob1], [ChildSex1], [ChildExpairy1], [Chil"& _ 
                "dName2], [ChildDob2], [ChildSex2], [ChildExpairy2], [ChildName3], [ChildDob3], ["& _ 
                "ChildSex3], [childExpairy3], [Clubstatus], [OtherClubName1], [OCAddress1], [OCSt"& _ 
                "atus1], [OtherClubName2], [OCAddress2], [OCStatus2], [OtherClubname3], [OCAddres"& _ 
                "s3], [OCStataus], [adduser], [adddate], [freeze], [Relativestatus], [RelativeNam"& _ 
                "e1], [Relation1], [dateofbirth1], [Relativeage1], [RelativeSex1], [Relativeaddre"& _ 
                "ss1], [RelativeName2], [Relation2], [dateofbirth2], [Relativeage2], [RelativeSex"& _ 
                "2], [Relativeaddress2], [RelativeName3], [Relation3], [dateofbirth3], [Relativea"& _ 
                "ge3], [RelativeSex3], [Relativeaddress3], [referentialst], [mem_code1], [mem_nam"& _ 
                "e1], [refmem_date1], [deleted1], [mem_code2], [mem_name2], [refmem_date2], [dele"& _ 
                "ted2], [mem_code3], [mem_name3], [refmem_date3], [deleted3], [entrancefeest], [r"& _ 
                "eceiptno1], [startdate1], [amount1], [receiptno2], [startdate2], [amount2], [rec"& _ 
                "eiptno3], [startdate3], [amount3], [OLD], [CardAmt], [MINIMUMUSAGE], [CREDITNO],"& _ 
                " [SPOUSEMOBILE], [P_NO], [MEM_CODE], [depnos], [mb_oprsop], [m_payroll], [lib_me"& _ 
                "m], [libbillingbasis], [mcodec], [mcoden], [mcode1], [dow], [hplocker], [GLCODE]"& _ 
                ", [termletter], [MEMBERTYPE], [MEMIMAGE], [MEMIMAGESIGN], [SDOB], [CHILDFDOB1], "& _ 
                "[PADD4], [CADD4], [EMAIL_FLAG], [EBILL], [WEDDING_DATE], [TAXFLAG], [MLEDGERNAME"& _ 
                "], [BACOPYST1], [RACOPYST1], [MSORDERNO], [PREFIXMCODE], [PACOPYST1], [OCELL], ["& _ 
                "OEMAIL], [ICNO], [UNITNO], [DATEOFRELEASE], [DATEOFCREATION], [MDESCRIPTION], [R"& _ 
                "IDCARDNO], [ARMSERVICE], [WO], [NOOFDEPENDENCIES], [RBYMEMBERNO], [RBYMEMBERNO2]"& _ 
                ", [RBYNAME], [RBYMEMBERNAME2], [RANKNO], [DATEOFCOMMISSION], [NOOFTIMESSECONDED]"& _ 
                ", [DATEOFSECONDED], [PLOTNO], [SOCIETYNO], [CREDITSTOPFLAG], [CREDITSTOPDATE], ["& _ 
                "BTGROUP], [ANNIVERSARYDATE], [ARMYNO], [RANKNAME], [BARCODENO], [DEPENDENTID], ["& _ 
                "SPOUSEIMAGE], [F_MCODE], [NOMINEE], [ENC_SMARTCARDNO], [MTORDERNO], [MARITAL_STA"& _ 
                "TUS], [oldmcode], [newmcode], [Memberdesigncode], [Citycode], [Statecode], [Salu"& _ 
                "atationCode], [ReligionCode], [Countrycode], [MemberMaritialcode], [spouseprefix"& _ 
                "], [SpouseFreeze], [MEMLIMIT], [CATLIMIT], [REPLACEMENT], [RNO], [spouseimagesig"& _ 
                "n], [religion], [ADD_DATE], [ADD_USER], [UPD_USER], [UPD_DATE], [VOID], [VOIDUSE"& _ 
                "R], [VOIDDATE], [AUTHORISED], [AUTHORISE_LEVEL1], [AUTHORISE_USER1], [AUTHORISE_"& _ 
                "DATE1], [AUTHORISE_LEVEL2], [AUTHORISE_USER2], [AUTHORISE_DATE2], [AUTHORISE_LEV"& _ 
                "EL3], [AUTHORISE_USER3], [RESIGNED_DATE], [RESIGNED_FLAG], [Newstatus], [SECONDE"& _ 
                "R1], [SECONDERNAME1], [SECONDER2], [SECONDERNAME2], [spl_info], [PASSPORTNO]) VA"& _ 
                "LUES (@TAG, @MEMBERTYPECODE, @COMPANY, @SUBCD, @MCODE, @MNAME, @MID, @DOB, @DOJ,"& _ 
                " @SEX, @MARITALSTATUS, @SPOUSE, @BG, @OCCUPATION, @BANKER, @BANKACNO, @HOBBIES, "& _ 
                "@OTHERINFO, @RESIDENT, @EQUALIFICATION, @PQUALIFICATION, @PROPOSER, @PROPOSERNAM"& _ 
                "E, @SECONDER, @SECONDERNAME, @PAcopyst, @PADD1, @PADD2, @PADD3, @PCITY, @PSTATE,"& _ 
                " @PCOUNTRY, @PPIN, @PPHONE1, @PPHONE2, @PCELL, @PEMAIL, @RAcopyst, @CADD1, @CADD"& _ 
                "2, @CADD3, @CCITY, @CSTATE, @CCOUNTRY, @CPIN, @CPHONE1, @CPHONE2, @CCELL, @CEMAI"& _ 
                "L, @CONTADD1, @CONTADD2, @CONTADD3, @CONTCITY, @CONTSTATE, @CONTCOUNTRY, @CONTPI"& _ 
                "N, @CONTPHONE1, @CONTPHONE2, @CONTCELL, @CONTEMAIL, @EMPTYPE, @BUSINESSNAME, @BA"& _ 
                "copyst, @OADD1, @OADD2, @OADD3, @OCITY, @OSTATE, @OCOUNTRY, @OPIN, @OPHONE1, @OP"& _ 
                "HONE2, @DOEPROFESSION, @BUSINESSNATURE, @POSITIONHELD, @SERVICENAME, @SERVICEYEA"& _ 
                "R, @PANO, @BBANKER, @CCNO, @ANNUALINCOME, @UPDUSERID, @UPDDATETIME, @TERMINATION"& _ 
                ", @TRN_CON_DATE, @CON_MCODE, @PFAX, @CFAX, @CONTFAX, @REASON, @PHOTO, @CREDITLIM"& _ 
                "IT, @LIMITAMOUNT, @WEBSITE, @Imagefile, @sizefield, @Vdate, @Vyear, @Validdate, "& _ 
                "@TempTermination, @TempTermDate, @TempTermReason, @Memberid, @EndingDate, @Total"& _ 
                "Years, @CardNo, @CardExpDate, @Validity, @Period, @Creditcardno, @CreditExpDt, @"& _ 
                "Type, @STATUSDATEFROM, @STATUSDATETO, @CurentStatus, @FirstName, @MiddleName, @S"& _ 
                "urname, @Alias, @Prefix, @BillType, @Nationality, @NationalityAtbirth, @Billbasi"& _ 
                "s, @BillHead, @GDRLocker, @LDRLocker, @MembershipTo, @salut, @EntranceFee, @Deve"& _ 
                "lopmentFee, @CriditNumber, @SecurityDeposit, @PlaceOfBirth, @CountryOfBirth, @La"& _ 
                "stArrivalInCal, @PeriodOfStay_year, @PeriodOfStay_Month, @PreviouslyProposed, @N"& _ 
                "oOfTimesProposed, @DateOfProposal, @ResultOfProposal, @Elected, @FatherName, @DO"& _ 
                "Bfather, @WifeDOB, @MaidenNameWife, @NationalityWife, @WifesFatherName, @WifeFat"& _ 
                "herDOB, @ApplNo, @ApplDate, @Corporatest, @CorporateCode, @CompName, @Designatio"& _ 
                "n, @ProfessionInfo, @BuisnessInfo, @Products, @AgentsDealers, @ESTDdate, @NoOfEm"& _ 
                "p, @Turnover, @Client, @AppliedBut, @PositionInChamber, @Qulificationstatus, @Qu"& _ 
                "alification1, @Details1, @YearOfPassing1, @Institute1, @Division1, @Qualificatio"& _ 
                "n2, @Details2, @YearOfPassing2, @Institute2, @Division2, @Qualification3, @Detai"& _ 
                "ls3, @YearOfPassing3, @Institute3, @Division3, @sportstatus, @GameType1, @NameOf"& _ 
                "Game1, @Description1, @GameType2, @NameofGame2, @Description2, @GameType3, @Name"& _ 
                "OfGame3, @Description3, @Childstatus, @ChildName1, @ChildDob1, @ChildSex1, @Chil"& _ 
                "dExpairy1, @ChildName2, @ChildDob2, @ChildSex2, @ChildExpairy2, @ChildName3, @Ch"& _ 
                "ildDob3, @ChildSex3, @childExpairy3, @Clubstatus, @OtherClubName1, @OCAddress1, "& _ 
                "@OCStatus1, @OtherClubName2, @OCAddress2, @OCStatus2, @OtherClubname3, @OCAddres"& _ 
                "s3, @OCStataus, @adduser, @adddate, @freeze, @Relativestatus, @RelativeName1, @R"& _ 
                "elation1, @dateofbirth1, @Relativeage1, @RelativeSex1, @Relativeaddress1, @Relat"& _ 
                "iveName2, @Relation2, @dateofbirth2, @Relativeage2, @RelativeSex2, @Relativeaddr"& _ 
                "ess2, @RelativeName3, @Relation3, @dateofbirth3, @Relativeage3, @RelativeSex3, @"& _ 
                "Relativeaddress3, @referentialst, @mem_code1, @mem_name1, @refmem_date1, @delete"& _ 
                "d1, @mem_code2, @mem_name2, @refmem_date2, @deleted2, @mem_code3, @mem_name3, @r"& _ 
                "efmem_date3, @deleted3, @entrancefeest, @receiptno1, @startdate1, @amount1, @rec"& _ 
                "eiptno2, @startdate2, @amount2, @receiptno3, @startdate3, @amount3, @OLD, @CardA"& _ 
                "mt, @MINIMUMUSAGE, @CREDITNO, @SPOUSEMOBILE, @P_NO, @MEM_CODE, @depnos, @mb_oprs"& _ 
                "op, @m_payroll, @lib_mem, @libbillingbasis, @mcodec, @mcoden, @mcode1, @dow, @hp"& _ 
                "locker, @GLCODE, @termletter, @MEMBERTYPE, @MEMIMAGE, @MEMIMAGESIGN, @SDOB, @CHI"& _ 
                "LDFDOB1, @PADD4, @CADD4, @EMAIL_FLAG, @EBILL, @WEDDING_DATE, @TAXFLAG, @MLEDGERN"& _ 
                "AME, @BACOPYST1, @RACOPYST1, @MSORDERNO, @PREFIXMCODE, @PACOPYST1, @OCELL, @OEMA"& _ 
                "IL, @ICNO, @UNITNO, @DATEOFRELEASE, @DATEOFCREATION, @MDESCRIPTION, @RIDCARDNO, "& _ 
                "@ARMSERVICE, @WO, @NOOFDEPENDENCIES, @RBYMEMBERNO, @RBYMEMBERNO2, @RBYNAME, @RBY"& _ 
                "MEMBERNAME2, @RANKNO, @DATEOFCOMMISSION, @NOOFTIMESSECONDED, @DATEOFSECONDED, @P"& _ 
                "LOTNO, @SOCIETYNO, @CREDITSTOPFLAG, @CREDITSTOPDATE, @BTGROUP, @ANNIVERSARYDATE,"& _ 
                " @ARMYNO, @RANKNAME, @BARCODENO, @DEPENDENTID, @SPOUSEIMAGE, @F_MCODE, @NOMINEE,"& _ 
                " @ENC_SMARTCARDNO, @MTORDERNO, @MARITAL_STATUS, @oldmcode, @newmcode, @Memberdes"& _ 
                "igncode, @Citycode, @Statecode, @SaluatationCode, @ReligionCode, @Countrycode, @"& _ 
                "MemberMaritialcode, @spouseprefix, @SpouseFreeze, @MEMLIMIT, @CATLIMIT, @REPLACE"& _ 
                "MENT, @RNO, @spouseimagesign, @religion, @ADD_DATE, @ADD_USER, @UPD_USER, @UPD_D"& _ 
                "ATE, @VOID, @VOIDUSER, @VOIDDATE, @AUTHORISED, @AUTHORISE_LEVEL1, @AUTHORISE_USE"& _ 
                "R1, @AUTHORISE_DATE1, @AUTHORISE_LEVEL2, @AUTHORISE_USER2, @AUTHORISE_DATE2, @AU"& _ 
                "THORISE_LEVEL3, @AUTHORISE_USER3, @RESIGNED_DATE, @RESIGNED_FLAG, @Newstatus, @S"& _ 
                "ECONDER1, @SECONDERNAME1, @SECONDER2, @SECONDERNAME2, @spl_info, @PASSPORTNO)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TAG", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TAG", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MEMBERTYPECODE", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MEMBERTYPECODE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@COMPANY", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "COMPANY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SUBCD", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SUBCD", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MCODE", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MCODE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MNAME", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MNAME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MID", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DOB", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DOB", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DOJ", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DOJ", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SEX", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SEX", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MARITALSTATUS", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MARITALSTATUS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SPOUSE", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SPOUSE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BG", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BG", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OCCUPATION", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OCCUPATION", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BANKER", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BANKER", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BANKACNO", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BANKACNO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HOBBIES", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HOBBIES", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OTHERINFO", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OTHERINFO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RESIDENT", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RESIDENT", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EQUALIFICATION", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EQUALIFICATION", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PQUALIFICATION", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PQUALIFICATION", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PROPOSER", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PROPOSER", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PROPOSERNAME", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PROPOSERNAME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SECONDER", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SECONDER", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SECONDERNAME", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SECONDERNAME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PAcopyst", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PAcopyst", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PADD1", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PADD1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PADD2", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PADD2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PADD3", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PADD3", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PCITY", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PCITY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PSTATE", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PSTATE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PCOUNTRY", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PCOUNTRY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PPIN", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PPIN", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PPHONE1", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PPHONE1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PPHONE2", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PPHONE2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PCELL", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PCELL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PEMAIL", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PEMAIL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RAcopyst", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RAcopyst", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CADD1", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CADD1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CADD2", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CADD2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CADD3", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CADD3", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CCITY", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CCITY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CSTATE", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CSTATE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CCOUNTRY", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CCOUNTRY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CPIN", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CPIN", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CPHONE1", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CPHONE1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CPHONE2", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CPHONE2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CCELL", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CCELL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CEMAIL", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CEMAIL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CONTADD1", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CONTADD1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CONTADD2", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CONTADD2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CONTADD3", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CONTADD3", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CONTCITY", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CONTCITY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CONTSTATE", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CONTSTATE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CONTCOUNTRY", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CONTCOUNTRY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CONTPIN", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CONTPIN", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CONTPHONE1", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CONTPHONE1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CONTPHONE2", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CONTPHONE2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CONTCELL", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CONTCELL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CONTEMAIL", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CONTEMAIL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EMPTYPE", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EMPTYPE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BUSINESSNAME", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BUSINESSNAME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BAcopyst", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BAcopyst", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OADD1", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OADD1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OADD2", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OADD2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OADD3", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OADD3", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OCITY", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OCITY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OSTATE", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OSTATE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OCOUNTRY", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OCOUNTRY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OPIN", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OPIN", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OPHONE1", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OPHONE1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OPHONE2", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OPHONE2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DOEPROFESSION", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DOEPROFESSION", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BUSINESSNATURE", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BUSINESSNATURE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@POSITIONHELD", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "POSITIONHELD", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SERVICENAME", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SERVICENAME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SERVICEYEAR", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "SERVICEYEAR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PANO", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PANO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BBANKER", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BBANKER", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CCNO", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CCNO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ANNUALINCOME", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "ANNUALINCOME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@UPDUSERID", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UPDUSERID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@UPDDATETIME", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UPDDATETIME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TERMINATION", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TERMINATION", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TRN_CON_DATE", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TRN_CON_DATE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CON_MCODE", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CON_MCODE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PFAX", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PFAX", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CFAX", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CFAX", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CONTFAX", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CONTFAX", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@REASON", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "REASON", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PHOTO", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PHOTO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CREDITLIMIT", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CREDITLIMIT", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LIMITAMOUNT", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 13, 0, "LIMITAMOUNT", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@WEBSITE", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "WEBSITE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Imagefile", Global.System.Data.SqlDbType.Image, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Imagefile", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@sizefield", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "sizefield", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Vdate", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Vdate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Vyear", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 5, 0, "Vyear", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Validdate", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Validdate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TempTermination", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TempTermination", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TempTermDate", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TempTermDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TempTermReason", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TempTermReason", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Memberid", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Memberid", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EndingDate", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EndingDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TotalYears", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 2, 0, "TotalYears", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CardNo", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CardNo", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CardExpDate", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CardExpDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Validity", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Validity", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Period", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Period", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Creditcardno", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Creditcardno", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CreditExpDt", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CreditExpDt", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Type", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Type", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@STATUSDATEFROM", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "STATUSDATEFROM", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@STATUSDATETO", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "STATUSDATETO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CurentStatus", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CurentStatus", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FirstName", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FirstName", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MiddleName", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MiddleName", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Surname", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Surname", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Alias", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Alias", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Prefix", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Prefix", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BillType", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BillType", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Nationality", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Nationality", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NationalityAtbirth", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NationalityAtbirth", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Billbasis", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Billbasis", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BillHead", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BillHead", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GDRLocker", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GDRLocker", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LDRLocker", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LDRLocker", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MembershipTo", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MembershipTo", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@salut", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "salut", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EntranceFee", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EntranceFee", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DevelopmentFee", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DevelopmentFee", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CriditNumber", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CriditNumber", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SecurityDeposit", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 13, 0, "SecurityDeposit", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PlaceOfBirth", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PlaceOfBirth", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CountryOfBirth", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CountryOfBirth", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LastArrivalInCal", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LastArrivalInCal", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PeriodOfStay_year", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "PeriodOfStay_year", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PeriodOfStay_Month", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "PeriodOfStay_Month", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PreviouslyProposed", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PreviouslyProposed", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NoOfTimesProposed", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "NoOfTimesProposed", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DateOfProposal", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DateOfProposal", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ResultOfProposal", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ResultOfProposal", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Elected", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Elected", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FatherName", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FatherName", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DOBfather", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DOBfather", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@WifeDOB", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "WifeDOB", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MaidenNameWife", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MaidenNameWife", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NationalityWife", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NationalityWife", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@WifesFatherName", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "WifesFatherName", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@WifeFatherDOB", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "WifeFatherDOB", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ApplNo", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ApplNo", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ApplDate", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ApplDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Corporatest", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Corporatest", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CorporateCode", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CorporateCode", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CompName", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CompName", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Designation", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Designation", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ProfessionInfo", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ProfessionInfo", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BuisnessInfo", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BuisnessInfo", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Products", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Products", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AgentsDealers", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AgentsDealers", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ESTDdate", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ESTDdate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NoOfEmp", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "NoOfEmp", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Turnover", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Turnover", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Client", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Client", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AppliedBut", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AppliedBut", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PositionInChamber", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PositionInChamber", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Qulificationstatus", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Qulificationstatus", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Qualification1", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Qualification1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Details1", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Details1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@YearOfPassing1", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "YearOfPassing1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Institute1", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Institute1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Division1", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Division1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Qualification2", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Qualification2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Details2", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Details2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@YearOfPassing2", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "YearOfPassing2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Institute2", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Institute2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Division2", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Division2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Qualification3", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Qualification3", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Details3", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Details3", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@YearOfPassing3", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "YearOfPassing3", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Institute3", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Institute3", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Division3", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Division3", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@sportstatus", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "sportstatus", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GameType1", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GameType1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NameOfGame1", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NameOfGame1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Description1", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Description1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GameType2", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GameType2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NameofGame2", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NameofGame2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Description2", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Description2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GameType3", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GameType3", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NameOfGame3", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NameOfGame3", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Description3", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Description3", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Childstatus", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Childstatus", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ChildName1", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ChildName1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ChildDob1", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ChildDob1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ChildSex1", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ChildSex1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ChildExpairy1", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ChildExpairy1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ChildName2", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ChildName2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ChildDob2", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ChildDob2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ChildSex2", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ChildSex2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ChildExpairy2", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ChildExpairy2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ChildName3", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ChildName3", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ChildDob3", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ChildDob3", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ChildSex3", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ChildSex3", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@childExpairy3", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "childExpairy3", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Clubstatus", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Clubstatus", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OtherClubName1", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OtherClubName1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OCAddress1", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OCAddress1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OCStatus1", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OCStatus1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OtherClubName2", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OtherClubName2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OCAddress2", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OCAddress2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OCStatus2", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OCStatus2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OtherClubname3", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OtherClubname3", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OCAddress3", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OCAddress3", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OCStataus", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OCStataus", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@adduser", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "adduser", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@adddate", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "adddate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@freeze", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "freeze", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Relativestatus", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Relativestatus", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RelativeName1", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RelativeName1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Relation1", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Relation1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@dateofbirth1", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "dateofbirth1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Relativeage1", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Relativeage1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RelativeSex1", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RelativeSex1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Relativeaddress1", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Relativeaddress1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RelativeName2", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RelativeName2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Relation2", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Relation2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@dateofbirth2", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "dateofbirth2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Relativeage2", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Relativeage2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RelativeSex2", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RelativeSex2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Relativeaddress2", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Relativeaddress2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RelativeName3", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RelativeName3", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Relation3", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Relation3", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@dateofbirth3", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "dateofbirth3", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Relativeage3", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Relativeage3", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RelativeSex3", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RelativeSex3", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Relativeaddress3", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Relativeaddress3", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@referentialst", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "referentialst", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@mem_code1", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "mem_code1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@mem_name1", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "mem_name1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@refmem_date1", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "refmem_date1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@deleted1", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "deleted1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@mem_code2", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "mem_code2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@mem_name2", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "mem_name2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@refmem_date2", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "refmem_date2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@deleted2", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "deleted2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@mem_code3", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "mem_code3", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@mem_name3", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "mem_name3", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@refmem_date3", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "refmem_date3", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@deleted3", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "deleted3", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@entrancefeest", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "entrancefeest", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@receiptno1", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "receiptno1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@startdate1", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "startdate1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@amount1", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "amount1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@receiptno2", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "receiptno2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@startdate2", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "startdate2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@amount2", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "amount2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@receiptno3", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "receiptno3", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@startdate3", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "startdate3", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@amount3", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "amount3", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OLD", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OLD", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CardAmt", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "CardAmt", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MINIMUMUSAGE", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "MINIMUMUSAGE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CREDITNO", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CREDITNO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SPOUSEMOBILE", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SPOUSEMOBILE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@P_NO", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "P_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MEM_CODE", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MEM_CODE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@depnos", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "depnos", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@mb_oprsop", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "mb_oprsop", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@m_payroll", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "m_payroll", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@lib_mem", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "lib_mem", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@libbillingbasis", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "libbillingbasis", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@mcodec", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "mcodec", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@mcoden", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 20, 0, "mcoden", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@mcode1", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "mcode1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@dow", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "dow", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@hplocker", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "hplocker", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GLCODE", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GLCODE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@termletter", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "termletter", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MEMBERTYPE", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MEMBERTYPE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MEMIMAGE", Global.System.Data.SqlDbType.Image, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MEMIMAGE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MEMIMAGESIGN", Global.System.Data.SqlDbType.Image, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MEMIMAGESIGN", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SDOB", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SDOB", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CHILDFDOB1", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CHILDFDOB1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PADD4", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PADD4", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CADD4", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CADD4", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EMAIL_FLAG", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EMAIL_FLAG", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EBILL", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EBILL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@WEDDING_DATE", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "WEDDING_DATE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TAXFLAG", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TAXFLAG", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MLEDGERNAME", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MLEDGERNAME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BACOPYST1", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BACOPYST1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RACOPYST1", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RACOPYST1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MSORDERNO", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MSORDERNO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PREFIXMCODE", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PREFIXMCODE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PACOPYST1", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PACOPYST1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OCELL", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OCELL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OEMAIL", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OEMAIL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ICNO", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ICNO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@UNITNO", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UNITNO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DATEOFRELEASE", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DATEOFRELEASE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DATEOFCREATION", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DATEOFCREATION", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MDESCRIPTION", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MDESCRIPTION", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RIDCARDNO", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RIDCARDNO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ARMSERVICE", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ARMSERVICE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@WO", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "WO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NOOFDEPENDENCIES", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NOOFDEPENDENCIES", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RBYMEMBERNO", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RBYMEMBERNO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RBYMEMBERNO2", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RBYMEMBERNO2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RBYNAME", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RBYNAME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RBYMEMBERNAME2", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RBYMEMBERNAME2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RANKNO", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RANKNO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DATEOFCOMMISSION", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DATEOFCOMMISSION", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NOOFTIMESSECONDED", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "NOOFTIMESSECONDED", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DATEOFSECONDED", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DATEOFSECONDED", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PLOTNO", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PLOTNO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SOCIETYNO", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SOCIETYNO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CREDITSTOPFLAG", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CREDITSTOPFLAG", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CREDITSTOPDATE", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CREDITSTOPDATE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BTGROUP", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BTGROUP", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ANNIVERSARYDATE", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ANNIVERSARYDATE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ARMYNO", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ARMYNO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RANKNAME", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RANKNAME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BARCODENO", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BARCODENO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DEPENDENTID", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "DEPENDENTID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SPOUSEIMAGE", Global.System.Data.SqlDbType.Image, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SPOUSEIMAGE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@F_MCODE", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "F_MCODE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NOMINEE", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NOMINEE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ENC_SMARTCARDNO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ENC_SMARTCARDNO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MTORDERNO", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MTORDERNO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MARITAL_STATUS", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MARITAL_STATUS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@oldmcode", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "oldmcode", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@newmcode", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "newmcode", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Memberdesigncode", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Memberdesigncode", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Citycode", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Citycode", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Statecode", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Statecode", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SaluatationCode", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SaluatationCode", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ReligionCode", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ReligionCode", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Countrycode", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Countrycode", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MemberMaritialcode", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MemberMaritialcode", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@spouseprefix", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "spouseprefix", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SpouseFreeze", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SpouseFreeze", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MEMLIMIT", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "MEMLIMIT", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CATLIMIT", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "CATLIMIT", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@REPLACEMENT", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "REPLACEMENT", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RNO", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RNO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@spouseimagesign", Global.System.Data.SqlDbType.Image, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "spouseimagesign", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@religion", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "religion", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ADD_DATE", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ADD_DATE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ADD_USER", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ADD_USER", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@UPD_USER", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UPD_USER", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@UPD_DATE", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UPD_DATE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@VOID", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VOID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@VOIDUSER", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VOIDUSER", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@VOIDDATE", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VOIDDATE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AUTHORISED", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AUTHORISED", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AUTHORISE_LEVEL1", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AUTHORISE_LEVEL1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AUTHORISE_USER1", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AUTHORISE_USER1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AUTHORISE_DATE1", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AUTHORISE_DATE1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AUTHORISE_LEVEL2", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AUTHORISE_LEVEL2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AUTHORISE_USER2", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AUTHORISE_USER2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AUTHORISE_DATE2", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AUTHORISE_DATE2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AUTHORISE_LEVEL3", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AUTHORISE_LEVEL3", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AUTHORISE_USER3", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AUTHORISE_USER3", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RESIGNED_DATE", Global.System.Data.SqlDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RESIGNED_DATE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RESIGNED_FLAG", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RESIGNED_FLAG", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Newstatus", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Newstatus", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SECONDER1", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SECONDER1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SECONDERNAME1", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SECONDERNAME1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SECONDER2", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SECONDER2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SECONDERNAME2", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SECONDERNAME2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@spl_info", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "spl_info", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PASSPORTNO", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PASSPORTNO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.Bengal_MemberMaster.My.MySettings.Default.BC1213ConnectionString1
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT SequenceNo, TAG, MEMBERTYPECODE, COMPANY, SUBCD, MCODE, MNAME, MID, DOB, D"& _ 
                "OJ, SEX, MARITALSTATUS, SPOUSE, BG, OCCUPATION, BANKER, BANKACNO, HOBBIES, OTHER"& _ 
                "INFO, RESIDENT, EQUALIFICATION, PQUALIFICATION, PROPOSER, PROPOSERNAME, SECONDER"& _ 
                ", SECONDERNAME, PAcopyst, PADD1, PADD2, PADD3, PCITY, PSTATE, PCOUNTRY, PPIN, PP"& _ 
                "HONE1, PPHONE2, PCELL, PEMAIL, RAcopyst, CADD1, CADD2, CADD3, CCITY, CSTATE, CCO"& _ 
                "UNTRY, CPIN, CPHONE1, CPHONE2, CCELL, CEMAIL, CONTADD1, CONTADD2, CONTADD3, CONT"& _ 
                "CITY, CONTSTATE, CONTCOUNTRY, CONTPIN, CONTPHONE1, CONTPHONE2, CONTCELL, CONTEMA"& _ 
                "IL, EMPTYPE, BUSINESSNAME, BAcopyst, OADD1, OADD2, OADD3, OCITY, OSTATE, OCOUNTR"& _ 
                "Y, OPIN, OPHONE1, OPHONE2, DOEPROFESSION, BUSINESSNATURE, POSITIONHELD, SERVICEN"& _ 
                "AME, SERVICEYEAR, PANO, BBANKER, CCNO, ANNUALINCOME, UPDUSERID, UPDDATETIME, TER"& _ 
                "MINATION, TRN_CON_DATE, CON_MCODE, PFAX, CFAX, CONTFAX, REASON, PHOTO, CREDITLIM"& _ 
                "IT, LIMITAMOUNT, WEBSITE, Imagefile, sizefield, Vdate, Vyear, Validdate, TempTer"& _ 
                "mination, TempTermDate, TempTermReason, Memberid, EndingDate, TotalYears, CardNo"& _ 
                ", CardExpDate, Validity, Period, Creditcardno, CreditExpDt, Type, STATUSDATEFROM"& _ 
                ", STATUSDATETO, CurentStatus, FirstName, MiddleName, Surname, Alias, Prefix, Bil"& _ 
                "lType, Nationality, NationalityAtbirth, Billbasis, BillHead, GDRLocker, LDRLocke"& _ 
                "r, MembershipTo, salut, EntranceFee, DevelopmentFee, CriditNumber, SecurityDepos"& _ 
                "it, PlaceOfBirth, CountryOfBirth, LastArrivalInCal, PeriodOfStay_year, PeriodOfS"& _ 
                "tay_Month, PreviouslyProposed, NoOfTimesProposed, DateOfProposal, ResultOfPropos"& _ 
                "al, Elected, FatherName, DOBfather, WifeDOB, MaidenNameWife, NationalityWife, Wi"& _ 
                "fesFatherName, WifeFatherDOB, ApplNo, ApplDate, Corporatest, CorporateCode, Comp"& _ 
                "Name, Designation, ProfessionInfo, BuisnessInfo, Products, AgentsDealers, ESTDda"& _ 
                "te, NoOfEmp, Turnover, Client, AppliedBut, PositionInChamber, Qulificationstatus"& _ 
                ", Qualification1, Details1, YearOfPassing1, Institute1, Division1, Qualification"& _ 
                "2, Details2, YearOfPassing2, Institute2, Division2, Qualification3, Details3, Ye"& _ 
                "arOfPassing3, Institute3, Division3, sportstatus, GameType1, NameOfGame1, Descri"& _ 
                "ption1, GameType2, NameofGame2, Description2, GameType3, NameOfGame3, Descriptio"& _ 
                "n3, Childstatus, ChildName1, ChildDob1, ChildSex1, ChildExpairy1, ChildName2, Ch"& _ 
                "ildDob2, ChildSex2, ChildExpairy2, ChildName3, ChildDob3, ChildSex3, childExpair"& _ 
                "y3, Clubstatus, OtherClubName1, OCAddress1, OCStatus1, OtherClubName2, OCAddress"& _ 
                "2, OCStatus2, OtherClubname3, OCAddress3, OCStataus, adduser, adddate, freeze, R"& _ 
                "elativestatus, RelativeName1, Relation1, dateofbirth1, Relativeage1, RelativeSex"& _ 
                "1, Relativeaddress1, RelativeName2, Relation2, dateofbirth2, Relativeage2, Relat"& _ 
                "iveSex2, Relativeaddress2, RelativeName3, Relation3, dateofbirth3, Relativeage3,"& _ 
                " RelativeSex3, Relativeaddress3, referentialst, mem_code1, mem_name1, refmem_dat"& _ 
                "e1, deleted1, mem_code2, mem_name2, refmem_date2, deleted2, mem_code3, mem_name3"& _ 
                ", refmem_date3, deleted3, entrancefeest, receiptno1, startdate1, amount1, receip"& _ 
                "tno2, startdate2, amount2, receiptno3, startdate3, amount3, OLD, CardAmt, MINIMU"& _ 
                "MUSAGE, CREDITNO, SPOUSEMOBILE, P_NO, MEM_CODE, depnos, mb_oprsop, m_payroll, li"& _ 
                "b_mem, libbillingbasis, mcodec, mcoden, mcode1, dow, hplocker, GLCODE, termlette"& _ 
                "r, MEMBERTYPE, MEMIMAGE, MEMIMAGESIGN, SDOB, CHILDFDOB1, PADD4, CADD4, EMAIL_FLA"& _ 
                "G, EBILL, WEDDING_DATE, TAXFLAG, MLEDGERNAME, BACOPYST1, RACOPYST1, MSORDERNO, P"& _ 
                "REFIXMCODE, PACOPYST1, OCELL, OEMAIL, ICNO, UNITNO, DATEOFRELEASE, DATEOFCREATIO"& _ 
                "N, MDESCRIPTION, RIDCARDNO, ARMSERVICE, WO, NOOFDEPENDENCIES, RBYMEMBERNO, RBYME"& _ 
                "MBERNO2, RBYNAME, RBYMEMBERNAME2, RANKNO, DATEOFCOMMISSION, NOOFTIMESSECONDED, D"& _ 
                "ATEOFSECONDED, PLOTNO, SOCIETYNO, CREDITSTOPFLAG, CREDITSTOPDATE, BTGROUP, ANNIV"& _ 
                "ERSARYDATE, ARMYNO, RANKNAME, BARCODENO, DEPENDENTID, SPOUSEIMAGE, F_MCODE, NOMI"& _ 
                "NEE, ENC_SMARTCARDNO, MTORDERNO, MARITAL_STATUS, oldmcode, newmcode, Memberdesig"& _ 
                "ncode, Citycode, Statecode, SaluatationCode, ReligionCode, Countrycode, MemberMa"& _ 
                "ritialcode, spouseprefix, SpouseFreeze, MEMLIMIT, CATLIMIT, REPLACEMENT, RNO, sp"& _ 
                "ouseimagesign, religion, ADD_DATE, ADD_USER, UPD_USER, UPD_DATE, VOID, VOIDUSER,"& _ 
                " VOIDDATE, AUTHORISED, AUTHORISE_LEVEL1, AUTHORISE_USER1, AUTHORISE_DATE1, AUTHO"& _ 
                "RISE_LEVEL2, AUTHORISE_USER2, AUTHORISE_DATE2, AUTHORISE_LEVEL3, AUTHORISE_USER3"& _ 
                ", RESIGNED_DATE, RESIGNED_FLAG, Newstatus, SECONDER1, SECONDERNAME1, SECONDER2, "& _ 
                "SECONDERNAME2, spl_info, PASSPORTNO FROM dbo.membermaster"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DataSet2.membermasterDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DataSet2.membermasterDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DataSet2.membermasterDataTable = New DataSet2.membermasterDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As DataSet2.membermasterDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As DataSet2) As Integer
            Return Me.Adapter.Update(dataSet, "membermaster")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert( _
                    ByVal TAG As String,  _
                    ByVal MEMBERTYPECODE As String,  _
                    ByVal COMPANY As String,  _
                    ByVal SUBCD As String,  _
                    ByVal MCODE As String,  _
                    ByVal MNAME As String,  _
                    ByVal MID As String,  _
                    ByVal DOB As Global.System.Nullable(Of Date),  _
                    ByVal DOJ As Global.System.Nullable(Of Date),  _
                    ByVal SEX As String,  _
                    ByVal MARITALSTATUS As String,  _
                    ByVal SPOUSE As String,  _
                    ByVal BG As String,  _
                    ByVal OCCUPATION As String,  _
                    ByVal BANKER As String,  _
                    ByVal BANKACNO As String,  _
                    ByVal HOBBIES As String,  _
                    ByVal OTHERINFO As String,  _
                    ByVal RESIDENT As String,  _
                    ByVal EQUALIFICATION As String,  _
                    ByVal PQUALIFICATION As String,  _
                    ByVal PROPOSER As String,  _
                    ByVal PROPOSERNAME As String,  _
                    ByVal SECONDER As String,  _
                    ByVal SECONDERNAME As String,  _
                    ByVal PAcopyst As String,  _
                    ByVal PADD1 As String,  _
                    ByVal PADD2 As String,  _
                    ByVal PADD3 As String,  _
                    ByVal PCITY As String,  _
                    ByVal PSTATE As String,  _
                    ByVal PCOUNTRY As String,  _
                    ByVal PPIN As String,  _
                    ByVal PPHONE1 As String,  _
                    ByVal PPHONE2 As String,  _
                    ByVal PCELL As String,  _
                    ByVal PEMAIL As String,  _
                    ByVal RAcopyst As String,  _
                    ByVal CADD1 As String,  _
                    ByVal CADD2 As String,  _
                    ByVal CADD3 As String,  _
                    ByVal CCITY As String,  _
                    ByVal CSTATE As String,  _
                    ByVal CCOUNTRY As String,  _
                    ByVal CPIN As String,  _
                    ByVal CPHONE1 As String,  _
                    ByVal CPHONE2 As String,  _
                    ByVal CCELL As String,  _
                    ByVal CEMAIL As String,  _
                    ByVal CONTADD1 As String,  _
                    ByVal CONTADD2 As String,  _
                    ByVal CONTADD3 As String,  _
                    ByVal CONTCITY As String,  _
                    ByVal CONTSTATE As String,  _
                    ByVal CONTCOUNTRY As String,  _
                    ByVal CONTPIN As String,  _
                    ByVal CONTPHONE1 As String,  _
                    ByVal CONTPHONE2 As String,  _
                    ByVal CONTCELL As String,  _
                    ByVal CONTEMAIL As String,  _
                    ByVal EMPTYPE As String,  _
                    ByVal BUSINESSNAME As String,  _
                    ByVal BAcopyst As String,  _
                    ByVal OADD1 As String,  _
                    ByVal OADD2 As String,  _
                    ByVal OADD3 As String,  _
                    ByVal OCITY As String,  _
                    ByVal OSTATE As String,  _
                    ByVal OCOUNTRY As String,  _
                    ByVal OPIN As String,  _
                    ByVal OPHONE1 As String,  _
                    ByVal OPHONE2 As String,  _
                    ByVal DOEPROFESSION As Global.System.Nullable(Of Date),  _
                    ByVal BUSINESSNATURE As String,  _
                    ByVal POSITIONHELD As String,  _
                    ByVal SERVICENAME As String,  _
                    ByVal SERVICEYEAR As Global.System.Nullable(Of Decimal),  _
                    ByVal PANO As String,  _
                    ByVal BBANKER As String,  _
                    ByVal CCNO As String,  _
                    ByVal ANNUALINCOME As Global.System.Nullable(Of Decimal),  _
                    ByVal UPDUSERID As String,  _
                    ByVal UPDDATETIME As Global.System.Nullable(Of Date),  _
                    ByVal TERMINATION As String,  _
                    ByVal TRN_CON_DATE As Global.System.Nullable(Of Date),  _
                    ByVal CON_MCODE As String,  _
                    ByVal PFAX As String,  _
                    ByVal CFAX As String,  _
                    ByVal CONTFAX As String,  _
                    ByVal REASON As String,  _
                    ByVal PHOTO As String,  _
                    ByVal CREDITLIMIT As String,  _
                    ByVal LIMITAMOUNT As Global.System.Nullable(Of Decimal),  _
                    ByVal WEBSITE As String,  _
                    ByVal Imagefile() As Byte,  _
                    ByVal sizefield As Global.System.Nullable(Of Decimal),  _
                    ByVal Vdate As Global.System.Nullable(Of Date),  _
                    ByVal Vyear As Global.System.Nullable(Of Decimal),  _
                    ByVal Validdate As Global.System.Nullable(Of Date),  _
                    ByVal TempTermination As String,  _
                    ByVal TempTermDate As Global.System.Nullable(Of Date),  _
                    ByVal TempTermReason As String,  _
                    ByVal Memberid As String,  _
                    ByVal EndingDate As Global.System.Nullable(Of Date),  _
                    ByVal TotalYears As Global.System.Nullable(Of Decimal),  _
                    ByVal CardNo As String,  _
                    ByVal CardExpDate As Global.System.Nullable(Of Date),  _
                    ByVal Validity As String,  _
                    ByVal Period As String,  _
                    ByVal Creditcardno As String,  _
                    ByVal CreditExpDt As Global.System.Nullable(Of Date),  _
                    ByVal Type As String,  _
                    ByVal STATUSDATEFROM As Global.System.Nullable(Of Date),  _
                    ByVal STATUSDATETO As Global.System.Nullable(Of Date),  _
                    ByVal CurentStatus As String,  _
                    ByVal FirstName As String,  _
                    ByVal MiddleName As String,  _
                    ByVal Surname As String,  _
                    ByVal _Alias As String,  _
                    ByVal Prefix As String,  _
                    ByVal BillType As String,  _
                    ByVal Nationality As String,  _
                    ByVal NationalityAtbirth As String,  _
                    ByVal Billbasis As String,  _
                    ByVal BillHead As String,  _
                    ByVal GDRLocker As String,  _
                    ByVal LDRLocker As String,  _
                    ByVal MembershipTo As Global.System.Nullable(Of Date),  _
                    ByVal salut As String,  _
                    ByVal EntranceFee As Global.System.Nullable(Of Double),  _
                    ByVal DevelopmentFee As Global.System.Nullable(Of Double),  _
                    ByVal CriditNumber As String,  _
                    ByVal SecurityDeposit As Global.System.Nullable(Of Decimal),  _
                    ByVal PlaceOfBirth As String,  _
                    ByVal CountryOfBirth As String,  _
                    ByVal LastArrivalInCal As Global.System.Nullable(Of Date),  _
                    ByVal PeriodOfStay_year As Global.System.Nullable(Of Decimal),  _
                    ByVal PeriodOfStay_Month As Global.System.Nullable(Of Decimal),  _
                    ByVal PreviouslyProposed As String,  _
                    ByVal NoOfTimesProposed As Global.System.Nullable(Of Decimal),  _
                    ByVal DateOfProposal As Global.System.Nullable(Of Date),  _
                    ByVal ResultOfProposal As String,  _
                    ByVal Elected As String,  _
                    ByVal FatherName As String,  _
                    ByVal DOBfather As Global.System.Nullable(Of Date),  _
                    ByVal WifeDOB As Global.System.Nullable(Of Date),  _
                    ByVal MaidenNameWife As String,  _
                    ByVal NationalityWife As String,  _
                    ByVal WifesFatherName As String,  _
                    ByVal WifeFatherDOB As Global.System.Nullable(Of Date),  _
                    ByVal ApplNo As String,  _
                    ByVal ApplDate As Global.System.Nullable(Of Date),  _
                    ByVal Corporatest As String,  _
                    ByVal CorporateCode As String,  _
                    ByVal CompName As String,  _
                    ByVal Designation As String,  _
                    ByVal ProfessionInfo As String,  _
                    ByVal BuisnessInfo As String,  _
                    ByVal Products As String,  _
                    ByVal AgentsDealers As String,  _
                    ByVal ESTDdate As Global.System.Nullable(Of Date),  _
                    ByVal NoOfEmp As Global.System.Nullable(Of Decimal),  _
                    ByVal Turnover As Global.System.Nullable(Of Double),  _
                    ByVal Client As String,  _
                    ByVal AppliedBut As String,  _
                    ByVal PositionInChamber As String,  _
                    ByVal Qulificationstatus As String,  _
                    ByVal Qualification1 As String,  _
                    ByVal Details1 As String,  _
                    ByVal YearOfPassing1 As String,  _
                    ByVal Institute1 As String,  _
                    ByVal Division1 As String,  _
                    ByVal Qualification2 As String,  _
                    ByVal Details2 As String,  _
                    ByVal YearOfPassing2 As String,  _
                    ByVal Institute2 As String,  _
                    ByVal Division2 As String,  _
                    ByVal Qualification3 As String,  _
                    ByVal Details3 As String,  _
                    ByVal YearOfPassing3 As String,  _
                    ByVal Institute3 As String,  _
                    ByVal Division3 As String,  _
                    ByVal sportstatus As String,  _
                    ByVal GameType1 As String,  _
                    ByVal NameOfGame1 As String,  _
                    ByVal Description1 As String,  _
                    ByVal GameType2 As String,  _
                    ByVal NameofGame2 As String,  _
                    ByVal Description2 As String,  _
                    ByVal GameType3 As String,  _
                    ByVal NameOfGame3 As String,  _
                    ByVal Description3 As String,  _
                    ByVal Childstatus As String,  _
                    ByVal ChildName1 As String,  _
                    ByVal ChildDob1 As String,  _
                    ByVal ChildSex1 As String,  _
                    ByVal ChildExpairy1 As String,  _
                    ByVal ChildName2 As String,  _
                    ByVal ChildDob2 As String,  _
                    ByVal ChildSex2 As String,  _
                    ByVal ChildExpairy2 As String,  _
                    ByVal ChildName3 As String,  _
                    ByVal ChildDob3 As String,  _
                    ByVal ChildSex3 As String,  _
                    ByVal childExpairy3 As String,  _
                    ByVal Clubstatus As String,  _
                    ByVal OtherClubName1 As String,  _
                    ByVal OCAddress1 As String,  _
                    ByVal OCStatus1 As String,  _
                    ByVal OtherClubName2 As String,  _
                    ByVal OCAddress2 As String,  _
                    ByVal OCStatus2 As String,  _
                    ByVal OtherClubname3 As String,  _
                    ByVal OCAddress3 As String,  _
                    ByVal OCStataus As String,  _
                    ByVal adduser As String,  _
                    ByVal adddate As Global.System.Nullable(Of Date),  _
                    ByVal freeze As String,  _
                    ByVal Relativestatus As String,  _
                    ByVal RelativeName1 As String,  _
                    ByVal Relation1 As String,  _
                    ByVal dateofbirth1 As String,  _
                    ByVal Relativeage1 As String,  _
                    ByVal RelativeSex1 As String,  _
                    ByVal Relativeaddress1 As String,  _
                    ByVal RelativeName2 As String,  _
                    ByVal Relation2 As String,  _
                    ByVal dateofbirth2 As String,  _
                    ByVal Relativeage2 As String,  _
                    ByVal RelativeSex2 As String,  _
                    ByVal Relativeaddress2 As String,  _
                    ByVal RelativeName3 As String,  _
                    ByVal Relation3 As String,  _
                    ByVal dateofbirth3 As String,  _
                    ByVal Relativeage3 As String,  _
                    ByVal RelativeSex3 As String,  _
                    ByVal Relativeaddress3 As String,  _
                    ByVal referentialst As String,  _
                    ByVal mem_code1 As String,  _
                    ByVal mem_name1 As String,  _
                    ByVal refmem_date1 As String,  _
                    ByVal deleted1 As String,  _
                    ByVal mem_code2 As String,  _
                    ByVal mem_name2 As String,  _
                    ByVal refmem_date2 As String,  _
                    ByVal deleted2 As String,  _
                    ByVal mem_code3 As String,  _
                    ByVal mem_name3 As String,  _
                    ByVal refmem_date3 As String,  _
                    ByVal deleted3 As String,  _
                    ByVal entrancefeest As String,  _
                    ByVal receiptno1 As String,  _
                    ByVal startdate1 As String,  _
                    ByVal amount1 As String,  _
                    ByVal receiptno2 As String,  _
                    ByVal startdate2 As String,  _
                    ByVal amount2 As String,  _
                    ByVal receiptno3 As String,  _
                    ByVal startdate3 As String,  _
                    ByVal amount3 As String,  _
                    ByVal OLD As String,  _
                    ByVal CardAmt As Global.System.Nullable(Of Decimal),  _
                    ByVal MINIMUMUSAGE As Global.System.Nullable(Of Decimal),  _
                    ByVal CREDITNO As String,  _
                    ByVal SPOUSEMOBILE As String,  _
                    ByVal P_NO As String,  _
                    ByVal MEM_CODE As String,  _
                    ByVal depnos As Global.System.Nullable(Of Integer),  _
                    ByVal mb_oprsop As String,  _
                    ByVal m_payroll As String,  _
                    ByVal lib_mem As String,  _
                    ByVal libbillingbasis As String,  _
                    ByVal mcodec As String,  _
                    ByVal mcoden As Global.System.Nullable(Of Decimal),  _
                    ByVal mcode1 As String,  _
                    ByVal dow As Global.System.Nullable(Of Date),  _
                    ByVal hplocker As String,  _
                    ByVal GLCODE As String,  _
                    ByVal termletter As String,  _
                    ByVal MEMBERTYPE As String,  _
                    ByVal MEMIMAGE() As Byte,  _
                    ByVal MEMIMAGESIGN() As Byte,  _
                    ByVal SDOB As Global.System.Nullable(Of Date),  _
                    ByVal CHILDFDOB1 As Global.System.Nullable(Of Date),  _
                    ByVal PADD4 As String,  _
                    ByVal CADD4 As String,  _
                    ByVal EMAIL_FLAG As String,  _
                    ByVal EBILL As String,  _
                    ByVal WEDDING_DATE As Global.System.Nullable(Of Date),  _
                    ByVal TAXFLAG As String,  _
                    ByVal MLEDGERNAME As String,  _
                    ByVal BACOPYST1 As String,  _
                    ByVal RACOPYST1 As String,  _
                    ByVal MSORDERNO As String,  _
                    ByVal PREFIXMCODE As String,  _
                    ByVal PACOPYST1 As String,  _
                    ByVal OCELL As String,  _
                    ByVal OEMAIL As String,  _
                    ByVal ICNO As String,  _
                    ByVal UNITNO As String,  _
                    ByVal DATEOFRELEASE As Global.System.Nullable(Of Date),  _
                    ByVal DATEOFCREATION As Global.System.Nullable(Of Date),  _
                    ByVal MDESCRIPTION As String,  _
                    ByVal RIDCARDNO As String,  _
                    ByVal ARMSERVICE As String,  _
                    ByVal WO As String,  _
                    ByVal NOOFDEPENDENCIES As String,  _
                    ByVal RBYMEMBERNO As String,  _
                    ByVal RBYMEMBERNO2 As String,  _
                    ByVal RBYNAME As String,  _
                    ByVal RBYMEMBERNAME2 As String,  _
                    ByVal RANKNO As String,  _
                    ByVal DATEOFCOMMISSION As Global.System.Nullable(Of Date),  _
                    ByVal NOOFTIMESSECONDED As Global.System.Nullable(Of Decimal),  _
                    ByVal DATEOFSECONDED As Global.System.Nullable(Of Date),  _
                    ByVal PLOTNO As String,  _
                    ByVal SOCIETYNO As String,  _
                    ByVal CREDITSTOPFLAG As String,  _
                    ByVal CREDITSTOPDATE As Global.System.Nullable(Of Date),  _
                    ByVal BTGROUP As String,  _
                    ByVal ANNIVERSARYDATE As Global.System.Nullable(Of Date),  _
                    ByVal ARMYNO As String,  _
                    ByVal RANKNAME As String,  _
                    ByVal BARCODENO As String,  _
                    ByVal DEPENDENTID As Global.System.Nullable(Of Decimal),  _
                    ByVal SPOUSEIMAGE() As Byte,  _
                    ByVal F_MCODE As String,  _
                    ByVal NOMINEE As String,  _
                    ByVal ENC_SMARTCARDNO As String,  _
                    ByVal MTORDERNO As String,  _
                    ByVal MARITAL_STATUS As String,  _
                    ByVal oldmcode As String,  _
                    ByVal newmcode As String,  _
                    ByVal Memberdesigncode As String,  _
                    ByVal Citycode As String,  _
                    ByVal Statecode As String,  _
                    ByVal SaluatationCode As String,  _
                    ByVal ReligionCode As String,  _
                    ByVal Countrycode As String,  _
                    ByVal MemberMaritialcode As String,  _
                    ByVal spouseprefix As String,  _
                    ByVal SpouseFreeze As String,  _
                    ByVal MEMLIMIT As Global.System.Nullable(Of Decimal),  _
                    ByVal CATLIMIT As Global.System.Nullable(Of Decimal),  _
                    ByVal REPLACEMENT As String,  _
                    ByVal RNO As String,  _
                    ByVal spouseimagesign() As Byte,  _
                    ByVal religion As String,  _
                    ByVal ADD_DATE As Global.System.Nullable(Of Date),  _
                    ByVal ADD_USER As String,  _
                    ByVal UPD_USER As String,  _
                    ByVal UPD_DATE As Global.System.Nullable(Of Date),  _
                    ByVal VOID As String,  _
                    ByVal VOIDUSER As String,  _
                    ByVal VOIDDATE As Global.System.Nullable(Of Date),  _
                    ByVal AUTHORISED As String,  _
                    ByVal AUTHORISE_LEVEL1 As String,  _
                    ByVal AUTHORISE_USER1 As String,  _
                    ByVal AUTHORISE_DATE1 As Global.System.Nullable(Of Date),  _
                    ByVal AUTHORISE_LEVEL2 As String,  _
                    ByVal AUTHORISE_USER2 As String,  _
                    ByVal AUTHORISE_DATE2 As Global.System.Nullable(Of Date),  _
                    ByVal AUTHORISE_LEVEL3 As String,  _
                    ByVal AUTHORISE_USER3 As String,  _
                    ByVal RESIGNED_DATE As Global.System.Nullable(Of Date),  _
                    ByVal RESIGNED_FLAG As String,  _
                    ByVal Newstatus As String,  _
                    ByVal SECONDER1 As String,  _
                    ByVal SECONDERNAME1 As String,  _
                    ByVal SECONDER2 As String,  _
                    ByVal SECONDERNAME2 As String,  _
                    ByVal spl_info As String,  _
                    ByVal PASSPORTNO As String) As Integer
            If (TAG Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(TAG,String)
            End If
            If (MEMBERTYPECODE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(MEMBERTYPECODE,String)
            End If
            If (COMPANY Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(COMPANY,String)
            End If
            If (SUBCD Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(SUBCD,String)
            End If
            If (MCODE Is Nothing) Then
                Throw New Global.System.ArgumentNullException("MCODE")
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(MCODE,String)
            End If
            If (MNAME Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(MNAME,String)
            End If
            If (MID Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(MID,String)
            End If
            If (DOB.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(DOB.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (DOJ.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(DOJ.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (SEX Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(SEX,String)
            End If
            If (MARITALSTATUS Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(MARITALSTATUS,String)
            End If
            If (SPOUSE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(11).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(SPOUSE,String)
            End If
            If (BG Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(12).Value = CType(BG,String)
            End If
            If (OCCUPATION Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(13).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(13).Value = CType(OCCUPATION,String)
            End If
            If (BANKER Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(14).Value = CType(BANKER,String)
            End If
            If (BANKACNO Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(15).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(15).Value = CType(BANKACNO,String)
            End If
            If (HOBBIES Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(16).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(16).Value = CType(HOBBIES,String)
            End If
            If (OTHERINFO Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(17).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(17).Value = CType(OTHERINFO,String)
            End If
            If (RESIDENT Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(18).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(18).Value = CType(RESIDENT,String)
            End If
            If (EQUALIFICATION Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(19).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(19).Value = CType(EQUALIFICATION,String)
            End If
            If (PQUALIFICATION Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(20).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(20).Value = CType(PQUALIFICATION,String)
            End If
            If (PROPOSER Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(21).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(21).Value = CType(PROPOSER,String)
            End If
            If (PROPOSERNAME Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(22).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(22).Value = CType(PROPOSERNAME,String)
            End If
            If (SECONDER Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(23).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(23).Value = CType(SECONDER,String)
            End If
            If (SECONDERNAME Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(24).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(24).Value = CType(SECONDERNAME,String)
            End If
            If (PAcopyst Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(25).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(25).Value = CType(PAcopyst,String)
            End If
            If (PADD1 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(26).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(26).Value = CType(PADD1,String)
            End If
            If (PADD2 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(27).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(27).Value = CType(PADD2,String)
            End If
            If (PADD3 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(28).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(28).Value = CType(PADD3,String)
            End If
            If (PCITY Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(29).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(29).Value = CType(PCITY,String)
            End If
            If (PSTATE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(30).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(30).Value = CType(PSTATE,String)
            End If
            If (PCOUNTRY Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(31).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(31).Value = CType(PCOUNTRY,String)
            End If
            If (PPIN Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(32).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(32).Value = CType(PPIN,String)
            End If
            If (PPHONE1 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(33).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(33).Value = CType(PPHONE1,String)
            End If
            If (PPHONE2 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(34).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(34).Value = CType(PPHONE2,String)
            End If
            If (PCELL Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(35).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(35).Value = CType(PCELL,String)
            End If
            If (PEMAIL Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(36).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(36).Value = CType(PEMAIL,String)
            End If
            If (RAcopyst Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(37).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(37).Value = CType(RAcopyst,String)
            End If
            If (CADD1 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(38).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(38).Value = CType(CADD1,String)
            End If
            If (CADD2 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(39).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(39).Value = CType(CADD2,String)
            End If
            If (CADD3 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(40).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(40).Value = CType(CADD3,String)
            End If
            If (CCITY Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(41).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(41).Value = CType(CCITY,String)
            End If
            If (CSTATE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(42).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(42).Value = CType(CSTATE,String)
            End If
            If (CCOUNTRY Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(43).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(43).Value = CType(CCOUNTRY,String)
            End If
            If (CPIN Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(44).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(44).Value = CType(CPIN,String)
            End If
            If (CPHONE1 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(45).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(45).Value = CType(CPHONE1,String)
            End If
            If (CPHONE2 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(46).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(46).Value = CType(CPHONE2,String)
            End If
            If (CCELL Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(47).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(47).Value = CType(CCELL,String)
            End If
            If (CEMAIL Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(48).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(48).Value = CType(CEMAIL,String)
            End If
            If (CONTADD1 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(49).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(49).Value = CType(CONTADD1,String)
            End If
            If (CONTADD2 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(50).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(50).Value = CType(CONTADD2,String)
            End If
            If (CONTADD3 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(51).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(51).Value = CType(CONTADD3,String)
            End If
            If (CONTCITY Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(52).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(52).Value = CType(CONTCITY,String)
            End If
            If (CONTSTATE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(53).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(53).Value = CType(CONTSTATE,String)
            End If
            If (CONTCOUNTRY Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(54).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(54).Value = CType(CONTCOUNTRY,String)
            End If
            If (CONTPIN Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(55).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(55).Value = CType(CONTPIN,String)
            End If
            If (CONTPHONE1 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(56).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(56).Value = CType(CONTPHONE1,String)
            End If
            If (CONTPHONE2 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(57).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(57).Value = CType(CONTPHONE2,String)
            End If
            If (CONTCELL Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(58).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(58).Value = CType(CONTCELL,String)
            End If
            If (CONTEMAIL Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(59).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(59).Value = CType(CONTEMAIL,String)
            End If
            If (EMPTYPE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(60).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(60).Value = CType(EMPTYPE,String)
            End If
            If (BUSINESSNAME Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(61).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(61).Value = CType(BUSINESSNAME,String)
            End If
            If (BAcopyst Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(62).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(62).Value = CType(BAcopyst,String)
            End If
            If (OADD1 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(63).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(63).Value = CType(OADD1,String)
            End If
            If (OADD2 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(64).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(64).Value = CType(OADD2,String)
            End If
            If (OADD3 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(65).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(65).Value = CType(OADD3,String)
            End If
            If (OCITY Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(66).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(66).Value = CType(OCITY,String)
            End If
            If (OSTATE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(67).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(67).Value = CType(OSTATE,String)
            End If
            If (OCOUNTRY Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(68).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(68).Value = CType(OCOUNTRY,String)
            End If
            If (OPIN Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(69).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(69).Value = CType(OPIN,String)
            End If
            If (OPHONE1 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(70).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(70).Value = CType(OPHONE1,String)
            End If
            If (OPHONE2 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(71).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(71).Value = CType(OPHONE2,String)
            End If
            If (DOEPROFESSION.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(72).Value = CType(DOEPROFESSION.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(72).Value = Global.System.DBNull.Value
            End If
            If (BUSINESSNATURE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(73).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(73).Value = CType(BUSINESSNATURE,String)
            End If
            If (POSITIONHELD Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(74).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(74).Value = CType(POSITIONHELD,String)
            End If
            If (SERVICENAME Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(75).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(75).Value = CType(SERVICENAME,String)
            End If
            If (SERVICEYEAR.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(76).Value = CType(SERVICEYEAR.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(76).Value = Global.System.DBNull.Value
            End If
            If (PANO Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(77).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(77).Value = CType(PANO,String)
            End If
            If (BBANKER Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(78).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(78).Value = CType(BBANKER,String)
            End If
            If (CCNO Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(79).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(79).Value = CType(CCNO,String)
            End If
            If (ANNUALINCOME.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(80).Value = CType(ANNUALINCOME.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(80).Value = Global.System.DBNull.Value
            End If
            If (UPDUSERID Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(81).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(81).Value = CType(UPDUSERID,String)
            End If
            If (UPDDATETIME.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(82).Value = CType(UPDDATETIME.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(82).Value = Global.System.DBNull.Value
            End If
            If (TERMINATION Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(83).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(83).Value = CType(TERMINATION,String)
            End If
            If (TRN_CON_DATE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(84).Value = CType(TRN_CON_DATE.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(84).Value = Global.System.DBNull.Value
            End If
            If (CON_MCODE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(85).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(85).Value = CType(CON_MCODE,String)
            End If
            If (PFAX Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(86).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(86).Value = CType(PFAX,String)
            End If
            If (CFAX Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(87).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(87).Value = CType(CFAX,String)
            End If
            If (CONTFAX Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(88).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(88).Value = CType(CONTFAX,String)
            End If
            If (REASON Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(89).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(89).Value = CType(REASON,String)
            End If
            If (PHOTO Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(90).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(90).Value = CType(PHOTO,String)
            End If
            If (CREDITLIMIT Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(91).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(91).Value = CType(CREDITLIMIT,String)
            End If
            If (LIMITAMOUNT.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(92).Value = CType(LIMITAMOUNT.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(92).Value = Global.System.DBNull.Value
            End If
            If (WEBSITE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(93).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(93).Value = CType(WEBSITE,String)
            End If
            If (Imagefile Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(94).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(94).Value = CType(Imagefile,Byte())
            End If
            If (sizefield.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(95).Value = CType(sizefield.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(95).Value = Global.System.DBNull.Value
            End If
            If (Vdate.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(96).Value = CType(Vdate.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(96).Value = Global.System.DBNull.Value
            End If
            If (Vyear.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(97).Value = CType(Vyear.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(97).Value = Global.System.DBNull.Value
            End If
            If (Validdate.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(98).Value = CType(Validdate.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(98).Value = Global.System.DBNull.Value
            End If
            If (TempTermination Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(99).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(99).Value = CType(TempTermination,String)
            End If
            If (TempTermDate.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(100).Value = CType(TempTermDate.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(100).Value = Global.System.DBNull.Value
            End If
            If (TempTermReason Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(101).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(101).Value = CType(TempTermReason,String)
            End If
            If (Memberid Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(102).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(102).Value = CType(Memberid,String)
            End If
            If (EndingDate.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(103).Value = CType(EndingDate.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(103).Value = Global.System.DBNull.Value
            End If
            If (TotalYears.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(104).Value = CType(TotalYears.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(104).Value = Global.System.DBNull.Value
            End If
            If (CardNo Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(105).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(105).Value = CType(CardNo,String)
            End If
            If (CardExpDate.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(106).Value = CType(CardExpDate.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(106).Value = Global.System.DBNull.Value
            End If
            If (Validity Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(107).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(107).Value = CType(Validity,String)
            End If
            If (Period Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(108).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(108).Value = CType(Period,String)
            End If
            If (Creditcardno Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(109).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(109).Value = CType(Creditcardno,String)
            End If
            If (CreditExpDt.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(110).Value = CType(CreditExpDt.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(110).Value = Global.System.DBNull.Value
            End If
            If (Type Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(111).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(111).Value = CType(Type,String)
            End If
            If (STATUSDATEFROM.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(112).Value = CType(STATUSDATEFROM.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(112).Value = Global.System.DBNull.Value
            End If
            If (STATUSDATETO.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(113).Value = CType(STATUSDATETO.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(113).Value = Global.System.DBNull.Value
            End If
            If (CurentStatus Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(114).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(114).Value = CType(CurentStatus,String)
            End If
            If (FirstName Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(115).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(115).Value = CType(FirstName,String)
            End If
            If (MiddleName Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(116).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(116).Value = CType(MiddleName,String)
            End If
            If (Surname Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(117).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(117).Value = CType(Surname,String)
            End If
            If (_Alias Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(118).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(118).Value = CType(_Alias,String)
            End If
            If (Prefix Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(119).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(119).Value = CType(Prefix,String)
            End If
            If (BillType Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(120).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(120).Value = CType(BillType,String)
            End If
            If (Nationality Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(121).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(121).Value = CType(Nationality,String)
            End If
            If (NationalityAtbirth Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(122).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(122).Value = CType(NationalityAtbirth,String)
            End If
            If (Billbasis Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(123).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(123).Value = CType(Billbasis,String)
            End If
            If (BillHead Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(124).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(124).Value = CType(BillHead,String)
            End If
            If (GDRLocker Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(125).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(125).Value = CType(GDRLocker,String)
            End If
            If (LDRLocker Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(126).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(126).Value = CType(LDRLocker,String)
            End If
            If (MembershipTo.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(127).Value = CType(MembershipTo.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(127).Value = Global.System.DBNull.Value
            End If
            If (salut Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(128).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(128).Value = CType(salut,String)
            End If
            If (EntranceFee.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(129).Value = CType(EntranceFee.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(129).Value = Global.System.DBNull.Value
            End If
            If (DevelopmentFee.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(130).Value = CType(DevelopmentFee.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(130).Value = Global.System.DBNull.Value
            End If
            If (CriditNumber Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(131).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(131).Value = CType(CriditNumber,String)
            End If
            If (SecurityDeposit.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(132).Value = CType(SecurityDeposit.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(132).Value = Global.System.DBNull.Value
            End If
            If (PlaceOfBirth Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(133).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(133).Value = CType(PlaceOfBirth,String)
            End If
            If (CountryOfBirth Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(134).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(134).Value = CType(CountryOfBirth,String)
            End If
            If (LastArrivalInCal.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(135).Value = CType(LastArrivalInCal.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(135).Value = Global.System.DBNull.Value
            End If
            If (PeriodOfStay_year.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(136).Value = CType(PeriodOfStay_year.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(136).Value = Global.System.DBNull.Value
            End If
            If (PeriodOfStay_Month.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(137).Value = CType(PeriodOfStay_Month.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(137).Value = Global.System.DBNull.Value
            End If
            If (PreviouslyProposed Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(138).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(138).Value = CType(PreviouslyProposed,String)
            End If
            If (NoOfTimesProposed.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(139).Value = CType(NoOfTimesProposed.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(139).Value = Global.System.DBNull.Value
            End If
            If (DateOfProposal.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(140).Value = CType(DateOfProposal.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(140).Value = Global.System.DBNull.Value
            End If
            If (ResultOfProposal Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(141).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(141).Value = CType(ResultOfProposal,String)
            End If
            If (Elected Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(142).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(142).Value = CType(Elected,String)
            End If
            If (FatherName Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(143).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(143).Value = CType(FatherName,String)
            End If
            If (DOBfather.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(144).Value = CType(DOBfather.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(144).Value = Global.System.DBNull.Value
            End If
            If (WifeDOB.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(145).Value = CType(WifeDOB.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(145).Value = Global.System.DBNull.Value
            End If
            If (MaidenNameWife Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(146).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(146).Value = CType(MaidenNameWife,String)
            End If
            If (NationalityWife Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(147).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(147).Value = CType(NationalityWife,String)
            End If
            If (WifesFatherName Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(148).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(148).Value = CType(WifesFatherName,String)
            End If
            If (WifeFatherDOB.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(149).Value = CType(WifeFatherDOB.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(149).Value = Global.System.DBNull.Value
            End If
            If (ApplNo Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(150).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(150).Value = CType(ApplNo,String)
            End If
            If (ApplDate.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(151).Value = CType(ApplDate.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(151).Value = Global.System.DBNull.Value
            End If
            If (Corporatest Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(152).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(152).Value = CType(Corporatest,String)
            End If
            If (CorporateCode Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(153).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(153).Value = CType(CorporateCode,String)
            End If
            If (CompName Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(154).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(154).Value = CType(CompName,String)
            End If
            If (Designation Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(155).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(155).Value = CType(Designation,String)
            End If
            If (ProfessionInfo Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(156).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(156).Value = CType(ProfessionInfo,String)
            End If
            If (BuisnessInfo Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(157).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(157).Value = CType(BuisnessInfo,String)
            End If
            If (Products Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(158).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(158).Value = CType(Products,String)
            End If
            If (AgentsDealers Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(159).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(159).Value = CType(AgentsDealers,String)
            End If
            If (ESTDdate.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(160).Value = CType(ESTDdate.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(160).Value = Global.System.DBNull.Value
            End If
            If (NoOfEmp.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(161).Value = CType(NoOfEmp.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(161).Value = Global.System.DBNull.Value
            End If
            If (Turnover.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(162).Value = CType(Turnover.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(162).Value = Global.System.DBNull.Value
            End If
            If (Client Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(163).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(163).Value = CType(Client,String)
            End If
            If (AppliedBut Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(164).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(164).Value = CType(AppliedBut,String)
            End If
            If (PositionInChamber Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(165).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(165).Value = CType(PositionInChamber,String)
            End If
            If (Qulificationstatus Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(166).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(166).Value = CType(Qulificationstatus,String)
            End If
            If (Qualification1 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(167).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(167).Value = CType(Qualification1,String)
            End If
            If (Details1 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(168).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(168).Value = CType(Details1,String)
            End If
            If (YearOfPassing1 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(169).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(169).Value = CType(YearOfPassing1,String)
            End If
            If (Institute1 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(170).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(170).Value = CType(Institute1,String)
            End If
            If (Division1 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(171).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(171).Value = CType(Division1,String)
            End If
            If (Qualification2 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(172).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(172).Value = CType(Qualification2,String)
            End If
            If (Details2 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(173).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(173).Value = CType(Details2,String)
            End If
            If (YearOfPassing2 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(174).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(174).Value = CType(YearOfPassing2,String)
            End If
            If (Institute2 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(175).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(175).Value = CType(Institute2,String)
            End If
            If (Division2 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(176).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(176).Value = CType(Division2,String)
            End If
            If (Qualification3 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(177).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(177).Value = CType(Qualification3,String)
            End If
            If (Details3 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(178).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(178).Value = CType(Details3,String)
            End If
            If (YearOfPassing3 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(179).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(179).Value = CType(YearOfPassing3,String)
            End If
            If (Institute3 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(180).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(180).Value = CType(Institute3,String)
            End If
            If (Division3 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(181).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(181).Value = CType(Division3,String)
            End If
            If (sportstatus Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(182).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(182).Value = CType(sportstatus,String)
            End If
            If (GameType1 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(183).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(183).Value = CType(GameType1,String)
            End If
            If (NameOfGame1 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(184).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(184).Value = CType(NameOfGame1,String)
            End If
            If (Description1 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(185).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(185).Value = CType(Description1,String)
            End If
            If (GameType2 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(186).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(186).Value = CType(GameType2,String)
            End If
            If (NameofGame2 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(187).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(187).Value = CType(NameofGame2,String)
            End If
            If (Description2 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(188).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(188).Value = CType(Description2,String)
            End If
            If (GameType3 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(189).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(189).Value = CType(GameType3,String)
            End If
            If (NameOfGame3 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(190).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(190).Value = CType(NameOfGame3,String)
            End If
            If (Description3 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(191).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(191).Value = CType(Description3,String)
            End If
            If (Childstatus Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(192).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(192).Value = CType(Childstatus,String)
            End If
            If (ChildName1 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(193).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(193).Value = CType(ChildName1,String)
            End If
            If (ChildDob1 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(194).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(194).Value = CType(ChildDob1,String)
            End If
            If (ChildSex1 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(195).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(195).Value = CType(ChildSex1,String)
            End If
            If (ChildExpairy1 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(196).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(196).Value = CType(ChildExpairy1,String)
            End If
            If (ChildName2 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(197).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(197).Value = CType(ChildName2,String)
            End If
            If (ChildDob2 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(198).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(198).Value = CType(ChildDob2,String)
            End If
            If (ChildSex2 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(199).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(199).Value = CType(ChildSex2,String)
            End If
            If (ChildExpairy2 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(200).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(200).Value = CType(ChildExpairy2,String)
            End If
            If (ChildName3 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(201).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(201).Value = CType(ChildName3,String)
            End If
            If (ChildDob3 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(202).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(202).Value = CType(ChildDob3,String)
            End If
            If (ChildSex3 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(203).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(203).Value = CType(ChildSex3,String)
            End If
            If (childExpairy3 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(204).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(204).Value = CType(childExpairy3,String)
            End If
            If (Clubstatus Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(205).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(205).Value = CType(Clubstatus,String)
            End If
            If (OtherClubName1 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(206).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(206).Value = CType(OtherClubName1,String)
            End If
            If (OCAddress1 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(207).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(207).Value = CType(OCAddress1,String)
            End If
            If (OCStatus1 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(208).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(208).Value = CType(OCStatus1,String)
            End If
            If (OtherClubName2 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(209).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(209).Value = CType(OtherClubName2,String)
            End If
            If (OCAddress2 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(210).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(210).Value = CType(OCAddress2,String)
            End If
            If (OCStatus2 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(211).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(211).Value = CType(OCStatus2,String)
            End If
            If (OtherClubname3 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(212).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(212).Value = CType(OtherClubname3,String)
            End If
            If (OCAddress3 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(213).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(213).Value = CType(OCAddress3,String)
            End If
            If (OCStataus Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(214).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(214).Value = CType(OCStataus,String)
            End If
            If (adduser Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(215).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(215).Value = CType(adduser,String)
            End If
            If (adddate.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(216).Value = CType(adddate.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(216).Value = Global.System.DBNull.Value
            End If
            If (freeze Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(217).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(217).Value = CType(freeze,String)
            End If
            If (Relativestatus Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(218).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(218).Value = CType(Relativestatus,String)
            End If
            If (RelativeName1 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(219).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(219).Value = CType(RelativeName1,String)
            End If
            If (Relation1 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(220).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(220).Value = CType(Relation1,String)
            End If
            If (dateofbirth1 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(221).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(221).Value = CType(dateofbirth1,String)
            End If
            If (Relativeage1 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(222).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(222).Value = CType(Relativeage1,String)
            End If
            If (RelativeSex1 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(223).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(223).Value = CType(RelativeSex1,String)
            End If
            If (Relativeaddress1 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(224).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(224).Value = CType(Relativeaddress1,String)
            End If
            If (RelativeName2 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(225).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(225).Value = CType(RelativeName2,String)
            End If
            If (Relation2 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(226).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(226).Value = CType(Relation2,String)
            End If
            If (dateofbirth2 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(227).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(227).Value = CType(dateofbirth2,String)
            End If
            If (Relativeage2 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(228).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(228).Value = CType(Relativeage2,String)
            End If
            If (RelativeSex2 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(229).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(229).Value = CType(RelativeSex2,String)
            End If
            If (Relativeaddress2 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(230).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(230).Value = CType(Relativeaddress2,String)
            End If
            If (RelativeName3 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(231).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(231).Value = CType(RelativeName3,String)
            End If
            If (Relation3 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(232).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(232).Value = CType(Relation3,String)
            End If
            If (dateofbirth3 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(233).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(233).Value = CType(dateofbirth3,String)
            End If
            If (Relativeage3 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(234).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(234).Value = CType(Relativeage3,String)
            End If
            If (RelativeSex3 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(235).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(235).Value = CType(RelativeSex3,String)
            End If
            If (Relativeaddress3 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(236).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(236).Value = CType(Relativeaddress3,String)
            End If
            If (referentialst Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(237).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(237).Value = CType(referentialst,String)
            End If
            If (mem_code1 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(238).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(238).Value = CType(mem_code1,String)
            End If
            If (mem_name1 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(239).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(239).Value = CType(mem_name1,String)
            End If
            If (refmem_date1 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(240).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(240).Value = CType(refmem_date1,String)
            End If
            If (deleted1 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(241).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(241).Value = CType(deleted1,String)
            End If
            If (mem_code2 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(242).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(242).Value = CType(mem_code2,String)
            End If
            If (mem_name2 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(243).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(243).Value = CType(mem_name2,String)
            End If
            If (refmem_date2 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(244).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(244).Value = CType(refmem_date2,String)
            End If
            If (deleted2 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(245).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(245).Value = CType(deleted2,String)
            End If
            If (mem_code3 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(246).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(246).Value = CType(mem_code3,String)
            End If
            If (mem_name3 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(247).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(247).Value = CType(mem_name3,String)
            End If
            If (refmem_date3 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(248).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(248).Value = CType(refmem_date3,String)
            End If
            If (deleted3 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(249).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(249).Value = CType(deleted3,String)
            End If
            If (entrancefeest Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(250).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(250).Value = CType(entrancefeest,String)
            End If
            If (receiptno1 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(251).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(251).Value = CType(receiptno1,String)
            End If
            If (startdate1 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(252).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(252).Value = CType(startdate1,String)
            End If
            If (amount1 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(253).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(253).Value = CType(amount1,String)
            End If
            If (receiptno2 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(254).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(254).Value = CType(receiptno2,String)
            End If
            If (startdate2 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(255).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(255).Value = CType(startdate2,String)
            End If
            If (amount2 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(256).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(256).Value = CType(amount2,String)
            End If
            If (receiptno3 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(257).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(257).Value = CType(receiptno3,String)
            End If
            If (startdate3 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(258).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(258).Value = CType(startdate3,String)
            End If
            If (amount3 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(259).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(259).Value = CType(amount3,String)
            End If
            If (OLD Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(260).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(260).Value = CType(OLD,String)
            End If
            If (CardAmt.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(261).Value = CType(CardAmt.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(261).Value = Global.System.DBNull.Value
            End If
            If (MINIMUMUSAGE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(262).Value = CType(MINIMUMUSAGE.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(262).Value = Global.System.DBNull.Value
            End If
            If (CREDITNO Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(263).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(263).Value = CType(CREDITNO,String)
            End If
            If (SPOUSEMOBILE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(264).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(264).Value = CType(SPOUSEMOBILE,String)
            End If
            If (P_NO Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(265).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(265).Value = CType(P_NO,String)
            End If
            If (MEM_CODE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(266).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(266).Value = CType(MEM_CODE,String)
            End If
            If (depnos.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(267).Value = CType(depnos.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(267).Value = Global.System.DBNull.Value
            End If
            If (mb_oprsop Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(268).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(268).Value = CType(mb_oprsop,String)
            End If
            If (m_payroll Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(269).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(269).Value = CType(m_payroll,String)
            End If
            If (lib_mem Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(270).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(270).Value = CType(lib_mem,String)
            End If
            If (libbillingbasis Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(271).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(271).Value = CType(libbillingbasis,String)
            End If
            If (mcodec Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(272).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(272).Value = CType(mcodec,String)
            End If
            If (mcoden.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(273).Value = CType(mcoden.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(273).Value = Global.System.DBNull.Value
            End If
            If (mcode1 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(274).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(274).Value = CType(mcode1,String)
            End If
            If (dow.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(275).Value = CType(dow.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(275).Value = Global.System.DBNull.Value
            End If
            If (hplocker Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(276).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(276).Value = CType(hplocker,String)
            End If
            If (GLCODE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(277).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(277).Value = CType(GLCODE,String)
            End If
            If (termletter Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(278).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(278).Value = CType(termletter,String)
            End If
            If (MEMBERTYPE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(279).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(279).Value = CType(MEMBERTYPE,String)
            End If
            If (MEMIMAGE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(280).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(280).Value = CType(MEMIMAGE,Byte())
            End If
            If (MEMIMAGESIGN Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(281).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(281).Value = CType(MEMIMAGESIGN,Byte())
            End If
            If (SDOB.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(282).Value = CType(SDOB.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(282).Value = Global.System.DBNull.Value
            End If
            If (CHILDFDOB1.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(283).Value = CType(CHILDFDOB1.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(283).Value = Global.System.DBNull.Value
            End If
            If (PADD4 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(284).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(284).Value = CType(PADD4,String)
            End If
            If (CADD4 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(285).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(285).Value = CType(CADD4,String)
            End If
            If (EMAIL_FLAG Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(286).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(286).Value = CType(EMAIL_FLAG,String)
            End If
            If (EBILL Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(287).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(287).Value = CType(EBILL,String)
            End If
            If (WEDDING_DATE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(288).Value = CType(WEDDING_DATE.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(288).Value = Global.System.DBNull.Value
            End If
            If (TAXFLAG Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(289).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(289).Value = CType(TAXFLAG,String)
            End If
            If (MLEDGERNAME Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(290).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(290).Value = CType(MLEDGERNAME,String)
            End If
            If (BACOPYST1 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(291).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(291).Value = CType(BACOPYST1,String)
            End If
            If (RACOPYST1 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(292).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(292).Value = CType(RACOPYST1,String)
            End If
            If (MSORDERNO Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(293).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(293).Value = CType(MSORDERNO,String)
            End If
            If (PREFIXMCODE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(294).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(294).Value = CType(PREFIXMCODE,String)
            End If
            If (PACOPYST1 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(295).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(295).Value = CType(PACOPYST1,String)
            End If
            If (OCELL Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(296).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(296).Value = CType(OCELL,String)
            End If
            If (OEMAIL Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(297).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(297).Value = CType(OEMAIL,String)
            End If
            If (ICNO Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(298).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(298).Value = CType(ICNO,String)
            End If
            If (UNITNO Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(299).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(299).Value = CType(UNITNO,String)
            End If
            If (DATEOFRELEASE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(300).Value = CType(DATEOFRELEASE.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(300).Value = Global.System.DBNull.Value
            End If
            If (DATEOFCREATION.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(301).Value = CType(DATEOFCREATION.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(301).Value = Global.System.DBNull.Value
            End If
            If (MDESCRIPTION Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(302).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(302).Value = CType(MDESCRIPTION,String)
            End If
            If (RIDCARDNO Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(303).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(303).Value = CType(RIDCARDNO,String)
            End If
            If (ARMSERVICE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(304).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(304).Value = CType(ARMSERVICE,String)
            End If
            If (WO Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(305).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(305).Value = CType(WO,String)
            End If
            If (NOOFDEPENDENCIES Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(306).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(306).Value = CType(NOOFDEPENDENCIES,String)
            End If
            If (RBYMEMBERNO Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(307).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(307).Value = CType(RBYMEMBERNO,String)
            End If
            If (RBYMEMBERNO2 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(308).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(308).Value = CType(RBYMEMBERNO2,String)
            End If
            If (RBYNAME Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(309).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(309).Value = CType(RBYNAME,String)
            End If
            If (RBYMEMBERNAME2 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(310).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(310).Value = CType(RBYMEMBERNAME2,String)
            End If
            If (RANKNO Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(311).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(311).Value = CType(RANKNO,String)
            End If
            If (DATEOFCOMMISSION.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(312).Value = CType(DATEOFCOMMISSION.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(312).Value = Global.System.DBNull.Value
            End If
            If (NOOFTIMESSECONDED.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(313).Value = CType(NOOFTIMESSECONDED.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(313).Value = Global.System.DBNull.Value
            End If
            If (DATEOFSECONDED.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(314).Value = CType(DATEOFSECONDED.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(314).Value = Global.System.DBNull.Value
            End If
            If (PLOTNO Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(315).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(315).Value = CType(PLOTNO,String)
            End If
            If (SOCIETYNO Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(316).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(316).Value = CType(SOCIETYNO,String)
            End If
            If (CREDITSTOPFLAG Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(317).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(317).Value = CType(CREDITSTOPFLAG,String)
            End If
            If (CREDITSTOPDATE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(318).Value = CType(CREDITSTOPDATE.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(318).Value = Global.System.DBNull.Value
            End If
            If (BTGROUP Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(319).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(319).Value = CType(BTGROUP,String)
            End If
            If (ANNIVERSARYDATE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(320).Value = CType(ANNIVERSARYDATE.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(320).Value = Global.System.DBNull.Value
            End If
            If (ARMYNO Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(321).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(321).Value = CType(ARMYNO,String)
            End If
            If (RANKNAME Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(322).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(322).Value = CType(RANKNAME,String)
            End If
            If (BARCODENO Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(323).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(323).Value = CType(BARCODENO,String)
            End If
            If (DEPENDENTID.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(324).Value = CType(DEPENDENTID.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(324).Value = Global.System.DBNull.Value
            End If
            If (SPOUSEIMAGE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(325).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(325).Value = CType(SPOUSEIMAGE,Byte())
            End If
            If (F_MCODE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(326).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(326).Value = CType(F_MCODE,String)
            End If
            If (NOMINEE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(327).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(327).Value = CType(NOMINEE,String)
            End If
            If (ENC_SMARTCARDNO Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(328).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(328).Value = CType(ENC_SMARTCARDNO,String)
            End If
            If (MTORDERNO Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(329).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(329).Value = CType(MTORDERNO,String)
            End If
            If (MARITAL_STATUS Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(330).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(330).Value = CType(MARITAL_STATUS,String)
            End If
            If (oldmcode Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(331).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(331).Value = CType(oldmcode,String)
            End If
            If (newmcode Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(332).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(332).Value = CType(newmcode,String)
            End If
            If (Memberdesigncode Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(333).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(333).Value = CType(Memberdesigncode,String)
            End If
            If (Citycode Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(334).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(334).Value = CType(Citycode,String)
            End If
            If (Statecode Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(335).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(335).Value = CType(Statecode,String)
            End If
            If (SaluatationCode Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(336).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(336).Value = CType(SaluatationCode,String)
            End If
            If (ReligionCode Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(337).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(337).Value = CType(ReligionCode,String)
            End If
            If (Countrycode Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(338).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(338).Value = CType(Countrycode,String)
            End If
            If (MemberMaritialcode Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(339).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(339).Value = CType(MemberMaritialcode,String)
            End If
            If (spouseprefix Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(340).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(340).Value = CType(spouseprefix,String)
            End If
            If (SpouseFreeze Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(341).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(341).Value = CType(SpouseFreeze,String)
            End If
            If (MEMLIMIT.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(342).Value = CType(MEMLIMIT.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(342).Value = Global.System.DBNull.Value
            End If
            If (CATLIMIT.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(343).Value = CType(CATLIMIT.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(343).Value = Global.System.DBNull.Value
            End If
            If (REPLACEMENT Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(344).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(344).Value = CType(REPLACEMENT,String)
            End If
            If (RNO Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(345).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(345).Value = CType(RNO,String)
            End If
            If (spouseimagesign Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(346).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(346).Value = CType(spouseimagesign,Byte())
            End If
            If (religion Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(347).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(347).Value = CType(religion,String)
            End If
            If (ADD_DATE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(348).Value = CType(ADD_DATE.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(348).Value = Global.System.DBNull.Value
            End If
            If (ADD_USER Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(349).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(349).Value = CType(ADD_USER,String)
            End If
            If (UPD_USER Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(350).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(350).Value = CType(UPD_USER,String)
            End If
            If (UPD_DATE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(351).Value = CType(UPD_DATE.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(351).Value = Global.System.DBNull.Value
            End If
            If (VOID Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(352).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(352).Value = CType(VOID,String)
            End If
            If (VOIDUSER Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(353).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(353).Value = CType(VOIDUSER,String)
            End If
            If (VOIDDATE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(354).Value = CType(VOIDDATE.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(354).Value = Global.System.DBNull.Value
            End If
            If (AUTHORISED Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(355).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(355).Value = CType(AUTHORISED,String)
            End If
            If (AUTHORISE_LEVEL1 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(356).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(356).Value = CType(AUTHORISE_LEVEL1,String)
            End If
            If (AUTHORISE_USER1 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(357).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(357).Value = CType(AUTHORISE_USER1,String)
            End If
            If (AUTHORISE_DATE1.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(358).Value = CType(AUTHORISE_DATE1.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(358).Value = Global.System.DBNull.Value
            End If
            If (AUTHORISE_LEVEL2 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(359).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(359).Value = CType(AUTHORISE_LEVEL2,String)
            End If
            If (AUTHORISE_USER2 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(360).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(360).Value = CType(AUTHORISE_USER2,String)
            End If
            If (AUTHORISE_DATE2.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(361).Value = CType(AUTHORISE_DATE2.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(361).Value = Global.System.DBNull.Value
            End If
            If (AUTHORISE_LEVEL3 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(362).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(362).Value = CType(AUTHORISE_LEVEL3,String)
            End If
            If (AUTHORISE_USER3 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(363).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(363).Value = CType(AUTHORISE_USER3,String)
            End If
            If (RESIGNED_DATE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(364).Value = CType(RESIGNED_DATE.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(364).Value = Global.System.DBNull.Value
            End If
            If (RESIGNED_FLAG Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(365).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(365).Value = CType(RESIGNED_FLAG,String)
            End If
            If (Newstatus Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(366).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(366).Value = CType(Newstatus,String)
            End If
            If (SECONDER1 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(367).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(367).Value = CType(SECONDER1,String)
            End If
            If (SECONDERNAME1 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(368).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(368).Value = CType(SECONDERNAME1,String)
            End If
            If (SECONDER2 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(369).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(369).Value = CType(SECONDER2,String)
            End If
            If (SECONDERNAME2 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(370).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(370).Value = CType(SECONDERNAME2,String)
            End If
            If (spl_info Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(371).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(371).Value = CType(spl_info,String)
            End If
            If (PASSPORTNO Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(372).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(372).Value = CType(PASSPORTNO,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class View_DRCR_SUMTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "View_DRCR_SUM"
            tableMapping.ColumnMappings.Add("billno", "billno")
            tableMapping.ColumnMappings.Add("billdate", "billdate")
            tableMapping.ColumnMappings.Add("MCODE", "MCODE")
            tableMapping.ColumnMappings.Add("BRAMOUNT", "BRAMOUNT")
            tableMapping.ColumnMappings.Add("CRAMOUNT", "CRAMOUNT")
            tableMapping.ColumnMappings.Add("CCRAMOUNT", "CCRAMOUNT")
            tableMapping.ColumnMappings.Add("CCNAMOUNT", "CCNAMOUNT")
            tableMapping.ColumnMappings.Add("CDNAMOUNT", "CDNAMOUNT")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.Bengal_MemberMaster.My.MySettings.Default.CLUBMAN1ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        billno, billdate, MCODE, BRAMOUNT, CRAMOUNT, CCRAMOUNT, CCNAMOUNT, "& _ 
                "CDNAMOUNT"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            View_DRCR_SUM"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DataSet2.View_DRCR_SUMDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DataSet2.View_DRCR_SUMDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DataSet2.View_DRCR_SUMDataTable = New DataSet2.View_DRCR_SUMDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class MEM_POS_DETTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "MEM_POS_DET"
            tableMapping.ColumnMappings.Add("poscode", "poscode")
            tableMapping.ColumnMappings.Add("posdesc", "posdesc")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.Bengal_MemberMaster.My.MySettings.Default.CLUBMAN1ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT * FROM MEM_POS_DET"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DataSet2.MEM_POS_DETDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DataSet2.MEM_POS_DETDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DataSet2.MEM_POS_DETDataTable = New DataSet2.MEM_POS_DETDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class VIEW_WBSTTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "VIEW_WBST"
            tableMapping.ColumnMappings.Add("BILLDETAILS", "BILLDETAILS")
            tableMapping.ColumnMappings.Add("WBST", "WBST")
            tableMapping.ColumnMappings.Add("mcode", "mcode")
            tableMapping.ColumnMappings.Add("KOTDATE", "KOTDATE")
            tableMapping.ColumnMappings.Add("TAXCODE", "TAXCODE")
            tableMapping.ColumnMappings.Add("TAXPERCENT", "TAXPERCENT")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.Bengal_MemberMaster.My.MySettings.Default.CLUBMAN1ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "select *  from VIEW_WBST "
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DataSet2.VIEW_WBSTDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DataSet2.VIEW_WBSTDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DataSet2.VIEW_WBSTDataTable = New DataSet2.VIEW_WBSTDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class View_Recipt_DetCCLTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "View_Recipt_DetCCL"
            tableMapping.ColumnMappings.Add("billno", "billno")
            tableMapping.ColumnMappings.Add("billdate", "billdate")
            tableMapping.ColumnMappings.Add("MCODE", "MCODE")
            tableMapping.ColumnMappings.Add("Dramount", "Dramount")
            tableMapping.ColumnMappings.Add("Cramount", "Cramount")
            tableMapping.ColumnMappings.Add("locdesc", "locdesc")
            tableMapping.ColumnMappings.Add("loccode", "loccode")
            tableMapping.ColumnMappings.Add("InstrumentType", "InstrumentType")
            tableMapping.ColumnMappings.Add("Description", "Description")
            tableMapping.ColumnMappings.Add("Instrumentno", "Instrumentno")
            tableMapping.ColumnMappings.Add("CREDITDEBIT", "CREDITDEBIT")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.Bengal_MemberMaster.My.MySettings.Default.CCL1516ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "select * from View_Recipt_DetCCL"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DataSet2.View_Recipt_DetCCLDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DataSet2.View_Recipt_DetCCLDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DataSet2.View_Recipt_DetCCLDataTable = New DataSet2.View_Recipt_DetCCLDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class MEMBER_CONSUMPTION_OUTLETTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "MEMBER_CONSUMPTION_OUTLET"
            tableMapping.ColumnMappings.Add("BILLDETAILS", "BILLDETAILS")
            tableMapping.ColumnMappings.Add("POSCODE", "POSCODE")
            tableMapping.ColumnMappings.Add("POSDESC", "POSDESC")
            tableMapping.ColumnMappings.Add("KOTDATE", "KOTDATE")
            tableMapping.ColumnMappings.Add("MCODE", "MCODE")
            tableMapping.ColumnMappings.Add("AMOUNT", "AMOUNT")
            tableMapping.ColumnMappings.Add("VAT14", "VAT14")
            tableMapping.ColumnMappings.Add("VAT25", "VAT25")
            tableMapping.ColumnMappings.Add("VAT35", "VAT35")
            tableMapping.ColumnMappings.Add("VAT7", "VAT7")
            tableMapping.ColumnMappings.Add("VAT5", "VAT5")
            tableMapping.ColumnMappings.Add("SERTAX4", "SERTAX4")
            tableMapping.ColumnMappings.Add("SERTAX12", "SERTAX12")
            tableMapping.ColumnMappings.Add("SCharge", "SCharge")
            tableMapping.ColumnMappings.Add("SERVICE_CHARGE", "SERVICE_CHARGE")
            tableMapping.ColumnMappings.Add("SNO", "SNO")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.Bengal_MemberMaster.My.MySettings.Default.CCL1516ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "select * from MEMBER_CONSUMPTION_OUTLET"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DataSet2.MEMBER_CONSUMPTION_OUTLETDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DataSet2.MEMBER_CONSUMPTION_OUTLETDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DataSet2.MEMBER_CONSUMPTION_OUTLETDataTable = New DataSet2.MEMBER_CONSUMPTION_OUTLETDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class VW_CommitteeTransactionTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "VW_CommitteeTransaction"
            tableMapping.ColumnMappings.Add("MCODE", "MCODE")
            tableMapping.ColumnMappings.Add("MNAME", "MNAME")
            tableMapping.ColumnMappings.Add("DesignationCode", "DesignationCode")
            tableMapping.ColumnMappings.Add("Designation", "Designation")
            tableMapping.ColumnMappings.Add("CEMAIL", "CEMAIL")
            tableMapping.ColumnMappings.Add("CCELL", "CCELL")
            tableMapping.ColumnMappings.Add("MEMIMAGE", "MEMIMAGE")
            tableMapping.ColumnMappings.Add("CurentStatus", "CurentStatus")
            tableMapping.ColumnMappings.Add("Fromdate", "Fromdate")
            tableMapping.ColumnMappings.Add("Todate", "Todate")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.Bengal_MemberMaster.My.MySettings.Default.CCL1516ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "select * from VW_CommitteeTransaction"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DataSet2.VW_CommitteeTransactionDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DataSet2.VW_CommitteeTransactionDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DataSet2.VW_CommitteeTransactionDataTable = New DataSet2.VW_CommitteeTransactionDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class accountsglaccountmasterTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "accountsglaccountmaster"
            tableMapping.ColumnMappings.Add("accode", "accode")
            tableMapping.ColumnMappings.Add("acdesc", "acdesc")
            tableMapping.ColumnMappings.Add("alias", "alias")
            tableMapping.ColumnMappings.Add("subledgerflag", "subledgerflag")
            tableMapping.ColumnMappings.Add("groupname", "groupname")
            tableMapping.ColumnMappings.Add("subgroup", "subgroup")
            tableMapping.ColumnMappings.Add("actype", "actype")
            tableMapping.ColumnMappings.Add("budgetflag", "budgetflag")
            tableMapping.ColumnMappings.Add("bank", "bank")
            tableMapping.ColumnMappings.Add("bankaddress", "bankaddress")
            tableMapping.ColumnMappings.Add("opdebits", "opdebits")
            tableMapping.ColumnMappings.Add("opcredits", "opcredits")
            tableMapping.ColumnMappings.Add("cldebits", "cldebits")
            tableMapping.ColumnMappings.Add("clcredits", "clcredits")
            tableMapping.ColumnMappings.Add("aprdebits", "aprdebits")
            tableMapping.ColumnMappings.Add("aprcredits", "aprcredits")
            tableMapping.ColumnMappings.Add("maydebits", "maydebits")
            tableMapping.ColumnMappings.Add("maycredits", "maycredits")
            tableMapping.ColumnMappings.Add("jundebits", "jundebits")
            tableMapping.ColumnMappings.Add("juncredits", "juncredits")
            tableMapping.ColumnMappings.Add("juldebits", "juldebits")
            tableMapping.ColumnMappings.Add("julcredits", "julcredits")
            tableMapping.ColumnMappings.Add("augdebits", "augdebits")
            tableMapping.ColumnMappings.Add("augcredits", "augcredits")
            tableMapping.ColumnMappings.Add("sepdebits", "sepdebits")
            tableMapping.ColumnMappings.Add("sepcredits", "sepcredits")
            tableMapping.ColumnMappings.Add("octdebits", "octdebits")
            tableMapping.ColumnMappings.Add("octcredits", "octcredits")
            tableMapping.ColumnMappings.Add("novdebits", "novdebits")
            tableMapping.ColumnMappings.Add("novcredits", "novcredits")
            tableMapping.ColumnMappings.Add("decdebits", "decdebits")
            tableMapping.ColumnMappings.Add("deccredits", "deccredits")
            tableMapping.ColumnMappings.Add("jandebits", "jandebits")
            tableMapping.ColumnMappings.Add("jancredits", "jancredits")
            tableMapping.ColumnMappings.Add("febdebits", "febdebits")
            tableMapping.ColumnMappings.Add("febcredits", "febcredits")
            tableMapping.ColumnMappings.Add("mardebits", "mardebits")
            tableMapping.ColumnMappings.Add("marcredits", "marcredits")
            tableMapping.ColumnMappings.Add("actuallastyear", "actuallastyear")
            tableMapping.ColumnMappings.Add("projectedlastyear", "projectedlastyear")
            tableMapping.ColumnMappings.Add("actualcurrentyear", "actualcurrentyear")
            tableMapping.ColumnMappings.Add("projectedcurrentyear", "projectedcurrentyear")
            tableMapping.ColumnMappings.Add("actualnextyear", "actualnextyear")
            tableMapping.ColumnMappings.Add("projectednextyear", "projectednextyear")
            tableMapping.ColumnMappings.Add("adduserid", "adduserid")
            tableMapping.ColumnMappings.Add("adddatetime", "adddatetime")
            tableMapping.ColumnMappings.Add("updateuserid", "updateuserid")
            tableMapping.ColumnMappings.Add("updatedatetime", "updatedatetime")
            tableMapping.ColumnMappings.Add("freezeflag", "freezeflag")
            tableMapping.ColumnMappings.Add("freezeuserid", "freezeuserid")
            tableMapping.ColumnMappings.Add("freezedatetime", "freezedatetime")
            tableMapping.ColumnMappings.Add("BSPL", "BSPL")
            tableMapping.ColumnMappings.Add("FREZEEFLAG", "FREZEEFLAG")
            tableMapping.ColumnMappings.Add("CATEGORY", "CATEGORY")
            tableMapping.ColumnMappings.Add("DEPPER", "DEPPER")
            tableMapping.ColumnMappings.Add("SUBSUBGROUP", "SUBSUBGROUP")
            tableMapping.ColumnMappings.Add("SLTYPE", "SLTYPE")
            tableMapping.ColumnMappings.Add("COST", "COST")
            tableMapping.ColumnMappings.Add("COSTMASTER", "COSTMASTER")
            tableMapping.ColumnMappings.Add("ADD_DATE", "ADD_DATE")
            tableMapping.ColumnMappings.Add("ADD_USER", "ADD_USER")
            tableMapping.ColumnMappings.Add("UPD_USER", "UPD_USER")
            tableMapping.ColumnMappings.Add("UPD_DATE", "UPD_DATE")
            tableMapping.ColumnMappings.Add("VOIDUSER", "VOIDUSER")
            tableMapping.ColumnMappings.Add("VOIDDATE", "VOIDDATE")
            tableMapping.ColumnMappings.Add("AUTHORISED", "AUTHORISED")
            tableMapping.ColumnMappings.Add("AUTHORISE_LEVEL1", "AUTHORISE_LEVEL1")
            tableMapping.ColumnMappings.Add("AUTHORISE_USER1", "AUTHORISE_USER1")
            tableMapping.ColumnMappings.Add("AUTHORISE_DATE1", "AUTHORISE_DATE1")
            tableMapping.ColumnMappings.Add("AUTHORISE_LEVEL2", "AUTHORISE_LEVEL2")
            tableMapping.ColumnMappings.Add("AUTHORISE_USER2", "AUTHORISE_USER2")
            tableMapping.ColumnMappings.Add("AUTHORISE_DATE2", "AUTHORISE_DATE2")
            tableMapping.ColumnMappings.Add("AUTHORISE_LEVEL3", "AUTHORISE_LEVEL3")
            tableMapping.ColumnMappings.Add("AUTHORISE_USER3", "AUTHORISE_USER3")
            tableMapping.ColumnMappings.Add("AUTHORISE_DATE3", "AUTHORISE_DATE3")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [accountsglaccountmaster] ([accode], [acdesc], [alias], [subledgerfla"& _ 
                "g], [groupname], [subgroup], [actype], [budgetflag], [bank], [bankaddress], [opd"& _ 
                "ebits], [opcredits], [cldebits], [clcredits], [aprdebits], [aprcredits], [maydeb"& _ 
                "its], [maycredits], [jundebits], [juncredits], [juldebits], [julcredits], [augde"& _ 
                "bits], [augcredits], [sepdebits], [sepcredits], [octdebits], [octcredits], [novd"& _ 
                "ebits], [novcredits], [decdebits], [deccredits], [jandebits], [jancredits], [feb"& _ 
                "debits], [febcredits], [mardebits], [marcredits], [actuallastyear], [projectedla"& _ 
                "styear], [actualcurrentyear], [projectedcurrentyear], [actualnextyear], [project"& _ 
                "ednextyear], [adduserid], [adddatetime], [updateuserid], [updatedatetime], [free"& _ 
                "zeflag], [freezeuserid], [freezedatetime], [BSPL], [FREZEEFLAG], [CATEGORY], [DE"& _ 
                "PPER], [SUBSUBGROUP], [SLTYPE], [COST], [COSTMASTER], [ADD_DATE], [ADD_USER], [U"& _ 
                "PD_USER], [UPD_DATE], [VOIDUSER], [VOIDDATE], [AUTHORISED], [AUTHORISE_LEVEL1], "& _ 
                "[AUTHORISE_USER1], [AUTHORISE_DATE1], [AUTHORISE_LEVEL2], [AUTHORISE_USER2], [AU"& _ 
                "THORISE_DATE2], [AUTHORISE_LEVEL3], [AUTHORISE_USER3], [AUTHORISE_DATE3]) VALUES"& _ 
                " (@accode, @acdesc, @alias, @subledgerflag, @groupname, @subgroup, @actype, @bud"& _ 
                "getflag, @bank, @bankaddress, @opdebits, @opcredits, @cldebits, @clcredits, @apr"& _ 
                "debits, @aprcredits, @maydebits, @maycredits, @jundebits, @juncredits, @juldebit"& _ 
                "s, @julcredits, @augdebits, @augcredits, @sepdebits, @sepcredits, @octdebits, @o"& _ 
                "ctcredits, @novdebits, @novcredits, @decdebits, @deccredits, @jandebits, @jancre"& _ 
                "dits, @febdebits, @febcredits, @mardebits, @marcredits, @actuallastyear, @projec"& _ 
                "tedlastyear, @actualcurrentyear, @projectedcurrentyear, @actualnextyear, @projec"& _ 
                "tednextyear, @adduserid, @adddatetime, @updateuserid, @updatedatetime, @freezefl"& _ 
                "ag, @freezeuserid, @freezedatetime, @BSPL, @FREZEEFLAG, @CATEGORY, @DEPPER, @SUB"& _ 
                "SUBGROUP, @SLTYPE, @COST, @COSTMASTER, @ADD_DATE, @ADD_USER, @UPD_USER, @UPD_DAT"& _ 
                "E, @VOIDUSER, @VOIDDATE, @AUTHORISED, @AUTHORISE_LEVEL1, @AUTHORISE_USER1, @AUTH"& _ 
                "ORISE_DATE1, @AUTHORISE_LEVEL2, @AUTHORISE_USER2, @AUTHORISE_DATE2, @AUTHORISE_L"& _ 
                "EVEL3, @AUTHORISE_USER3, @AUTHORISE_DATE3)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@accode", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "accode", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@acdesc", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "acdesc", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@alias", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "alias", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@subledgerflag", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "subledgerflag", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@groupname", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "groupname", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@subgroup", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "subgroup", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@actype", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "actype", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@budgetflag", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "budgetflag", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@bank", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "bank", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@bankaddress", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "bankaddress", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@opdebits", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "opdebits", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@opcredits", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "opcredits", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@cldebits", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "cldebits", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@clcredits", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "clcredits", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@aprdebits", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "aprdebits", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@aprcredits", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "aprcredits", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@maydebits", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "maydebits", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@maycredits", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "maycredits", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@jundebits", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "jundebits", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@juncredits", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "juncredits", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@juldebits", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "juldebits", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@julcredits", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "julcredits", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@augdebits", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "augdebits", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@augcredits", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "augcredits", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@sepdebits", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "sepdebits", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@sepcredits", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "sepcredits", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@octdebits", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "octdebits", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@octcredits", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "octcredits", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@novdebits", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "novdebits", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@novcredits", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "novcredits", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@decdebits", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "decdebits", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@deccredits", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "deccredits", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@jandebits", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "jandebits", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@jancredits", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "jancredits", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@febdebits", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "febdebits", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@febcredits", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "febcredits", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@mardebits", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "mardebits", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@marcredits", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "marcredits", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@actuallastyear", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "actuallastyear", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@projectedlastyear", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "projectedlastyear", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@actualcurrentyear", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "actualcurrentyear", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@projectedcurrentyear", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "projectedcurrentyear", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@actualnextyear", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "actualnextyear", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@projectednextyear", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "projectednextyear", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@adduserid", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "adduserid", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@adddatetime", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "adddatetime", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@updateuserid", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "updateuserid", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@updatedatetime", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "updatedatetime", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@freezeflag", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "freezeflag", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@freezeuserid", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "freezeuserid", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@freezedatetime", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "freezedatetime", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BSPL", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BSPL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FREZEEFLAG", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FREZEEFLAG", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CATEGORY", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CATEGORY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DEPPER", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 2, "DEPPER", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SUBSUBGROUP", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SUBSUBGROUP", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SLTYPE", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SLTYPE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@COST", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "COST", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@COSTMASTER", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "COSTMASTER", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ADD_DATE", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ADD_DATE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ADD_USER", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ADD_USER", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@UPD_USER", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UPD_USER", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@UPD_DATE", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UPD_DATE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@VOIDUSER", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VOIDUSER", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@VOIDDATE", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VOIDDATE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AUTHORISED", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AUTHORISED", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AUTHORISE_LEVEL1", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AUTHORISE_LEVEL1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AUTHORISE_USER1", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AUTHORISE_USER1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AUTHORISE_DATE1", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AUTHORISE_DATE1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AUTHORISE_LEVEL2", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AUTHORISE_LEVEL2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AUTHORISE_USER2", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AUTHORISE_USER2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AUTHORISE_DATE2", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AUTHORISE_DATE2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AUTHORISE_LEVEL3", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AUTHORISE_LEVEL3", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AUTHORISE_USER3", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AUTHORISE_USER3", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AUTHORISE_DATE3", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AUTHORISE_DATE3", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.Bengal_MemberMaster.My.MySettings.Default.CCL1516ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT  *  FROM accountsglaccountmaster"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DataSet2.accountsglaccountmasterDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DataSet2.accountsglaccountmasterDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DataSet2.accountsglaccountmasterDataTable = New DataSet2.accountsglaccountmasterDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As DataSet2.accountsglaccountmasterDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As DataSet2) As Integer
            Return Me.Adapter.Update(dataSet, "accountsglaccountmaster")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert( _
                    ByVal accode As String,  _
                    ByVal acdesc As String,  _
                    ByVal _alias As String,  _
                    ByVal subledgerflag As String,  _
                    ByVal groupname As String,  _
                    ByVal subgroup As String,  _
                    ByVal actype As String,  _
                    ByVal budgetflag As String,  _
                    ByVal bank As String,  _
                    ByVal bankaddress As String,  _
                    ByVal opdebits As Global.System.Nullable(Of Decimal),  _
                    ByVal opcredits As Global.System.Nullable(Of Decimal),  _
                    ByVal cldebits As Global.System.Nullable(Of Decimal),  _
                    ByVal clcredits As Global.System.Nullable(Of Decimal),  _
                    ByVal aprdebits As Global.System.Nullable(Of Decimal),  _
                    ByVal aprcredits As Global.System.Nullable(Of Decimal),  _
                    ByVal maydebits As Global.System.Nullable(Of Decimal),  _
                    ByVal maycredits As Global.System.Nullable(Of Decimal),  _
                    ByVal jundebits As Global.System.Nullable(Of Decimal),  _
                    ByVal juncredits As Global.System.Nullable(Of Decimal),  _
                    ByVal juldebits As Global.System.Nullable(Of Decimal),  _
                    ByVal julcredits As Global.System.Nullable(Of Decimal),  _
                    ByVal augdebits As Global.System.Nullable(Of Decimal),  _
                    ByVal augcredits As Global.System.Nullable(Of Decimal),  _
                    ByVal sepdebits As Global.System.Nullable(Of Decimal),  _
                    ByVal sepcredits As Global.System.Nullable(Of Decimal),  _
                    ByVal octdebits As Global.System.Nullable(Of Decimal),  _
                    ByVal octcredits As Global.System.Nullable(Of Decimal),  _
                    ByVal novdebits As Global.System.Nullable(Of Decimal),  _
                    ByVal novcredits As Global.System.Nullable(Of Decimal),  _
                    ByVal decdebits As Global.System.Nullable(Of Decimal),  _
                    ByVal deccredits As Global.System.Nullable(Of Decimal),  _
                    ByVal jandebits As Global.System.Nullable(Of Decimal),  _
                    ByVal jancredits As Global.System.Nullable(Of Decimal),  _
                    ByVal febdebits As Global.System.Nullable(Of Decimal),  _
                    ByVal febcredits As Global.System.Nullable(Of Decimal),  _
                    ByVal mardebits As Global.System.Nullable(Of Decimal),  _
                    ByVal marcredits As Global.System.Nullable(Of Decimal),  _
                    ByVal actuallastyear As Global.System.Nullable(Of Decimal),  _
                    ByVal projectedlastyear As Global.System.Nullable(Of Decimal),  _
                    ByVal actualcurrentyear As Global.System.Nullable(Of Decimal),  _
                    ByVal projectedcurrentyear As Global.System.Nullable(Of Decimal),  _
                    ByVal actualnextyear As Global.System.Nullable(Of Decimal),  _
                    ByVal projectednextyear As Global.System.Nullable(Of Decimal),  _
                    ByVal adduserid As String,  _
                    ByVal adddatetime As Global.System.Nullable(Of Date),  _
                    ByVal updateuserid As String,  _
                    ByVal updatedatetime As Global.System.Nullable(Of Date),  _
                    ByVal freezeflag As String,  _
                    ByVal freezeuserid As String,  _
                    ByVal freezedatetime As Global.System.Nullable(Of Date),  _
                    ByVal BSPL As String,  _
                    ByVal FREZEEFLAG As String,  _
                    ByVal CATEGORY As String,  _
                    ByVal DEPPER As Global.System.Nullable(Of Decimal),  _
                    ByVal SUBSUBGROUP As String,  _
                    ByVal SLTYPE As String,  _
                    ByVal COST As String,  _
                    ByVal COSTMASTER As String,  _
                    ByVal ADD_DATE As Global.System.Nullable(Of Date),  _
                    ByVal ADD_USER As String,  _
                    ByVal UPD_USER As String,  _
                    ByVal UPD_DATE As Global.System.Nullable(Of Date),  _
                    ByVal VOIDUSER As String,  _
                    ByVal VOIDDATE As Global.System.Nullable(Of Date),  _
                    ByVal AUTHORISED As String,  _
                    ByVal AUTHORISE_LEVEL1 As String,  _
                    ByVal AUTHORISE_USER1 As String,  _
                    ByVal AUTHORISE_DATE1 As Global.System.Nullable(Of Date),  _
                    ByVal AUTHORISE_LEVEL2 As String,  _
                    ByVal AUTHORISE_USER2 As String,  _
                    ByVal AUTHORISE_DATE2 As Global.System.Nullable(Of Date),  _
                    ByVal AUTHORISE_LEVEL3 As String,  _
                    ByVal AUTHORISE_USER3 As String,  _
                    ByVal AUTHORISE_DATE3 As Global.System.Nullable(Of Date)) As Integer
            If (accode Is Nothing) Then
                Throw New Global.System.ArgumentNullException("accode")
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(accode,String)
            End If
            If (acdesc Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(acdesc,String)
            End If
            If (_alias Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(_alias,String)
            End If
            If (subledgerflag Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(subledgerflag,String)
            End If
            If (groupname Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(groupname,String)
            End If
            If (subgroup Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(subgroup,String)
            End If
            If (actype Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(actype,String)
            End If
            If (budgetflag Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(budgetflag,String)
            End If
            If (bank Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(bank,String)
            End If
            If (bankaddress Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(bankaddress,String)
            End If
            If (opdebits.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(opdebits.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (opcredits.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(opcredits.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (cldebits.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(12).Value = CType(cldebits.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (clcredits.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(13).Value = CType(clcredits.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(13).Value = Global.System.DBNull.Value
            End If
            If (aprdebits.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(14).Value = CType(aprdebits.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (aprcredits.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(15).Value = CType(aprcredits.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(15).Value = Global.System.DBNull.Value
            End If
            If (maydebits.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(16).Value = CType(maydebits.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (maycredits.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(17).Value = CType(maycredits.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(17).Value = Global.System.DBNull.Value
            End If
            If (jundebits.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(18).Value = CType(jundebits.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(18).Value = Global.System.DBNull.Value
            End If
            If (juncredits.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(19).Value = CType(juncredits.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(19).Value = Global.System.DBNull.Value
            End If
            If (juldebits.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(20).Value = CType(juldebits.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(20).Value = Global.System.DBNull.Value
            End If
            If (julcredits.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(21).Value = CType(julcredits.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(21).Value = Global.System.DBNull.Value
            End If
            If (augdebits.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(22).Value = CType(augdebits.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(22).Value = Global.System.DBNull.Value
            End If
            If (augcredits.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(23).Value = CType(augcredits.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(23).Value = Global.System.DBNull.Value
            End If
            If (sepdebits.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(24).Value = CType(sepdebits.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(24).Value = Global.System.DBNull.Value
            End If
            If (sepcredits.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(25).Value = CType(sepcredits.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(25).Value = Global.System.DBNull.Value
            End If
            If (octdebits.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(26).Value = CType(octdebits.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(26).Value = Global.System.DBNull.Value
            End If
            If (octcredits.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(27).Value = CType(octcredits.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(27).Value = Global.System.DBNull.Value
            End If
            If (novdebits.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(28).Value = CType(novdebits.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(28).Value = Global.System.DBNull.Value
            End If
            If (novcredits.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(29).Value = CType(novcredits.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(29).Value = Global.System.DBNull.Value
            End If
            If (decdebits.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(30).Value = CType(decdebits.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(30).Value = Global.System.DBNull.Value
            End If
            If (deccredits.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(31).Value = CType(deccredits.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(31).Value = Global.System.DBNull.Value
            End If
            If (jandebits.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(32).Value = CType(jandebits.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(32).Value = Global.System.DBNull.Value
            End If
            If (jancredits.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(33).Value = CType(jancredits.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(33).Value = Global.System.DBNull.Value
            End If
            If (febdebits.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(34).Value = CType(febdebits.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(34).Value = Global.System.DBNull.Value
            End If
            If (febcredits.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(35).Value = CType(febcredits.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(35).Value = Global.System.DBNull.Value
            End If
            If (mardebits.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(36).Value = CType(mardebits.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(36).Value = Global.System.DBNull.Value
            End If
            If (marcredits.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(37).Value = CType(marcredits.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(37).Value = Global.System.DBNull.Value
            End If
            If (actuallastyear.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(38).Value = CType(actuallastyear.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(38).Value = Global.System.DBNull.Value
            End If
            If (projectedlastyear.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(39).Value = CType(projectedlastyear.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(39).Value = Global.System.DBNull.Value
            End If
            If (actualcurrentyear.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(40).Value = CType(actualcurrentyear.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(40).Value = Global.System.DBNull.Value
            End If
            If (projectedcurrentyear.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(41).Value = CType(projectedcurrentyear.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(41).Value = Global.System.DBNull.Value
            End If
            If (actualnextyear.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(42).Value = CType(actualnextyear.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(42).Value = Global.System.DBNull.Value
            End If
            If (projectednextyear.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(43).Value = CType(projectednextyear.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(43).Value = Global.System.DBNull.Value
            End If
            If (adduserid Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(44).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(44).Value = CType(adduserid,String)
            End If
            If (adddatetime.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(45).Value = CType(adddatetime.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(45).Value = Global.System.DBNull.Value
            End If
            If (updateuserid Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(46).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(46).Value = CType(updateuserid,String)
            End If
            If (updatedatetime.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(47).Value = CType(updatedatetime.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(47).Value = Global.System.DBNull.Value
            End If
            If (freezeflag Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(48).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(48).Value = CType(freezeflag,String)
            End If
            If (freezeuserid Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(49).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(49).Value = CType(freezeuserid,String)
            End If
            If (freezedatetime.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(50).Value = CType(freezedatetime.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(50).Value = Global.System.DBNull.Value
            End If
            If (BSPL Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(51).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(51).Value = CType(BSPL,String)
            End If
            If (FREZEEFLAG Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(52).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(52).Value = CType(FREZEEFLAG,String)
            End If
            If (CATEGORY Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(53).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(53).Value = CType(CATEGORY,String)
            End If
            If (DEPPER.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(54).Value = CType(DEPPER.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(54).Value = Global.System.DBNull.Value
            End If
            If (SUBSUBGROUP Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(55).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(55).Value = CType(SUBSUBGROUP,String)
            End If
            If (SLTYPE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(56).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(56).Value = CType(SLTYPE,String)
            End If
            If (COST Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(57).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(57).Value = CType(COST,String)
            End If
            If (COSTMASTER Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(58).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(58).Value = CType(COSTMASTER,String)
            End If
            If (ADD_DATE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(59).Value = CType(ADD_DATE.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(59).Value = Global.System.DBNull.Value
            End If
            If (ADD_USER Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(60).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(60).Value = CType(ADD_USER,String)
            End If
            If (UPD_USER Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(61).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(61).Value = CType(UPD_USER,String)
            End If
            If (UPD_DATE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(62).Value = CType(UPD_DATE.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(62).Value = Global.System.DBNull.Value
            End If
            If (VOIDUSER Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(63).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(63).Value = CType(VOIDUSER,String)
            End If
            If (VOIDDATE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(64).Value = CType(VOIDDATE.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(64).Value = Global.System.DBNull.Value
            End If
            If (AUTHORISED Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(65).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(65).Value = CType(AUTHORISED,String)
            End If
            If (AUTHORISE_LEVEL1 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(66).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(66).Value = CType(AUTHORISE_LEVEL1,String)
            End If
            If (AUTHORISE_USER1 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(67).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(67).Value = CType(AUTHORISE_USER1,String)
            End If
            If (AUTHORISE_DATE1.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(68).Value = CType(AUTHORISE_DATE1.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(68).Value = Global.System.DBNull.Value
            End If
            If (AUTHORISE_LEVEL2 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(69).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(69).Value = CType(AUTHORISE_LEVEL2,String)
            End If
            If (AUTHORISE_USER2 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(70).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(70).Value = CType(AUTHORISE_USER2,String)
            End If
            If (AUTHORISE_DATE2.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(71).Value = CType(AUTHORISE_DATE2.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(71).Value = Global.System.DBNull.Value
            End If
            If (AUTHORISE_LEVEL3 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(72).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(72).Value = CType(AUTHORISE_LEVEL3,String)
            End If
            If (AUTHORISE_USER3 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(73).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(73).Value = CType(AUTHORISE_USER3,String)
            End If
            If (AUTHORISE_DATE3.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(74).Value = CType(AUTHORISE_DATE3.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(74).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class GSTSUBSBILLDETAILSTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "GSTSUBSBILLDETAILS"
            tableMapping.ColumnMappings.Add("billno", "billno")
            tableMapping.ColumnMappings.Add("billdate", "billdate")
            tableMapping.ColumnMappings.Add("membertype", "membertype")
            tableMapping.ColumnMappings.Add("MNAME", "MNAME")
            tableMapping.ColumnMappings.Add("SUBSCODE", "SUBSCODE")
            tableMapping.ColumnMappings.Add("subsdesc", "subsdesc")
            tableMapping.ColumnMappings.Add("billingbasis", "billingbasis")
            tableMapping.ColumnMappings.Add("type", "type")
            tableMapping.ColumnMappings.Add("SUBSAMOUNT", "SUBSAMOUNT")
            tableMapping.ColumnMappings.Add("SGST", "SGST")
            tableMapping.ColumnMappings.Add("CGST", "CGST")
            tableMapping.ColumnMappings.Add("CESS", "CESS")
            tableMapping.ColumnMappings.Add("TOTAL", "TOTAL")
            tableMapping.ColumnMappings.Add("TAXCODE", "TAXCODE")
            tableMapping.ColumnMappings.Add("TAXDESC", "TAXDESC")
            tableMapping.ColumnMappings.Add("MCODE", "MCODE")
            tableMapping.ColumnMappings.Add("postingsno", "postingsno")
            tableMapping.ColumnMappings.Add("CONTADD1", "CONTADD1")
            tableMapping.ColumnMappings.Add("CONTADD2", "CONTADD2")
            tableMapping.ColumnMappings.Add("CONTADD3", "CONTADD3")
            tableMapping.ColumnMappings.Add("CONTCITY", "CONTCITY")
            tableMapping.ColumnMappings.Add("CONTSTATE", "CONTSTATE")
            tableMapping.ColumnMappings.Add("CGSTTAXPER", "CGSTTAXPER")
            tableMapping.ColumnMappings.Add("SGSTTAXPER", "SGSTTAXPER")
            tableMapping.ColumnMappings.Add("CESSTAXPER", "CESSTAXPER")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.Bengal_MemberMaster.My.MySettings.Default.MLA1718ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT billno, billdate, membertype, MNAME, SUBSCODE, subsdesc, billingbasis, typ"& _ 
                "e, SUBSAMOUNT, SGST, CGST, CESS, TOTAL, TAXCODE, TAXDESC, MCODE, postingsno, CON"& _ 
                "TADD1, CONTADD2, CONTADD3, CONTCITY, CONTSTATE, CGSTTAXPER, SGSTTAXPER, CESSTAXP"& _ 
                "ER FROM dbo.GSTSUBSBILLDETAILS"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DataSet2.GSTSUBSBILLDETAILSDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DataSet2.GSTSUBSBILLDETAILSDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DataSet2.GSTSUBSBILLDETAILSDataTable = New DataSet2.GSTSUBSBILLDETAILSDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class clubmasterTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "clubmaster"
            tableMapping.ColumnMappings.Add("COMPANYNAME", "COMPANYNAME")
            tableMapping.ColumnMappings.Add("FROMDATE", "FROMDATE")
            tableMapping.ColumnMappings.Add("TODATE", "TODATE")
            tableMapping.ColumnMappings.Add("SHORTNAME", "SHORTNAME")
            tableMapping.ColumnMappings.Add("ADD1", "ADD1")
            tableMapping.ColumnMappings.Add("ADD2", "ADD2")
            tableMapping.ColumnMappings.Add("CITY", "CITY")
            tableMapping.ColumnMappings.Add("STATE", "STATE")
            tableMapping.ColumnMappings.Add("PINCODE", "PINCODE")
            tableMapping.ColumnMappings.Add("PHONE1", "PHONE1")
            tableMapping.ColumnMappings.Add("PHONE2", "PHONE2")
            tableMapping.ColumnMappings.Add("FAX", "FAX")
            tableMapping.ColumnMappings.Add("EMAIL", "EMAIL")
            tableMapping.ColumnMappings.Add("WEBSITE", "WEBSITE")
            tableMapping.ColumnMappings.Add("DATAfile", "DATAfile")
            tableMapping.ColumnMappings.Add("INDATE", "INDATE")
            tableMapping.ColumnMappings.Add("FRONT", "FRONT")
            tableMapping.ColumnMappings.Add("FRONTFILE", "FRONTFILE")
            tableMapping.ColumnMappings.Add("MAIN", "MAIN")
            tableMapping.ColumnMappings.Add("MAINFILE", "MAINFILE")
            tableMapping.ColumnMappings.Add("LOGO", "LOGO")
            tableMapping.ColumnMappings.Add("LOGOFILE", "LOGOFILE")
            tableMapping.ColumnMappings.Add("COMP", "COMP")
            tableMapping.ColumnMappings.Add("COMP1", "COMP1")
            tableMapping.ColumnMappings.Add("comptdacc", "comptdacc")
            tableMapping.ColumnMappings.Add("comppanno", "comppanno")
            tableMapping.ColumnMappings.Add("branchcode", "branchcode")
            tableMapping.ColumnMappings.Add("actflag", "actflag")
            tableMapping.ColumnMappings.Add("SNO", "SNO")
            tableMapping.ColumnMappings.Add("ACTIVE", "ACTIVE")
            tableMapping.ColumnMappings.Add("slno", "slno")
            tableMapping.ColumnMappings.Add("TINNO", "TINNO")
            tableMapping.ColumnMappings.Add("PRINTFLAG", "PRINTFLAG")
            tableMapping.ColumnMappings.Add("expirydate", "expirydate")
            tableMapping.ColumnMappings.Add("ServiceTax", "ServiceTax")
            tableMapping.ColumnMappings.Add("HISTORY", "HISTORY")
            tableMapping.ColumnMappings.Add("GSTINNO", "GSTINNO")
            tableMapping.ColumnMappings.Add("STATECODE", "STATECODE")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[clubmaster] ([COMPANYNAME], [FROMDATE], [TODATE], [SHORTNAME],"& _ 
                " [ADD1], [ADD2], [CITY], [STATE], [PINCODE], [PHONE1], [PHONE2], [FAX], [EMAIL],"& _ 
                " [WEBSITE], [DATAfile], [INDATE], [FRONT], [FRONTFILE], [MAIN], [MAINFILE], [LOG"& _ 
                "O], [LOGOFILE], [COMP], [COMP1], [comptdacc], [comppanno], [branchcode], [actfla"& _ 
                "g], [SNO], [ACTIVE], [slno], [TINNO], [PRINTFLAG], [expirydate], [ServiceTax], ["& _ 
                "HISTORY], [GSTINNO], [STATECODE]) VALUES (@COMPANYNAME, @FROMDATE, @TODATE, @SHO"& _ 
                "RTNAME, @ADD1, @ADD2, @CITY, @STATE, @PINCODE, @PHONE1, @PHONE2, @FAX, @EMAIL, @"& _ 
                "WEBSITE, @DATAfile, @INDATE, @FRONT, @FRONTFILE, @MAIN, @MAINFILE, @LOGO, @LOGOF"& _ 
                "ILE, @COMP, @COMP1, @comptdacc, @comppanno, @branchcode, @actflag, @SNO, @ACTIVE"& _ 
                ", @slno, @TINNO, @PRINTFLAG, @expirydate, @ServiceTax, @HISTORY, @GSTINNO, @STAT"& _ 
                "ECODE)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@COMPANYNAME", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "COMPANYNAME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FROMDATE", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FROMDATE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TODATE", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TODATE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SHORTNAME", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SHORTNAME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ADD1", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ADD1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ADD2", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ADD2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CITY", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CITY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@STATE", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "STATE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PINCODE", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PINCODE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PHONE1", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PHONE1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PHONE2", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PHONE2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FAX", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FAX", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EMAIL", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EMAIL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@WEBSITE", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "WEBSITE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DATAfile", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DATAfile", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@INDATE", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "INDATE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FRONT", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FRONT", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FRONTFILE", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FRONTFILE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MAIN", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MAIN", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MAINFILE", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MAINFILE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LOGO", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LOGO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LOGOFILE", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LOGOFILE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@COMP", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "COMP", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@COMP1", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "COMP1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@comptdacc", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "comptdacc", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@comppanno", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "comppanno", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@branchcode", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "branchcode", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@actflag", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "actflag", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SNO", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SNO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ACTIVE", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ACTIVE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@slno", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "slno", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TINNO", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TINNO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PRINTFLAG", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PRINTFLAG", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@expirydate", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "expirydate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ServiceTax", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ServiceTax", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HISTORY", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HISTORY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GSTINNO", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GSTINNO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@STATECODE", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "STATECODE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.Bengal_MemberMaster.My.MySettings.Default.masterConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT COMPANYNAME, FROMDATE, TODATE, SHORTNAME, ADD1, ADD2, CITY, STATE, PINCODE"& _ 
                ", PHONE1, PHONE2, FAX, EMAIL, WEBSITE, DATAfile, INDATE, FRONT, FRONTFILE, MAIN,"& _ 
                " MAINFILE, LOGO, LOGOFILE, COMP, COMP1, comptdacc, comppanno, branchcode, actfla"& _ 
                "g, SNO, ACTIVE, slno, TINNO, PRINTFLAG, expirydate, ServiceTax, HISTORY, GSTINNO"& _ 
                ", STATECODE FROM dbo.clubmaster"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DataSet2.clubmasterDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DataSet2.clubmasterDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DataSet2.clubmasterDataTable = New DataSet2.clubmasterDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As DataSet2.clubmasterDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As DataSet2) As Integer
            Return Me.Adapter.Update(dataSet, "clubmaster")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert( _
                    ByVal COMPANYNAME As String,  _
                    ByVal FROMDATE As Global.System.Nullable(Of Date),  _
                    ByVal TODATE As Global.System.Nullable(Of Date),  _
                    ByVal SHORTNAME As String,  _
                    ByVal ADD1 As String,  _
                    ByVal ADD2 As String,  _
                    ByVal CITY As String,  _
                    ByVal STATE As String,  _
                    ByVal PINCODE As String,  _
                    ByVal PHONE1 As String,  _
                    ByVal PHONE2 As String,  _
                    ByVal FAX As String,  _
                    ByVal EMAIL As String,  _
                    ByVal WEBSITE As String,  _
                    ByVal DATAfile As String,  _
                    ByVal INDATE As Global.System.Nullable(Of Date),  _
                    ByVal FRONT As String,  _
                    ByVal FRONTFILE As String,  _
                    ByVal MAIN As String,  _
                    ByVal MAINFILE As String,  _
                    ByVal LOGO As String,  _
                    ByVal LOGOFILE As String,  _
                    ByVal COMP As String,  _
                    ByVal COMP1 As String,  _
                    ByVal comptdacc As String,  _
                    ByVal comppanno As String,  _
                    ByVal branchcode As String,  _
                    ByVal actflag As String,  _
                    ByVal SNO As String,  _
                    ByVal ACTIVE As String,  _
                    ByVal slno As Global.System.Nullable(Of Decimal),  _
                    ByVal TINNO As String,  _
                    ByVal PRINTFLAG As String,  _
                    ByVal expirydate As Global.System.Nullable(Of Date),  _
                    ByVal ServiceTax As String,  _
                    ByVal HISTORY As String,  _
                    ByVal GSTINNO As String,  _
                    ByVal STATECODE As String) As Integer
            If (COMPANYNAME Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(COMPANYNAME,String)
            End If
            If (FROMDATE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(FROMDATE.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (TODATE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(TODATE.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (SHORTNAME Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(SHORTNAME,String)
            End If
            If (ADD1 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(ADD1,String)
            End If
            If (ADD2 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(ADD2,String)
            End If
            If (CITY Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(CITY,String)
            End If
            If (STATE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(STATE,String)
            End If
            If (PINCODE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(PINCODE,String)
            End If
            If (PHONE1 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(PHONE1,String)
            End If
            If (PHONE2 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(PHONE2,String)
            End If
            If (FAX Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(11).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(FAX,String)
            End If
            If (EMAIL Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(12).Value = CType(EMAIL,String)
            End If
            If (WEBSITE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(13).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(13).Value = CType(WEBSITE,String)
            End If
            If (DATAfile Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(14).Value = CType(DATAfile,String)
            End If
            If (INDATE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(15).Value = CType(INDATE.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(15).Value = Global.System.DBNull.Value
            End If
            If (FRONT Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(16).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(16).Value = CType(FRONT,String)
            End If
            If (FRONTFILE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(17).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(17).Value = CType(FRONTFILE,String)
            End If
            If (MAIN Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(18).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(18).Value = CType(MAIN,String)
            End If
            If (MAINFILE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(19).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(19).Value = CType(MAINFILE,String)
            End If
            If (LOGO Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(20).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(20).Value = CType(LOGO,String)
            End If
            If (LOGOFILE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(21).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(21).Value = CType(LOGOFILE,String)
            End If
            If (COMP Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(22).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(22).Value = CType(COMP,String)
            End If
            If (COMP1 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(23).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(23).Value = CType(COMP1,String)
            End If
            If (comptdacc Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(24).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(24).Value = CType(comptdacc,String)
            End If
            If (comppanno Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(25).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(25).Value = CType(comppanno,String)
            End If
            If (branchcode Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(26).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(26).Value = CType(branchcode,String)
            End If
            If (actflag Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(27).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(27).Value = CType(actflag,String)
            End If
            If (SNO Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(28).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(28).Value = CType(SNO,String)
            End If
            If (ACTIVE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(29).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(29).Value = CType(ACTIVE,String)
            End If
            If (slno.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(30).Value = CType(slno.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(30).Value = Global.System.DBNull.Value
            End If
            If (TINNO Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(31).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(31).Value = CType(TINNO,String)
            End If
            If (PRINTFLAG Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(32).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(32).Value = CType(PRINTFLAG,String)
            End If
            If (expirydate.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(33).Value = CType(expirydate.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(33).Value = Global.System.DBNull.Value
            End If
            If (ServiceTax Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(34).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(34).Value = CType(ServiceTax,String)
            End If
            If (HISTORY Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(35).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(35).Value = CType(HISTORY,String)
            End If
            If (GSTINNO Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(36).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(36).Value = CType(GSTINNO,String)
            End If
            If (STATECODE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(37).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(37).Value = CType(STATECODE,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
    End Class
    
    '''<summary>
    '''TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD"& _ 
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")>  _
    Partial Public Class TableAdapterManager
        Inherits Global.System.ComponentModel.Component
        
        Private _updateOrder As UpdateOrderOption
        
        Private _membermasterTableAdapter As membermasterTableAdapter
        
        Private _accountsglaccountmasterTableAdapter As accountsglaccountmasterTableAdapter
        
        Private _clubmasterTableAdapter As clubmasterTableAdapter
        
        Private _backupDataSetBeforeUpdate As Boolean
        
        Private _connection As Global.System.Data.IDbConnection
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property UpdateOrder() As UpdateOrderOption
            Get
                Return Me._updateOrder
            End Get
            Set
                Me._updateOrder = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property membermasterTableAdapter() As membermasterTableAdapter
            Get
                Return Me._membermasterTableAdapter
            End Get
            Set
                Me._membermasterTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property accountsglaccountmasterTableAdapter() As accountsglaccountmasterTableAdapter
            Get
                Return Me._accountsglaccountmasterTableAdapter
            End Get
            Set
                Me._accountsglaccountmasterTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property clubmasterTableAdapter() As clubmasterTableAdapter
            Get
                Return Me._clubmasterTableAdapter
            End Get
            Set
                Me._clubmasterTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BackupDataSetBeforeUpdate() As Boolean
            Get
                Return Me._backupDataSetBeforeUpdate
            End Get
            Set
                Me._backupDataSetBeforeUpdate = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public Property Connection() As Global.System.Data.IDbConnection
            Get
                If (Not (Me._connection) Is Nothing) Then
                    Return Me._connection
                End If
                If ((Not (Me._membermasterTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._membermasterTableAdapter.Connection) Is Nothing)) Then
                    Return Me._membermasterTableAdapter.Connection
                End If
                If ((Not (Me._accountsglaccountmasterTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._accountsglaccountmasterTableAdapter.Connection) Is Nothing)) Then
                    Return Me._accountsglaccountmasterTableAdapter.Connection
                End If
                If ((Not (Me._clubmasterTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._clubmasterTableAdapter.Connection) Is Nothing)) Then
                    Return Me._clubmasterTableAdapter.Connection
                End If
                Return Nothing
            End Get
            Set
                Me._connection = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property TableAdapterInstanceCount() As Integer
            Get
                Dim count As Integer = 0
                If (Not (Me._membermasterTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._accountsglaccountmasterTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._clubmasterTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                Return count
            End Get
        End Property
        
        '''<summary>
        '''Update rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Function UpdateUpdatedRows(ByVal dataSet As DataSet2, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow), ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._membermasterTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.membermaster.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._membermasterTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._accountsglaccountmasterTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.accountsglaccountmaster.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._accountsglaccountmasterTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._clubmasterTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.clubmaster.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._clubmasterTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Insert rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Function UpdateInsertedRows(ByVal dataSet As DataSet2, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._membermasterTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.membermaster.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._membermasterTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._accountsglaccountmasterTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.accountsglaccountmaster.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._accountsglaccountmasterTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._clubmasterTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.clubmaster.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._clubmasterTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Delete rows in bottom-up order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Function UpdateDeletedRows(ByVal dataSet As DataSet2, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._clubmasterTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.clubmaster.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._clubmasterTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._accountsglaccountmasterTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.accountsglaccountmaster.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._accountsglaccountmasterTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._membermasterTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.membermaster.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._membermasterTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Function GetRealUpdatedRows(ByVal updatedRows() As Global.System.Data.DataRow, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Global.System.Data.DataRow()
            If ((updatedRows Is Nothing)  _
                        OrElse (updatedRows.Length < 1)) Then
                Return updatedRows
            End If
            If ((allAddedRows Is Nothing)  _
                        OrElse (allAddedRows.Count < 1)) Then
                Return updatedRows
            End If
            Dim realUpdatedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim i As Integer = 0
            Do While (i < updatedRows.Length)
                Dim row As Global.System.Data.DataRow = updatedRows(i)
                If (allAddedRows.Contains(row) = false) Then
                    realUpdatedRows.Add(row)
                End If
                i = (i + 1)
            Loop
            Return realUpdatedRows.ToArray
        End Function
        
        '''<summary>
        '''Update all changes to the dataset.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overridable Function UpdateAll(ByVal dataSet As DataSet2) As Integer
            If (dataSet Is Nothing) Then
                Throw New Global.System.ArgumentNullException("dataSet")
            End If
            If (dataSet.HasChanges = false) Then
                Return 0
            End If
            If ((Not (Me._membermasterTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._membermasterTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._accountsglaccountmasterTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._accountsglaccountmasterTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._clubmasterTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._clubmasterTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            Dim workConnection As Global.System.Data.IDbConnection = Me.Connection
            If (workConnection Is Nothing) Then
                Throw New Global.System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana"& _ 
                        "ger TableAdapter property to a valid TableAdapter instance.")
            End If
            Dim workConnOpened As Boolean = false
            If ((workConnection.State And Global.System.Data.ConnectionState.Broken)  _
                        = Global.System.Data.ConnectionState.Broken) Then
                workConnection.Close
            End If
            If (workConnection.State = Global.System.Data.ConnectionState.Closed) Then
                workConnection.Open
                workConnOpened = true
            End If
            Dim workTransaction As Global.System.Data.IDbTransaction = workConnection.BeginTransaction
            If (workTransaction Is Nothing) Then
                Throw New Global.System.ApplicationException("The transaction cannot begin. The current data connection does not support transa"& _ 
                        "ctions or the current state is not allowing the transaction to begin.")
            End If
            Dim allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim adaptersWithAcceptChangesDuringUpdate As Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter) = New Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter)()
            Dim revertConnections As Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection) = New Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection)()
            Dim result As Integer = 0
            Dim backupDataSet As Global.System.Data.DataSet = Nothing
            If Me.BackupDataSetBeforeUpdate Then
                backupDataSet = New Global.System.Data.DataSet()
                backupDataSet.Merge(dataSet)
            End If
            Try 
                '---- Prepare for update -----------
                '
                If (Not (Me._membermasterTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._membermasterTableAdapter, Me._membermasterTableAdapter.Connection)
                    Me._membermasterTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._membermasterTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._membermasterTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._membermasterTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._membermasterTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._accountsglaccountmasterTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._accountsglaccountmasterTableAdapter, Me._accountsglaccountmasterTableAdapter.Connection)
                    Me._accountsglaccountmasterTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._accountsglaccountmasterTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._accountsglaccountmasterTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._accountsglaccountmasterTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._accountsglaccountmasterTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._clubmasterTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._clubmasterTableAdapter, Me._clubmasterTableAdapter.Connection)
                    Me._clubmasterTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._clubmasterTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._clubmasterTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._clubmasterTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._clubmasterTableAdapter.Adapter)
                    End If
                End If
                '
                '---- Perform updates -----------
                '
                If (Me.UpdateOrder = UpdateOrderOption.UpdateInsertDelete) Then
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                Else
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                End If
                result = (result + Me.UpdateDeletedRows(dataSet, allChangedRows))
                '
                '---- Commit updates -----------
                '
                workTransaction.Commit
                If (0 < allAddedRows.Count) Then
                    Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                    allAddedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
                If (0 < allChangedRows.Count) Then
                    Dim rows((allChangedRows.Count) - 1) As Global.System.Data.DataRow
                    allChangedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
            Catch ex As Global.System.Exception
                workTransaction.Rollback
                '---- Restore the dataset -----------
                If Me.BackupDataSetBeforeUpdate Then
                    Global.System.Diagnostics.Debug.Assert((Not (backupDataSet) Is Nothing))
                    dataSet.Clear
                    dataSet.Merge(backupDataSet)
                Else
                    If (0 < allAddedRows.Count) Then
                        Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                        allAddedRows.CopyTo(rows)
                        Dim i As Integer = 0
                        Do While (i < rows.Length)
                            Dim row As Global.System.Data.DataRow = rows(i)
                            row.AcceptChanges
                            row.SetAdded
                            i = (i + 1)
                        Loop
                    End If
                End If
                Throw ex
            Finally
                If workConnOpened Then
                    workConnection.Close
                End If
                If (Not (Me._membermasterTableAdapter) Is Nothing) Then
                    Me._membermasterTableAdapter.Connection = CType(revertConnections(Me._membermasterTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._membermasterTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._accountsglaccountmasterTableAdapter) Is Nothing) Then
                    Me._accountsglaccountmasterTableAdapter.Connection = CType(revertConnections(Me._accountsglaccountmasterTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._accountsglaccountmasterTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._clubmasterTableAdapter) Is Nothing) Then
                    Me._clubmasterTableAdapter.Connection = CType(revertConnections(Me._clubmasterTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._clubmasterTableAdapter.Transaction = Nothing
                End If
                If (0 < adaptersWithAcceptChangesDuringUpdate.Count) Then
                    Dim adapters((adaptersWithAcceptChangesDuringUpdate.Count) - 1) As Global.System.Data.Common.DataAdapter
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters)
                    Dim i As Integer = 0
                    Do While (i < adapters.Length)
                        Dim adapter As Global.System.Data.Common.DataAdapter = adapters(i)
                        adapter.AcceptChangesDuringUpdate = true
                        i = (i + 1)
                    Loop
                End If
            End Try
            Return result
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overridable Sub SortSelfReferenceRows(ByVal rows() As Global.System.Data.DataRow, ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
            Global.System.Array.Sort(Of Global.System.Data.DataRow)(rows, New SelfReferenceComparer(relation, childFirst))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overridable Function MatchTableAdapterConnection(ByVal inputConnection As Global.System.Data.IDbConnection) As Boolean
            If (Not (Me._connection) Is Nothing) Then
                Return true
            End If
            If ((Me.Connection Is Nothing)  _
                        OrElse (inputConnection Is Nothing)) Then
                Return true
            End If
            If String.Equals(Me.Connection.ConnectionString, inputConnection.ConnectionString, Global.System.StringComparison.Ordinal) Then
                Return true
            End If
            Return false
        End Function
        
        '''<summary>
        '''Update Order Option
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Enum UpdateOrderOption
            
            InsertUpdateDelete = 0
            
            UpdateInsertDelete = 1
        End Enum
        
        '''<summary>
        '''Used to sort self-referenced table's rows
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Class SelfReferenceComparer
            Inherits Object
            Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow)
            
            Private _relation As Global.System.Data.DataRelation
            
            Private _childFirst As Integer
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Friend Sub New(ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
                MyBase.New
                Me._relation = relation
                If childFirst Then
                    Me._childFirst = -1
                Else
                    Me._childFirst = 1
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Private Function GetRoot(ByVal row As Global.System.Data.DataRow, ByRef distance As Integer) As Global.System.Data.DataRow
                Global.System.Diagnostics.Debug.Assert((Not (row) Is Nothing))
                Dim root As Global.System.Data.DataRow = row
                distance = 0

                Dim traversedRows As Global.System.Collections.Generic.IDictionary(Of Global.System.Data.DataRow, Global.System.Data.DataRow) = New Global.System.Collections.Generic.Dictionary(Of Global.System.Data.DataRow, Global.System.Data.DataRow)()
                traversedRows(row) = row

                Dim parent As Global.System.Data.DataRow = row.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Do While ((Not (parent) Is Nothing)  _
                            AndAlso (traversedRows.ContainsKey(parent) = false))
                    distance = (distance + 1)
                    root = parent
                    traversedRows(parent) = parent
                    parent = parent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Loop

                If (distance = 0) Then
                    traversedRows.Clear
                    traversedRows(row) = row
                    parent = row.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Do While ((Not (parent) Is Nothing)  _
                                AndAlso (traversedRows.ContainsKey(parent) = false))
                        distance = (distance + 1)
                        root = parent
                        traversedRows(parent) = parent
                        parent = parent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Loop
                End If

                Return root
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Function Compare(ByVal row1 As Global.System.Data.DataRow, ByVal row2 As Global.System.Data.DataRow) As Integer Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow).Compare
                If Object.ReferenceEquals(row1, row2) Then
                    Return 0
                End If
                If (row1 Is Nothing) Then
                    Return -1
                End If
                If (row2 Is Nothing) Then
                    Return 1
                End If

                Dim distance1 As Integer = 0
                Dim root1 As Global.System.Data.DataRow = Me.GetRoot(row1, distance1)

                Dim distance2 As Integer = 0
                Dim root2 As Global.System.Data.DataRow = Me.GetRoot(row2, distance2)

                If Object.ReferenceEquals(root1, root2) Then
                    Return (Me._childFirst * distance1.CompareTo(distance2))
                Else
                    Global.System.Diagnostics.Debug.Assert(((Not (root1.Table) Is Nothing)  _
                                    AndAlso (Not (root2.Table) Is Nothing)))
                    If (root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2)) Then
                        Return -1
                    Else
                        Return 1
                    End If
                End If
            End Function
        End Class
    End Class
End Namespace
