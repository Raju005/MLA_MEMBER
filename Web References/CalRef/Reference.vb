'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.18052
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Data
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.18052.
'
Namespace CalRef
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="GatewaySoap", [Namespace]:="http://tempuri.org/")>  _
    Partial Public Class Gateway
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private GetBalanceOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetCustomerBalanceOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UpdateCustomerPasswordOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UpdateCustomerPermissionsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CreateCustomerOperationCompleted As System.Threading.SendOrPostCallback
        
        Private TransferCreditsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private RequestSenderNameOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SetDefaultSenderNameOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SetDefaultSubAccountSenderNameOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SetSubAccountPasswordOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DeleteSubAccountSenderNameOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DeleteSenderNameOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetSenderNamesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetDefaultSenderNameOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ReadSMSOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DeleteSMSOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SendSMSOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SendSMSExOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetSMSStatusOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ImportContactOperationCompleted As System.Threading.SendOrPostCallback
        
        Private AddContactOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UpdateContactOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EchoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CheckUpdatesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetUpdateURLOperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = Global.Bengal_MemberMaster.My.MySettings.Default.Bengal_MemberMaster_CalRef_Gateway
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event GetBalanceCompleted As GetBalanceCompletedEventHandler
        
        '''<remarks/>
        Public Event GetCustomerBalanceCompleted As GetCustomerBalanceCompletedEventHandler
        
        '''<remarks/>
        Public Event UpdateCustomerPasswordCompleted As UpdateCustomerPasswordCompletedEventHandler
        
        '''<remarks/>
        Public Event UpdateCustomerPermissionsCompleted As UpdateCustomerPermissionsCompletedEventHandler
        
        '''<remarks/>
        Public Event CreateCustomerCompleted As CreateCustomerCompletedEventHandler
        
        '''<remarks/>
        Public Event TransferCreditsCompleted As TransferCreditsCompletedEventHandler
        
        '''<remarks/>
        Public Event RequestSenderNameCompleted As RequestSenderNameCompletedEventHandler
        
        '''<remarks/>
        Public Event SetDefaultSenderNameCompleted As SetDefaultSenderNameCompletedEventHandler
        
        '''<remarks/>
        Public Event SetDefaultSubAccountSenderNameCompleted As SetDefaultSubAccountSenderNameCompletedEventHandler
        
        '''<remarks/>
        Public Event SetSubAccountPasswordCompleted As SetSubAccountPasswordCompletedEventHandler
        
        '''<remarks/>
        Public Event DeleteSubAccountSenderNameCompleted As DeleteSubAccountSenderNameCompletedEventHandler
        
        '''<remarks/>
        Public Event DeleteSenderNameCompleted As DeleteSenderNameCompletedEventHandler
        
        '''<remarks/>
        Public Event GetSenderNamesCompleted As GetSenderNamesCompletedEventHandler
        
        '''<remarks/>
        Public Event GetDefaultSenderNameCompleted As GetDefaultSenderNameCompletedEventHandler
        
        '''<remarks/>
        Public Event ReadSMSCompleted As ReadSMSCompletedEventHandler
        
        '''<remarks/>
        Public Event DeleteSMSCompleted As DeleteSMSCompletedEventHandler
        
        '''<remarks/>
        Public Event SendSMSCompleted As SendSMSCompletedEventHandler
        
        '''<remarks/>
        Public Event SendSMSExCompleted As SendSMSExCompletedEventHandler
        
        '''<remarks/>
        Public Event GetSMSStatusCompleted As GetSMSStatusCompletedEventHandler
        
        '''<remarks/>
        Public Event ImportContactCompleted As ImportContactCompletedEventHandler
        
        '''<remarks/>
        Public Event AddContactCompleted As AddContactCompletedEventHandler
        
        '''<remarks/>
        Public Event UpdateContactCompleted As UpdateContactCompletedEventHandler
        
        '''<remarks/>
        Public Event EchoCompleted As EchoCompletedEventHandler
        
        '''<remarks/>
        Public Event CheckUpdatesCompleted As CheckUpdatesCompletedEventHandler
        
        '''<remarks/>
        Public Event GetUpdateURLCompleted As GetUpdateURLCompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetBalance", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetBalance(ByVal username As String, ByVal password As String) As Integer
            Dim results() As Object = Me.Invoke("GetBalance", New Object() {username, password})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetBalanceAsync(ByVal username As String, ByVal password As String)
            Me.GetBalanceAsync(username, password, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetBalanceAsync(ByVal username As String, ByVal password As String, ByVal userState As Object)
            If (Me.GetBalanceOperationCompleted Is Nothing) Then
                Me.GetBalanceOperationCompleted = AddressOf Me.OnGetBalanceOperationCompleted
            End If
            Me.InvokeAsync("GetBalance", New Object() {username, password}, Me.GetBalanceOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetBalanceOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetBalanceCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetBalanceCompleted(Me, New GetBalanceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCustomerBalance", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetCustomerBalance(ByVal username As String, ByVal password As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetCustomerBalance", New Object() {username, password})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetCustomerBalanceAsync(ByVal username As String, ByVal password As String)
            Me.GetCustomerBalanceAsync(username, password, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetCustomerBalanceAsync(ByVal username As String, ByVal password As String, ByVal userState As Object)
            If (Me.GetCustomerBalanceOperationCompleted Is Nothing) Then
                Me.GetCustomerBalanceOperationCompleted = AddressOf Me.OnGetCustomerBalanceOperationCompleted
            End If
            Me.InvokeAsync("GetCustomerBalance", New Object() {username, password}, Me.GetCustomerBalanceOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetCustomerBalanceOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetCustomerBalanceCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetCustomerBalanceCompleted(Me, New GetCustomerBalanceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateCustomerPassword", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function UpdateCustomerPassword(ByVal ResellerUserId As String, ByVal ResellerPassword As String, ByVal CustomerUserName As String, ByVal CustomerOldPassword As String, ByVal CustomerNewPassword As String) As UpdateCustomerPasswordResults
            Dim results() As Object = Me.Invoke("UpdateCustomerPassword", New Object() {ResellerUserId, ResellerPassword, CustomerUserName, CustomerOldPassword, CustomerNewPassword})
            Return CType(results(0),UpdateCustomerPasswordResults)
        End Function
        
        '''<remarks/>
        Public Overloads Sub UpdateCustomerPasswordAsync(ByVal ResellerUserId As String, ByVal ResellerPassword As String, ByVal CustomerUserName As String, ByVal CustomerOldPassword As String, ByVal CustomerNewPassword As String)
            Me.UpdateCustomerPasswordAsync(ResellerUserId, ResellerPassword, CustomerUserName, CustomerOldPassword, CustomerNewPassword, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UpdateCustomerPasswordAsync(ByVal ResellerUserId As String, ByVal ResellerPassword As String, ByVal CustomerUserName As String, ByVal CustomerOldPassword As String, ByVal CustomerNewPassword As String, ByVal userState As Object)
            If (Me.UpdateCustomerPasswordOperationCompleted Is Nothing) Then
                Me.UpdateCustomerPasswordOperationCompleted = AddressOf Me.OnUpdateCustomerPasswordOperationCompleted
            End If
            Me.InvokeAsync("UpdateCustomerPassword", New Object() {ResellerUserId, ResellerPassword, CustomerUserName, CustomerOldPassword, CustomerNewPassword}, Me.UpdateCustomerPasswordOperationCompleted, userState)
        End Sub
        
        Private Sub OnUpdateCustomerPasswordOperationCompleted(ByVal arg As Object)
            If (Not (Me.UpdateCustomerPasswordCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UpdateCustomerPasswordCompleted(Me, New UpdateCustomerPasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateCustomerPermissions", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function UpdateCustomerPermissions(ByVal ResellerUserId As String, ByVal ResellerPassword As String, ByVal CustomerUserId As String, ByVal Permissions() As AccessPermissions) As UpdatePermissionsResults
            Dim results() As Object = Me.Invoke("UpdateCustomerPermissions", New Object() {ResellerUserId, ResellerPassword, CustomerUserId, Permissions})
            Return CType(results(0),UpdatePermissionsResults)
        End Function
        
        '''<remarks/>
        Public Overloads Sub UpdateCustomerPermissionsAsync(ByVal ResellerUserId As String, ByVal ResellerPassword As String, ByVal CustomerUserId As String, ByVal Permissions() As AccessPermissions)
            Me.UpdateCustomerPermissionsAsync(ResellerUserId, ResellerPassword, CustomerUserId, Permissions, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UpdateCustomerPermissionsAsync(ByVal ResellerUserId As String, ByVal ResellerPassword As String, ByVal CustomerUserId As String, ByVal Permissions() As AccessPermissions, ByVal userState As Object)
            If (Me.UpdateCustomerPermissionsOperationCompleted Is Nothing) Then
                Me.UpdateCustomerPermissionsOperationCompleted = AddressOf Me.OnUpdateCustomerPermissionsOperationCompleted
            End If
            Me.InvokeAsync("UpdateCustomerPermissions", New Object() {ResellerUserId, ResellerPassword, CustomerUserId, Permissions}, Me.UpdateCustomerPermissionsOperationCompleted, userState)
        End Sub
        
        Private Sub OnUpdateCustomerPermissionsOperationCompleted(ByVal arg As Object)
            If (Not (Me.UpdateCustomerPermissionsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UpdateCustomerPermissionsCompleted(Me, New UpdateCustomerPermissionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CreateCustomer", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CreateCustomer(ByVal ResellerUserId As String, ByVal ResellerPassword As String, ByVal CustomerUserName As String, ByVal CustomerUserPassword As String, ByVal FirstName As String, ByVal LastName As String, ByVal Email As String, ByVal Mobile As String, ByVal Company As String, ByVal Country As String, ByVal IsCustomerReseller As Boolean, ByVal AccountVerificationRequired As Boolean, ByVal UserPermissions() As AccessPermissions, ByVal TransferDefaultCredits As Boolean, ByVal DefaultSenderName As String) As AddCustomerResults
            Dim results() As Object = Me.Invoke("CreateCustomer", New Object() {ResellerUserId, ResellerPassword, CustomerUserName, CustomerUserPassword, FirstName, LastName, Email, Mobile, Company, Country, IsCustomerReseller, AccountVerificationRequired, UserPermissions, TransferDefaultCredits, DefaultSenderName})
            Return CType(results(0),AddCustomerResults)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CreateCustomerAsync(ByVal ResellerUserId As String, ByVal ResellerPassword As String, ByVal CustomerUserName As String, ByVal CustomerUserPassword As String, ByVal FirstName As String, ByVal LastName As String, ByVal Email As String, ByVal Mobile As String, ByVal Company As String, ByVal Country As String, ByVal IsCustomerReseller As Boolean, ByVal AccountVerificationRequired As Boolean, ByVal UserPermissions() As AccessPermissions, ByVal TransferDefaultCredits As Boolean, ByVal DefaultSenderName As String)
            Me.CreateCustomerAsync(ResellerUserId, ResellerPassword, CustomerUserName, CustomerUserPassword, FirstName, LastName, Email, Mobile, Company, Country, IsCustomerReseller, AccountVerificationRequired, UserPermissions, TransferDefaultCredits, DefaultSenderName, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CreateCustomerAsync( _
                    ByVal ResellerUserId As String,  _
                    ByVal ResellerPassword As String,  _
                    ByVal CustomerUserName As String,  _
                    ByVal CustomerUserPassword As String,  _
                    ByVal FirstName As String,  _
                    ByVal LastName As String,  _
                    ByVal Email As String,  _
                    ByVal Mobile As String,  _
                    ByVal Company As String,  _
                    ByVal Country As String,  _
                    ByVal IsCustomerReseller As Boolean,  _
                    ByVal AccountVerificationRequired As Boolean,  _
                    ByVal UserPermissions() As AccessPermissions,  _
                    ByVal TransferDefaultCredits As Boolean,  _
                    ByVal DefaultSenderName As String,  _
                    ByVal userState As Object)
            If (Me.CreateCustomerOperationCompleted Is Nothing) Then
                Me.CreateCustomerOperationCompleted = AddressOf Me.OnCreateCustomerOperationCompleted
            End If
            Me.InvokeAsync("CreateCustomer", New Object() {ResellerUserId, ResellerPassword, CustomerUserName, CustomerUserPassword, FirstName, LastName, Email, Mobile, Company, Country, IsCustomerReseller, AccountVerificationRequired, UserPermissions, TransferDefaultCredits, DefaultSenderName}, Me.CreateCustomerOperationCompleted, userState)
        End Sub
        
        Private Sub OnCreateCustomerOperationCompleted(ByVal arg As Object)
            If (Not (Me.CreateCustomerCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CreateCustomerCompleted(Me, New CreateCustomerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/TransferCredits", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function TransferCredits(ByVal ResellerUserId As String, ByVal ResellerPassword As String, ByVal CustomerUserName As String, ByVal Credits As Integer) As TransferCreditsResults
            Dim results() As Object = Me.Invoke("TransferCredits", New Object() {ResellerUserId, ResellerPassword, CustomerUserName, Credits})
            Return CType(results(0),TransferCreditsResults)
        End Function
        
        '''<remarks/>
        Public Overloads Sub TransferCreditsAsync(ByVal ResellerUserId As String, ByVal ResellerPassword As String, ByVal CustomerUserName As String, ByVal Credits As Integer)
            Me.TransferCreditsAsync(ResellerUserId, ResellerPassword, CustomerUserName, Credits, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub TransferCreditsAsync(ByVal ResellerUserId As String, ByVal ResellerPassword As String, ByVal CustomerUserName As String, ByVal Credits As Integer, ByVal userState As Object)
            If (Me.TransferCreditsOperationCompleted Is Nothing) Then
                Me.TransferCreditsOperationCompleted = AddressOf Me.OnTransferCreditsOperationCompleted
            End If
            Me.InvokeAsync("TransferCredits", New Object() {ResellerUserId, ResellerPassword, CustomerUserName, Credits}, Me.TransferCreditsOperationCompleted, userState)
        End Sub
        
        Private Sub OnTransferCreditsOperationCompleted(ByVal arg As Object)
            If (Not (Me.TransferCreditsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent TransferCreditsCompleted(Me, New TransferCreditsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RequestSenderName", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function RequestSenderName(ByVal username As String, ByVal password As String, ByVal senderName As String) As Boolean
            Dim results() As Object = Me.Invoke("RequestSenderName", New Object() {username, password, senderName})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub RequestSenderNameAsync(ByVal username As String, ByVal password As String, ByVal senderName As String)
            Me.RequestSenderNameAsync(username, password, senderName, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RequestSenderNameAsync(ByVal username As String, ByVal password As String, ByVal senderName As String, ByVal userState As Object)
            If (Me.RequestSenderNameOperationCompleted Is Nothing) Then
                Me.RequestSenderNameOperationCompleted = AddressOf Me.OnRequestSenderNameOperationCompleted
            End If
            Me.InvokeAsync("RequestSenderName", New Object() {username, password, senderName}, Me.RequestSenderNameOperationCompleted, userState)
        End Sub
        
        Private Sub OnRequestSenderNameOperationCompleted(ByVal arg As Object)
            If (Not (Me.RequestSenderNameCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RequestSenderNameCompleted(Me, New RequestSenderNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SetDefaultSenderName", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function SetDefaultSenderName(ByVal username As String, ByVal password As String, ByVal senderID As Integer) As Boolean
            Dim results() As Object = Me.Invoke("SetDefaultSenderName", New Object() {username, password, senderID})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub SetDefaultSenderNameAsync(ByVal username As String, ByVal password As String, ByVal senderID As Integer)
            Me.SetDefaultSenderNameAsync(username, password, senderID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetDefaultSenderNameAsync(ByVal username As String, ByVal password As String, ByVal senderID As Integer, ByVal userState As Object)
            If (Me.SetDefaultSenderNameOperationCompleted Is Nothing) Then
                Me.SetDefaultSenderNameOperationCompleted = AddressOf Me.OnSetDefaultSenderNameOperationCompleted
            End If
            Me.InvokeAsync("SetDefaultSenderName", New Object() {username, password, senderID}, Me.SetDefaultSenderNameOperationCompleted, userState)
        End Sub
        
        Private Sub OnSetDefaultSenderNameOperationCompleted(ByVal arg As Object)
            If (Not (Me.SetDefaultSenderNameCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SetDefaultSenderNameCompleted(Me, New SetDefaultSenderNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SetDefaultSubAccountSenderName", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function SetDefaultSubAccountSenderName(ByVal ResellerUserId As String, ByVal ResellerPassword As String, ByVal CustomerUserName As String, ByVal SenderName As String) As SetDefaultSenderNameResults
            Dim results() As Object = Me.Invoke("SetDefaultSubAccountSenderName", New Object() {ResellerUserId, ResellerPassword, CustomerUserName, SenderName})
            Return CType(results(0),SetDefaultSenderNameResults)
        End Function
        
        '''<remarks/>
        Public Overloads Sub SetDefaultSubAccountSenderNameAsync(ByVal ResellerUserId As String, ByVal ResellerPassword As String, ByVal CustomerUserName As String, ByVal SenderName As String)
            Me.SetDefaultSubAccountSenderNameAsync(ResellerUserId, ResellerPassword, CustomerUserName, SenderName, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetDefaultSubAccountSenderNameAsync(ByVal ResellerUserId As String, ByVal ResellerPassword As String, ByVal CustomerUserName As String, ByVal SenderName As String, ByVal userState As Object)
            If (Me.SetDefaultSubAccountSenderNameOperationCompleted Is Nothing) Then
                Me.SetDefaultSubAccountSenderNameOperationCompleted = AddressOf Me.OnSetDefaultSubAccountSenderNameOperationCompleted
            End If
            Me.InvokeAsync("SetDefaultSubAccountSenderName", New Object() {ResellerUserId, ResellerPassword, CustomerUserName, SenderName}, Me.SetDefaultSubAccountSenderNameOperationCompleted, userState)
        End Sub
        
        Private Sub OnSetDefaultSubAccountSenderNameOperationCompleted(ByVal arg As Object)
            If (Not (Me.SetDefaultSubAccountSenderNameCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SetDefaultSubAccountSenderNameCompleted(Me, New SetDefaultSubAccountSenderNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SetSubAccountPassword", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function SetSubAccountPassword(ByVal ResellerUserId As String, ByVal ResellerPassword As String, ByVal CustomerUserName As String, ByVal CustomerNewPassword As String) As UpdateCustomerPasswordResults
            Dim results() As Object = Me.Invoke("SetSubAccountPassword", New Object() {ResellerUserId, ResellerPassword, CustomerUserName, CustomerNewPassword})
            Return CType(results(0),UpdateCustomerPasswordResults)
        End Function
        
        '''<remarks/>
        Public Overloads Sub SetSubAccountPasswordAsync(ByVal ResellerUserId As String, ByVal ResellerPassword As String, ByVal CustomerUserName As String, ByVal CustomerNewPassword As String)
            Me.SetSubAccountPasswordAsync(ResellerUserId, ResellerPassword, CustomerUserName, CustomerNewPassword, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetSubAccountPasswordAsync(ByVal ResellerUserId As String, ByVal ResellerPassword As String, ByVal CustomerUserName As String, ByVal CustomerNewPassword As String, ByVal userState As Object)
            If (Me.SetSubAccountPasswordOperationCompleted Is Nothing) Then
                Me.SetSubAccountPasswordOperationCompleted = AddressOf Me.OnSetSubAccountPasswordOperationCompleted
            End If
            Me.InvokeAsync("SetSubAccountPassword", New Object() {ResellerUserId, ResellerPassword, CustomerUserName, CustomerNewPassword}, Me.SetSubAccountPasswordOperationCompleted, userState)
        End Sub
        
        Private Sub OnSetSubAccountPasswordOperationCompleted(ByVal arg As Object)
            If (Not (Me.SetSubAccountPasswordCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SetSubAccountPasswordCompleted(Me, New SetSubAccountPasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteSubAccountSenderName", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function DeleteSubAccountSenderName(ByVal ResellerUserId As String, ByVal ResellerPassword As String, ByVal CustomerUserName As String, ByVal CustomerPassword As String, ByVal SenderName As String) As DeleteSenderNameResults
            Dim results() As Object = Me.Invoke("DeleteSubAccountSenderName", New Object() {ResellerUserId, ResellerPassword, CustomerUserName, CustomerPassword, SenderName})
            Return CType(results(0),DeleteSenderNameResults)
        End Function
        
        '''<remarks/>
        Public Overloads Sub DeleteSubAccountSenderNameAsync(ByVal ResellerUserId As String, ByVal ResellerPassword As String, ByVal CustomerUserName As String, ByVal CustomerPassword As String, ByVal SenderName As String)
            Me.DeleteSubAccountSenderNameAsync(ResellerUserId, ResellerPassword, CustomerUserName, CustomerPassword, SenderName, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeleteSubAccountSenderNameAsync(ByVal ResellerUserId As String, ByVal ResellerPassword As String, ByVal CustomerUserName As String, ByVal CustomerPassword As String, ByVal SenderName As String, ByVal userState As Object)
            If (Me.DeleteSubAccountSenderNameOperationCompleted Is Nothing) Then
                Me.DeleteSubAccountSenderNameOperationCompleted = AddressOf Me.OnDeleteSubAccountSenderNameOperationCompleted
            End If
            Me.InvokeAsync("DeleteSubAccountSenderName", New Object() {ResellerUserId, ResellerPassword, CustomerUserName, CustomerPassword, SenderName}, Me.DeleteSubAccountSenderNameOperationCompleted, userState)
        End Sub
        
        Private Sub OnDeleteSubAccountSenderNameOperationCompleted(ByVal arg As Object)
            If (Not (Me.DeleteSubAccountSenderNameCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DeleteSubAccountSenderNameCompleted(Me, New DeleteSubAccountSenderNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteSenderName", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function DeleteSenderName(ByVal username As String, ByVal password As String, ByVal senderID As Integer) As Boolean
            Dim results() As Object = Me.Invoke("DeleteSenderName", New Object() {username, password, senderID})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub DeleteSenderNameAsync(ByVal username As String, ByVal password As String, ByVal senderID As Integer)
            Me.DeleteSenderNameAsync(username, password, senderID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeleteSenderNameAsync(ByVal username As String, ByVal password As String, ByVal senderID As Integer, ByVal userState As Object)
            If (Me.DeleteSenderNameOperationCompleted Is Nothing) Then
                Me.DeleteSenderNameOperationCompleted = AddressOf Me.OnDeleteSenderNameOperationCompleted
            End If
            Me.InvokeAsync("DeleteSenderName", New Object() {username, password, senderID}, Me.DeleteSenderNameOperationCompleted, userState)
        End Sub
        
        Private Sub OnDeleteSenderNameOperationCompleted(ByVal arg As Object)
            If (Not (Me.DeleteSenderNameCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DeleteSenderNameCompleted(Me, New DeleteSenderNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSenderNames", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetSenderNames(ByVal username As String, ByVal password As String) As SenderNames()
            Dim results() As Object = Me.Invoke("GetSenderNames", New Object() {username, password})
            Return CType(results(0),SenderNames())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetSenderNamesAsync(ByVal username As String, ByVal password As String)
            Me.GetSenderNamesAsync(username, password, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetSenderNamesAsync(ByVal username As String, ByVal password As String, ByVal userState As Object)
            If (Me.GetSenderNamesOperationCompleted Is Nothing) Then
                Me.GetSenderNamesOperationCompleted = AddressOf Me.OnGetSenderNamesOperationCompleted
            End If
            Me.InvokeAsync("GetSenderNames", New Object() {username, password}, Me.GetSenderNamesOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetSenderNamesOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetSenderNamesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetSenderNamesCompleted(Me, New GetSenderNamesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDefaultSenderName", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetDefaultSenderName(ByVal username As String, ByVal password As String) As Integer
            Dim results() As Object = Me.Invoke("GetDefaultSenderName", New Object() {username, password})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetDefaultSenderNameAsync(ByVal username As String, ByVal password As String)
            Me.GetDefaultSenderNameAsync(username, password, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetDefaultSenderNameAsync(ByVal username As String, ByVal password As String, ByVal userState As Object)
            If (Me.GetDefaultSenderNameOperationCompleted Is Nothing) Then
                Me.GetDefaultSenderNameOperationCompleted = AddressOf Me.OnGetDefaultSenderNameOperationCompleted
            End If
            Me.InvokeAsync("GetDefaultSenderName", New Object() {username, password}, Me.GetDefaultSenderNameOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetDefaultSenderNameOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetDefaultSenderNameCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetDefaultSenderNameCompleted(Me, New GetDefaultSenderNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ReadSMS", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ReadSMS(ByVal username As String, ByVal password As String, ByVal machineID As String) As IncomingMessage()
            Dim results() As Object = Me.Invoke("ReadSMS", New Object() {username, password, machineID})
            Return CType(results(0),IncomingMessage())
        End Function
        
        '''<remarks/>
        Public Overloads Sub ReadSMSAsync(ByVal username As String, ByVal password As String, ByVal machineID As String)
            Me.ReadSMSAsync(username, password, machineID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ReadSMSAsync(ByVal username As String, ByVal password As String, ByVal machineID As String, ByVal userState As Object)
            If (Me.ReadSMSOperationCompleted Is Nothing) Then
                Me.ReadSMSOperationCompleted = AddressOf Me.OnReadSMSOperationCompleted
            End If
            Me.InvokeAsync("ReadSMS", New Object() {username, password, machineID}, Me.ReadSMSOperationCompleted, userState)
        End Sub
        
        Private Sub OnReadSMSOperationCompleted(ByVal arg As Object)
            If (Not (Me.ReadSMSCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ReadSMSCompleted(Me, New ReadSMSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteSMS", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function DeleteSMS(ByVal username As String, ByVal password As String, ByVal messageID() As String) As Boolean
            Dim results() As Object = Me.Invoke("DeleteSMS", New Object() {username, password, messageID})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub DeleteSMSAsync(ByVal username As String, ByVal password As String, ByVal messageID() As String)
            Me.DeleteSMSAsync(username, password, messageID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeleteSMSAsync(ByVal username As String, ByVal password As String, ByVal messageID() As String, ByVal userState As Object)
            If (Me.DeleteSMSOperationCompleted Is Nothing) Then
                Me.DeleteSMSOperationCompleted = AddressOf Me.OnDeleteSMSOperationCompleted
            End If
            Me.InvokeAsync("DeleteSMS", New Object() {username, password, messageID}, Me.DeleteSMSOperationCompleted, userState)
        End Sub
        
        Private Sub OnDeleteSMSOperationCompleted(ByVal arg As Object)
            If (Not (Me.DeleteSMSCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DeleteSMSCompleted(Me, New DeleteSMSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendSMS", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function SendSMS(ByVal username As String, ByVal password As String, ByVal allnumbers() As String, ByVal allsms() As String, ByVal allfrom() As String) As Integer()
            Dim results() As Object = Me.Invoke("SendSMS", New Object() {username, password, allnumbers, allsms, allfrom})
            Return CType(results(0),Integer())
        End Function
        
        '''<remarks/>
        Public Overloads Sub SendSMSAsync(ByVal username As String, ByVal password As String, ByVal allnumbers() As String, ByVal allsms() As String, ByVal allfrom() As String)
            Me.SendSMSAsync(username, password, allnumbers, allsms, allfrom, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SendSMSAsync(ByVal username As String, ByVal password As String, ByVal allnumbers() As String, ByVal allsms() As String, ByVal allfrom() As String, ByVal userState As Object)
            If (Me.SendSMSOperationCompleted Is Nothing) Then
                Me.SendSMSOperationCompleted = AddressOf Me.OnSendSMSOperationCompleted
            End If
            Me.InvokeAsync("SendSMS", New Object() {username, password, allnumbers, allsms, allfrom}, Me.SendSMSOperationCompleted, userState)
        End Sub
        
        Private Sub OnSendSMSOperationCompleted(ByVal arg As Object)
            If (Not (Me.SendSMSCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SendSMSCompleted(Me, New SendSMSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendSMSEx", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function SendSMSEx(ByVal username As String, ByVal password As String, ByVal allnumbers() As String, ByVal allsms() As String, ByVal allfrom() As String, ByVal scheduleTime As Date) As Integer()
            Dim results() As Object = Me.Invoke("SendSMSEx", New Object() {username, password, allnumbers, allsms, allfrom, scheduleTime})
            Return CType(results(0),Integer())
        End Function
        
        '''<remarks/>
        Public Overloads Sub SendSMSExAsync(ByVal username As String, ByVal password As String, ByVal allnumbers() As String, ByVal allsms() As String, ByVal allfrom() As String, ByVal scheduleTime As Date)
            Me.SendSMSExAsync(username, password, allnumbers, allsms, allfrom, scheduleTime, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SendSMSExAsync(ByVal username As String, ByVal password As String, ByVal allnumbers() As String, ByVal allsms() As String, ByVal allfrom() As String, ByVal scheduleTime As Date, ByVal userState As Object)
            If (Me.SendSMSExOperationCompleted Is Nothing) Then
                Me.SendSMSExOperationCompleted = AddressOf Me.OnSendSMSExOperationCompleted
            End If
            Me.InvokeAsync("SendSMSEx", New Object() {username, password, allnumbers, allsms, allfrom, scheduleTime}, Me.SendSMSExOperationCompleted, userState)
        End Sub
        
        Private Sub OnSendSMSExOperationCompleted(ByVal arg As Object)
            If (Not (Me.SendSMSExCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SendSMSExCompleted(Me, New SendSMSExCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSMSStatus", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetSMSStatus(ByVal username As String, ByVal password As String, ByVal messageIDs() As Integer) As MessageStatus()
            Dim results() As Object = Me.Invoke("GetSMSStatus", New Object() {username, password, messageIDs})
            Return CType(results(0),MessageStatus())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetSMSStatusAsync(ByVal username As String, ByVal password As String, ByVal messageIDs() As Integer)
            Me.GetSMSStatusAsync(username, password, messageIDs, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetSMSStatusAsync(ByVal username As String, ByVal password As String, ByVal messageIDs() As Integer, ByVal userState As Object)
            If (Me.GetSMSStatusOperationCompleted Is Nothing) Then
                Me.GetSMSStatusOperationCompleted = AddressOf Me.OnGetSMSStatusOperationCompleted
            End If
            Me.InvokeAsync("GetSMSStatus", New Object() {username, password, messageIDs}, Me.GetSMSStatusOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetSMSStatusOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetSMSStatusCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetSMSStatusCompleted(Me, New GetSMSStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ImportContact", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub ImportContact(ByVal username As String, ByVal password As String, ByVal contacts() As Contact, ByVal groups() As String)
            Me.Invoke("ImportContact", New Object() {username, password, contacts, groups})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ImportContactAsync(ByVal username As String, ByVal password As String, ByVal contacts() As Contact, ByVal groups() As String)
            Me.ImportContactAsync(username, password, contacts, groups, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ImportContactAsync(ByVal username As String, ByVal password As String, ByVal contacts() As Contact, ByVal groups() As String, ByVal userState As Object)
            If (Me.ImportContactOperationCompleted Is Nothing) Then
                Me.ImportContactOperationCompleted = AddressOf Me.OnImportContactOperationCompleted
            End If
            Me.InvokeAsync("ImportContact", New Object() {username, password, contacts, groups}, Me.ImportContactOperationCompleted, userState)
        End Sub
        
        Private Sub OnImportContactOperationCompleted(ByVal arg As Object)
            If (Not (Me.ImportContactCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ImportContactCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddContact", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function AddContact(ByVal username As String, ByVal password As String, ByVal contact As Contact, ByVal addressGroups As String, ByRef ID As Integer) As AddContactResults
            Dim results() As Object = Me.Invoke("AddContact", New Object() {username, password, contact, addressGroups})
            ID = CType(results(1),Integer)
            Return CType(results(0),AddContactResults)
        End Function
        
        '''<remarks/>
        Public Overloads Sub AddContactAsync(ByVal username As String, ByVal password As String, ByVal contact As Contact, ByVal addressGroups As String)
            Me.AddContactAsync(username, password, contact, addressGroups, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AddContactAsync(ByVal username As String, ByVal password As String, ByVal contact As Contact, ByVal addressGroups As String, ByVal userState As Object)
            If (Me.AddContactOperationCompleted Is Nothing) Then
                Me.AddContactOperationCompleted = AddressOf Me.OnAddContactOperationCompleted
            End If
            Me.InvokeAsync("AddContact", New Object() {username, password, contact, addressGroups}, Me.AddContactOperationCompleted, userState)
        End Sub
        
        Private Sub OnAddContactOperationCompleted(ByVal arg As Object)
            If (Not (Me.AddContactCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AddContactCompleted(Me, New AddContactCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateContact", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function UpdateContact(ByVal username As String, ByVal password As String, ByVal contact As Contact) As UpdateContactResults
            Dim results() As Object = Me.Invoke("UpdateContact", New Object() {username, password, contact})
            Return CType(results(0),UpdateContactResults)
        End Function
        
        '''<remarks/>
        Public Overloads Sub UpdateContactAsync(ByVal username As String, ByVal password As String, ByVal contact As Contact)
            Me.UpdateContactAsync(username, password, contact, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UpdateContactAsync(ByVal username As String, ByVal password As String, ByVal contact As Contact, ByVal userState As Object)
            If (Me.UpdateContactOperationCompleted Is Nothing) Then
                Me.UpdateContactOperationCompleted = AddressOf Me.OnUpdateContactOperationCompleted
            End If
            Me.InvokeAsync("UpdateContact", New Object() {username, password, contact}, Me.UpdateContactOperationCompleted, userState)
        End Sub
        
        Private Sub OnUpdateContactOperationCompleted(ByVal arg As Object)
            If (Not (Me.UpdateContactCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UpdateContactCompleted(Me, New UpdateContactCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Echo", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Echo(ByVal handshake As String) As String
            Dim results() As Object = Me.Invoke("Echo", New Object() {handshake})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EchoAsync(ByVal handshake As String)
            Me.EchoAsync(handshake, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EchoAsync(ByVal handshake As String, ByVal userState As Object)
            If (Me.EchoOperationCompleted Is Nothing) Then
                Me.EchoOperationCompleted = AddressOf Me.OnEchoOperationCompleted
            End If
            Me.InvokeAsync("Echo", New Object() {handshake}, Me.EchoOperationCompleted, userState)
        End Sub
        
        Private Sub OnEchoOperationCompleted(ByVal arg As Object)
            If (Not (Me.EchoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EchoCompleted(Me, New EchoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CheckUpdates", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CheckUpdates(ByVal currentVersion As String) As String
            Dim results() As Object = Me.Invoke("CheckUpdates", New Object() {currentVersion})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CheckUpdatesAsync(ByVal currentVersion As String)
            Me.CheckUpdatesAsync(currentVersion, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CheckUpdatesAsync(ByVal currentVersion As String, ByVal userState As Object)
            If (Me.CheckUpdatesOperationCompleted Is Nothing) Then
                Me.CheckUpdatesOperationCompleted = AddressOf Me.OnCheckUpdatesOperationCompleted
            End If
            Me.InvokeAsync("CheckUpdates", New Object() {currentVersion}, Me.CheckUpdatesOperationCompleted, userState)
        End Sub
        
        Private Sub OnCheckUpdatesOperationCompleted(ByVal arg As Object)
            If (Not (Me.CheckUpdatesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CheckUpdatesCompleted(Me, New CheckUpdatesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUpdateURL", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetUpdateURL(ByVal currentVersion As String) As String
            Dim results() As Object = Me.Invoke("GetUpdateURL", New Object() {currentVersion})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetUpdateURLAsync(ByVal currentVersion As String)
            Me.GetUpdateURLAsync(currentVersion, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetUpdateURLAsync(ByVal currentVersion As String, ByVal userState As Object)
            If (Me.GetUpdateURLOperationCompleted Is Nothing) Then
                Me.GetUpdateURLOperationCompleted = AddressOf Me.OnGetUpdateURLOperationCompleted
            End If
            Me.InvokeAsync("GetUpdateURL", New Object() {currentVersion}, Me.GetUpdateURLOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetUpdateURLOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetUpdateURLCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetUpdateURLCompleted(Me, New GetUpdateURLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18060"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/")>  _
    Public Enum UpdateCustomerPasswordResults
        
        '''<remarks/>
        Success
        
        '''<remarks/>
        Failure
        
        '''<remarks/>
        InvalidAccount
        
        '''<remarks/>
        UserNotAReseller
        
        '''<remarks/>
        InvalidCustomerDetails
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18060"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/")>  _
    Public Enum AccessPermissions
        
        '''<remarks/>
        ManageAddressBook
        
        '''<remarks/>
        CreateContact
        
        '''<remarks/>
        EditContact
        
        '''<remarks/>
        DeleteContact
        
        '''<remarks/>
        ImportContact
        
        '''<remarks/>
        ExportContact
        
        '''<remarks/>
        ImportGroup
        
        '''<remarks/>
        DeduplicateContact
        
        '''<remarks/>
        ManageUDF
        
        '''<remarks/>
        ManageDND
        
        '''<remarks/>
        CreateGroup
        
        '''<remarks/>
        CreateSMS
        
        '''<remarks/>
        CreateSMSFromFile
        
        '''<remarks/>
        ManageSchedules
        
        '''<remarks/>
        ManageTemplates
        
        '''<remarks/>
        ManageTags
        
        '''<remarks/>
        ManageSenderNames
        
        '''<remarks/>
        ManageKeywords
        
        '''<remarks/>
        ManageRules
        
        '''<remarks/>
        CreateFolder
        
        '''<remarks/>
        ManageFolders
        
        '''<remarks/>
        ManageCredits
        
        '''<remarks/>
        ViewLicenses
        
        '''<remarks/>
        ReportsDeliveryRatio
        
        '''<remarks/>
        ReportsDeliveryFailure
        
        '''<remarks/>
        ReportsSMSSummary
        
        '''<remarks/>
        Xapps
        
        '''<remarks/>
        QuickBar
        
        '''<remarks/>
        DeveloperResources
        
        '''<remarks/>
        ChangePassword
        
        '''<remarks/>
        ManageSecurity
        
        '''<remarks/>
        CreateUser
        
        '''<remarks/>
        ManageUsers
        
        '''<remarks/>
        CopyPermissions
        
        '''<remarks/>
        UserPreferences
        
        '''<remarks/>
        AccountInformation
        
        '''<remarks/>
        ViewTools
        
        '''<remarks/>
        ViewReports
        
        '''<remarks/>
        ViewAccounts
        
        '''<remarks/>
        BuyNow
        
        '''<remarks/>
        PerformaInvoices
        
        '''<remarks/>
        Invoices
        
        '''<remarks/>
        CreditNotes
        
        '''<remarks/>
        Receipts
        
        '''<remarks/>
        SMSTariff
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18060"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/")>  _
    Public Enum UpdatePermissionsResults
        
        '''<remarks/>
        Success
        
        '''<remarks/>
        Failure
        
        '''<remarks/>
        InvalidAccount
        
        '''<remarks/>
        UserNotAReseller
        
        '''<remarks/>
        InvalidCustomerDetails
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18060"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/")>  _
    Public Enum AddCustomerResults
        
        '''<remarks/>
        Success
        
        '''<remarks/>
        Failure
        
        '''<remarks/>
        InvalidAccount
        
        '''<remarks/>
        MobileNumberExists
        
        '''<remarks/>
        EmailExists
        
        '''<remarks/>
        UserIDExists
        
        '''<remarks/>
        InvalidCountry
        
        '''<remarks/>
        UnknownError
        
        '''<remarks/>
        UserNotAReseller
        
        '''<remarks/>
        CannotMakeResellerUserInvalid
        
        '''<remarks/>
        CannotMakeResellerNoPrimaryID
        
        '''<remarks/>
        CannotMakeResellerUserNotInAccount
        
        '''<remarks/>
        CannotMakeResellerAlreadyReseller
        
        '''<remarks/>
        CannotMakeResellerUnknownError
        
        '''<remarks/>
        SuccessInvalidSenderName
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18060"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/")>  _
    Public Enum TransferCreditsResults
        
        '''<remarks/>
        Success
        
        '''<remarks/>
        Failure
        
        '''<remarks/>
        InvalidAccount
        
        '''<remarks/>
        InvalidCustomerDetails
        
        '''<remarks/>
        InvalidCreditAmountSpecified
        
        '''<remarks/>
        InsufficientBalance
        
        '''<remarks/>
        CannotTransferToSelf
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18060"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/")>  _
    Public Enum SetDefaultSenderNameResults
        
        '''<remarks/>
        Success
        
        '''<remarks/>
        InvalidAccount
        
        '''<remarks/>
        InvalidCustomerDetails
        
        '''<remarks/>
        InvalidSenderName
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18060"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/")>  _
    Public Enum DeleteSenderNameResults
        
        '''<remarks/>
        Success
        
        '''<remarks/>
        InvalidAccount
        
        '''<remarks/>
        InvalidCustomerDetails
        
        '''<remarks/>
        InvalidSenderName
        
        '''<remarks/>
        CannotDeleteDefaultSenderName
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18060"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/")>  _
    Partial Public Class SenderNames
        
        Private idField As Integer
        
        Private userIDField As Integer
        
        Private senderNameField As String
        
        Private statusField As RegistrationStatus
        
        Private requestedDateField As Date
        
        Private approvedDateField As Date
        
        Private approvedByField As String
        
        Private reasonField As String
        
        Private isDeletedField As Boolean
        
        Private customerField As String
        
        Private createdByField As String
        
        Private createdOnField As Date
        
        Private modifiedByField As String
        
        Private modifiedOnField As Date
        
        '''<remarks/>
        Public Property ID() As Integer
            Get
                Return Me.idField
            End Get
            Set
                Me.idField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UserID() As Integer
            Get
                Return Me.userIDField
            End Get
            Set
                Me.userIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property SenderName() As String
            Get
                Return Me.senderNameField
            End Get
            Set
                Me.senderNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Status() As RegistrationStatus
            Get
                Return Me.statusField
            End Get
            Set
                Me.statusField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property RequestedDate() As Date
            Get
                Return Me.requestedDateField
            End Get
            Set
                Me.requestedDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ApprovedDate() As Date
            Get
                Return Me.approvedDateField
            End Get
            Set
                Me.approvedDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ApprovedBy() As String
            Get
                Return Me.approvedByField
            End Get
            Set
                Me.approvedByField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Reason() As String
            Get
                Return Me.reasonField
            End Get
            Set
                Me.reasonField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property IsDeleted() As Boolean
            Get
                Return Me.isDeletedField
            End Get
            Set
                Me.isDeletedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Customer() As String
            Get
                Return Me.customerField
            End Get
            Set
                Me.customerField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CreatedBy() As String
            Get
                Return Me.createdByField
            End Get
            Set
                Me.createdByField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CreatedOn() As Date
            Get
                Return Me.createdOnField
            End Get
            Set
                Me.createdOnField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ModifiedBy() As String
            Get
                Return Me.modifiedByField
            End Get
            Set
                Me.modifiedByField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ModifiedOn() As Date
            Get
                Return Me.modifiedOnField
            End Get
            Set
                Me.modifiedOnField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18060"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/")>  _
    Public Enum RegistrationStatus
        
        '''<remarks/>
        Approved
        
        '''<remarks/>
        Pending
        
        '''<remarks/>
        Rejected
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18060"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/")>  _
    Partial Public Class CustomAttributes
        
        Private nameField As String
        
        Private displayField As String
        
        Private valueField As String
        
        '''<remarks/>
        Public Property Name() As String
            Get
                Return Me.nameField
            End Get
            Set
                Me.nameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Display() As String
            Get
                Return Me.displayField
            End Get
            Set
                Me.displayField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Value() As String
            Get
                Return Me.valueField
            End Get
            Set
                Me.valueField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18060"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/")>  _
    Partial Public Class Contact
        
        Private idField As Integer
        
        Private userIDField As Integer
        
        Private firstNameField As String
        
        Private mobileField As Long
        
        Private lastNameField As String
        
        Private middleNameField As String
        
        Private maleField As Boolean
        
        Private dateOfBirthField As Date
        
        Private bloodGroupField As String
        
        Private addressLine1Field As String
        
        Private addressLine2Field As String
        
        Private addressLine3Field As String
        
        Private cityField As String
        
        Private stateField As String
        
        Private countryField As String
        
        Private postalCodeField As String
        
        Private telephoneField As String
        
        Private telephone2Field As String
        
        Private faxField As String
        
        Private emailOfficialField As String
        
        Private emailPersonalField As String
        
        Private websiteField As String
        
        Private designationField As String
        
        Private departmentField As String
        
        Private companyField As String
        
        Private remarksField As String
        
        Private expiresOnField As Date
        
        Private effectiveOnField As Date
        
        Private activeField As Boolean
        
        Private createdOnField As Date
        
        Private modifiedOnField As System.Nullable(Of Date)
        
        Private createdByField As String
        
        Private modifiedByField As String
        
        Private uIDField As String
        
        Private pANField As String
        
        Private customPropertiesField() As CustomAttributes
        
        '''<remarks/>
        Public Property ID() As Integer
            Get
                Return Me.idField
            End Get
            Set
                Me.idField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UserID() As Integer
            Get
                Return Me.userIDField
            End Get
            Set
                Me.userIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property FirstName() As String
            Get
                Return Me.firstNameField
            End Get
            Set
                Me.firstNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Mobile() As Long
            Get
                Return Me.mobileField
            End Get
            Set
                Me.mobileField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property LastName() As String
            Get
                Return Me.lastNameField
            End Get
            Set
                Me.lastNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property MiddleName() As String
            Get
                Return Me.middleNameField
            End Get
            Set
                Me.middleNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Male() As Boolean
            Get
                Return Me.maleField
            End Get
            Set
                Me.maleField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DateOfBirth() As Date
            Get
                Return Me.dateOfBirthField
            End Get
            Set
                Me.dateOfBirthField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property BloodGroup() As String
            Get
                Return Me.bloodGroupField
            End Get
            Set
                Me.bloodGroupField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property AddressLine1() As String
            Get
                Return Me.addressLine1Field
            End Get
            Set
                Me.addressLine1Field = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property AddressLine2() As String
            Get
                Return Me.addressLine2Field
            End Get
            Set
                Me.addressLine2Field = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property AddressLine3() As String
            Get
                Return Me.addressLine3Field
            End Get
            Set
                Me.addressLine3Field = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property City() As String
            Get
                Return Me.cityField
            End Get
            Set
                Me.cityField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property State() As String
            Get
                Return Me.stateField
            End Get
            Set
                Me.stateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Country() As String
            Get
                Return Me.countryField
            End Get
            Set
                Me.countryField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PostalCode() As String
            Get
                Return Me.postalCodeField
            End Get
            Set
                Me.postalCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Telephone() As String
            Get
                Return Me.telephoneField
            End Get
            Set
                Me.telephoneField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Telephone2() As String
            Get
                Return Me.telephone2Field
            End Get
            Set
                Me.telephone2Field = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Fax() As String
            Get
                Return Me.faxField
            End Get
            Set
                Me.faxField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property EmailOfficial() As String
            Get
                Return Me.emailOfficialField
            End Get
            Set
                Me.emailOfficialField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property EmailPersonal() As String
            Get
                Return Me.emailPersonalField
            End Get
            Set
                Me.emailPersonalField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Website() As String
            Get
                Return Me.websiteField
            End Get
            Set
                Me.websiteField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Designation() As String
            Get
                Return Me.designationField
            End Get
            Set
                Me.designationField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Department() As String
            Get
                Return Me.departmentField
            End Get
            Set
                Me.departmentField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Company() As String
            Get
                Return Me.companyField
            End Get
            Set
                Me.companyField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Remarks() As String
            Get
                Return Me.remarksField
            End Get
            Set
                Me.remarksField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ExpiresOn() As Date
            Get
                Return Me.expiresOnField
            End Get
            Set
                Me.expiresOnField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property EffectiveOn() As Date
            Get
                Return Me.effectiveOnField
            End Get
            Set
                Me.effectiveOnField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Active() As Boolean
            Get
                Return Me.activeField
            End Get
            Set
                Me.activeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CreatedOn() As Date
            Get
                Return Me.createdOnField
            End Get
            Set
                Me.createdOnField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property ModifiedOn() As System.Nullable(Of Date)
            Get
                Return Me.modifiedOnField
            End Get
            Set
                Me.modifiedOnField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CreatedBy() As String
            Get
                Return Me.createdByField
            End Get
            Set
                Me.createdByField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ModifiedBy() As String
            Get
                Return Me.modifiedByField
            End Get
            Set
                Me.modifiedByField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UID() As String
            Get
                Return Me.uIDField
            End Get
            Set
                Me.uIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PAN() As String
            Get
                Return Me.pANField
            End Get
            Set
                Me.pANField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CustomProperties() As CustomAttributes()
            Get
                Return Me.customPropertiesField
            End Get
            Set
                Me.customPropertiesField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18060"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/")>  _
    Partial Public Class MessageStatus
        
        Private statusField As MessageStatusValues
        
        Private deliveredField As String
        
        Private reasonField As String
        
        Private idField As Integer
        
        '''<remarks/>
        Public Property Status() As MessageStatusValues
            Get
                Return Me.statusField
            End Get
            Set
                Me.statusField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Delivered() As String
            Get
                Return Me.deliveredField
            End Get
            Set
                Me.deliveredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Reason() As String
            Get
                Return Me.reasonField
            End Get
            Set
                Me.reasonField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ID() As Integer
            Get
                Return Me.idField
            End Get
            Set
                Me.idField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18060"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/")>  _
    Public Enum MessageStatusValues
        
        '''<remarks/>
        Queued
        
        '''<remarks/>
        Processing
        
        '''<remarks/>
        Sent
        
        '''<remarks/>
        Delivered
        
        '''<remarks/>
        Failed
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18060"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/")>  _
    Partial Public Class IncomingMessage
        
        Private receivedDateField As Date
        
        Private contentField As String
        
        Private senderField As String
        
        Private idField As String
        
        Private serviceProviderField As String
        
        Private areaOfOperationField As String
        
        Private technologyField As String
        
        '''<remarks/>
        Public Property ReceivedDate() As Date
            Get
                Return Me.receivedDateField
            End Get
            Set
                Me.receivedDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Content() As String
            Get
                Return Me.contentField
            End Get
            Set
                Me.contentField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Sender() As String
            Get
                Return Me.senderField
            End Get
            Set
                Me.senderField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ID() As String
            Get
                Return Me.idField
            End Get
            Set
                Me.idField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ServiceProvider() As String
            Get
                Return Me.serviceProviderField
            End Get
            Set
                Me.serviceProviderField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property AreaOfOperation() As String
            Get
                Return Me.areaOfOperationField
            End Get
            Set
                Me.areaOfOperationField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Technology() As String
            Get
                Return Me.technologyField
            End Get
            Set
                Me.technologyField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18060"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/")>  _
    Public Enum AddContactResults
        
        '''<remarks/>
        Success
        
        '''<remarks/>
        Failure
        
        '''<remarks/>
        ContactDataInvalid
        
        '''<remarks/>
        InvalidAccount
        
        '''<remarks/>
        UnknownError
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18060"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/")>  _
    Public Enum UpdateContactResults
        
        '''<remarks/>
        Success
        
        '''<remarks/>
        Failure
        
        '''<remarks/>
        ContactDataInvalid
        
        '''<remarks/>
        InvalidAccount
        
        '''<remarks/>
        UnknownError
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub GetBalanceCompletedEventHandler(ByVal sender As Object, ByVal e As GetBalanceCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetBalanceCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub GetCustomerBalanceCompletedEventHandler(ByVal sender As Object, ByVal e As GetCustomerBalanceCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetCustomerBalanceCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub UpdateCustomerPasswordCompletedEventHandler(ByVal sender As Object, ByVal e As UpdateCustomerPasswordCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class UpdateCustomerPasswordCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As UpdateCustomerPasswordResults
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),UpdateCustomerPasswordResults)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub UpdateCustomerPermissionsCompletedEventHandler(ByVal sender As Object, ByVal e As UpdateCustomerPermissionsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class UpdateCustomerPermissionsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As UpdatePermissionsResults
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),UpdatePermissionsResults)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub CreateCustomerCompletedEventHandler(ByVal sender As Object, ByVal e As CreateCustomerCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CreateCustomerCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As AddCustomerResults
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),AddCustomerResults)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub TransferCreditsCompletedEventHandler(ByVal sender As Object, ByVal e As TransferCreditsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class TransferCreditsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As TransferCreditsResults
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),TransferCreditsResults)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub RequestSenderNameCompletedEventHandler(ByVal sender As Object, ByVal e As RequestSenderNameCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class RequestSenderNameCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub SetDefaultSenderNameCompletedEventHandler(ByVal sender As Object, ByVal e As SetDefaultSenderNameCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SetDefaultSenderNameCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub SetDefaultSubAccountSenderNameCompletedEventHandler(ByVal sender As Object, ByVal e As SetDefaultSubAccountSenderNameCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SetDefaultSubAccountSenderNameCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As SetDefaultSenderNameResults
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),SetDefaultSenderNameResults)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub SetSubAccountPasswordCompletedEventHandler(ByVal sender As Object, ByVal e As SetSubAccountPasswordCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SetSubAccountPasswordCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As UpdateCustomerPasswordResults
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),UpdateCustomerPasswordResults)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub DeleteSubAccountSenderNameCompletedEventHandler(ByVal sender As Object, ByVal e As DeleteSubAccountSenderNameCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class DeleteSubAccountSenderNameCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As DeleteSenderNameResults
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),DeleteSenderNameResults)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub DeleteSenderNameCompletedEventHandler(ByVal sender As Object, ByVal e As DeleteSenderNameCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class DeleteSenderNameCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub GetSenderNamesCompletedEventHandler(ByVal sender As Object, ByVal e As GetSenderNamesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetSenderNamesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As SenderNames()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),SenderNames())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub GetDefaultSenderNameCompletedEventHandler(ByVal sender As Object, ByVal e As GetDefaultSenderNameCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetDefaultSenderNameCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub ReadSMSCompletedEventHandler(ByVal sender As Object, ByVal e As ReadSMSCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ReadSMSCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As IncomingMessage()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),IncomingMessage())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub DeleteSMSCompletedEventHandler(ByVal sender As Object, ByVal e As DeleteSMSCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class DeleteSMSCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub SendSMSCompletedEventHandler(ByVal sender As Object, ByVal e As SendSMSCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SendSMSCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub SendSMSExCompletedEventHandler(ByVal sender As Object, ByVal e As SendSMSExCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SendSMSExCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub GetSMSStatusCompletedEventHandler(ByVal sender As Object, ByVal e As GetSMSStatusCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetSMSStatusCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As MessageStatus()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),MessageStatus())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub ImportContactCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub AddContactCompletedEventHandler(ByVal sender As Object, ByVal e As AddContactCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class AddContactCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As AddContactResults
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),AddContactResults)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property ID() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub UpdateContactCompletedEventHandler(ByVal sender As Object, ByVal e As UpdateContactCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class UpdateContactCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As UpdateContactResults
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),UpdateContactResults)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub EchoCompletedEventHandler(ByVal sender As Object, ByVal e As EchoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EchoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub CheckUpdatesCompletedEventHandler(ByVal sender As Object, ByVal e As CheckUpdatesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CheckUpdatesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub GetUpdateURLCompletedEventHandler(ByVal sender As Object, ByVal e As GetUpdateURLCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetUpdateURLCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
End Namespace
